{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1","program":"/home/sna/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","kurbo","--edition=2018","/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=844222ebabb933da","-C","extra-filename=-844222ebabb933da","--out-dir","/home/sna/project/koompi-desktop/desktop/target/rls/debug/deps","-L","dependency=/home/sna/project/koompi-desktop/desktop/target/rls/debug/deps","--extern","arrayvec=/home/sna/project/koompi-desktop/desktop/target/rls/debug/deps/libarrayvec-a1cf673f0d1892c3.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/sna/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/sna/project/koompi-desktop/desktop/target/rls/debug/deps/libkurbo-844222ebabb933da.rmeta"},"prelude":{"crate_id":{"name":"kurbo","disambiguator":[10112516520075722064,13385797210340621727]},"crate_root":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src","external_crates":[{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12933703438800314702,5774803219644544316]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[18134888982608726624,15478788479473023395]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6673302632599048863,4691371433878452070]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11457885127507258025,479752930606968628]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6007655421670680970,17748288058820543149]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4051320655186846034,14773827427477085591]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3672675044024306215,7179779047398453100]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14739525726177289408,3061276640434149652]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2246841610299105657,12905561680815043912]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4036557704906104068,994131407893854156]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[7443407023664770875,11250036483448109314]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[10148669557414888454,6400214184476534778]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[4006540472161665961,15205760237192158299]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[16043199729901662453,7825522302763349882]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[5738570549504868290,14845130516100231771]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[6807687926185025542,9498922200428406688]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[6171827839412267364,4338689175470013405]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","num":18,"id":{"name":"arrayvec","disambiguator":[15037931778853749287,9533841721777670591]}}],"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":593,"byte_end":3722,"line_start":15,"line_end":121,"column_start":1,"column_end":24}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":3269,"byte_end":3270,"line_start":104,"line_end":104,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"Affine","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":3292,"byte_end":3293,"line_start":105,"line_end":105,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"Arc, ArcAppendIter","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":3319,"byte_end":3320,"line_start":106,"line_end":106,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"Segments, PathSeg, BezPath, PathEl, segments","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":3345,"byte_end":3346,"line_start":107,"line_end":107,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"Circle","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":3373,"byte_end":3374,"line_start":108,"line_end":108,"column_start":26,"column_end":27},"alias_span":null,"name":"*","value":"CubicBez","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":3400,"byte_end":3401,"line_start":109,"line_end":109,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"Ellipse","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":3426,"byte_end":3427,"line_start":110,"line_end":110,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"Insets","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":3450,"byte_end":3451,"line_start":111,"line_end":111,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"Line","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":3481,"byte_end":3482,"line_start":112,"line_end":112,"column_start":29,"column_end":30},"alias_span":null,"name":"*","value":"DEFAULT_ACCURACY, ParamCurveCurvature, ParamCurveArea, ParamCurveDeriv, ParamCurveExtrema, ParamCurve, MAX_EXTREMA, ParamCurveNearest, ParamCurveArclen","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":3506,"byte_end":3507,"line_start":113,"line_end":113,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"Point","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":3533,"byte_end":3534,"line_start":114,"line_end":114,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"QuadBez","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":3557,"byte_end":3558,"line_start":115,"line_end":115,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"Rect","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":3589,"byte_end":3590,"line_start":116,"line_end":116,"column_start":30,"column_end":31},"alias_span":null,"name":"*","value":"RoundedRect","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":3614,"byte_end":3615,"line_start":117,"line_end":117,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"Shape","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":3638,"byte_end":3639,"line_start":118,"line_end":118,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"Size","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":3661,"byte_end":3662,"line_start":119,"line_end":119,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":3696,"byte_end":3697,"line_start":120,"line_end":120,"column_start":33,"column_end":34},"alias_span":null,"name":"*","value":"TranslateScale","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":3720,"byte_end":3721,"line_start":121,"line_end":121,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"Vec2","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":593,"byte_end":3722,"line_start":15,"line_end":121,"column_start":1,"column_end":24},"name":"","qualname":"::","value":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":42},{"krate":0,"index":80},{"krate":0,"index":266},{"krate":0,"index":340},{"krate":0,"index":359},{"krate":0,"index":437},{"krate":0,"index":489},{"krate":0,"index":528},{"krate":0,"index":606},{"krate":0,"index":640},{"krate":0,"index":693},{"krate":0,"index":769},{"krate":0,"index":858},{"krate":0,"index":910},{"krate":0,"index":955},{"krate":0,"index":1021},{"krate":0,"index":1073},{"krate":0,"index":1143},{"krate":0,"index":1210},{"krate":0,"index":1211},{"krate":0,"index":1212},{"krate":0,"index":1213},{"krate":0,"index":1214},{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1217},{"krate":0,"index":1218},{"krate":0,"index":1219},{"krate":0,"index":1220},{"krate":0,"index":1221},{"krate":0,"index":1222},{"krate":0,"index":1223},{"krate":0,"index":1224},{"krate":0,"index":1225},{"krate":0,"index":1226},{"krate":0,"index":1227}],"decl_id":null,"docs":" 2D geometry, with a focus on curves.","sig":null,"attributes":[{"value":"/ 2D geometry, with a focus on curves.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":593,"byte_end":633,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":634,"byte_end":637,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The kurbo library contains data structures and algorithms for curves and","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":638,"byte_end":714,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ vector paths. It was designed to serve the needs of 2D graphics applications,","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":715,"byte_end":796,"line_start":18,"line_end":18,"column_start":1,"column_end":82}},{"value":"/ but it is intended to be general enough to be useful for other applications.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":797,"byte_end":877,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":878,"byte_end":881,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Kurbo is designed to be used by [`Piet`], a crate for drawing 2D graphics,","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":882,"byte_end":960,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ and is in turn used by [`Druid`], a cross-platform GUI toolkit.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":961,"byte_end":1028,"line_start":22,"line_end":22,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":1029,"byte_end":1032,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":1033,"byte_end":1047,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":1048,"byte_end":1051,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Basic UI-style geometry:","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":1052,"byte_end":1080,"line_start":26,"line_end":26,"column_start":1,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":1081,"byte_end":1088,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ use kurbo::{Insets, Point, Rect, Size, Vec2};","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":1089,"byte_end":1138,"line_start":28,"line_end":28,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":1139,"byte_end":1142,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let pt = Point::new(10.0, 10.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":1143,"byte_end":1179,"line_start":30,"line_end":30,"column_start":1,"column_end":37}},{"value":"/ let vector = Vec2::new(5.0, -5.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":1180,"byte_end":1218,"line_start":31,"line_end":31,"column_start":1,"column_end":39}},{"value":"/ let pt2 = pt + vector;","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":1219,"byte_end":1245,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"/ assert_eq!(pt2, Point::new(15.0, 5.0));","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":1246,"byte_end":1289,"line_start":33,"line_end":33,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":1290,"byte_end":1293,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let rect = Rect::from_points(pt, pt2);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":1294,"byte_end":1336,"line_start":35,"line_end":35,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(rect, Rect::from_origin_size((10.0, 5.0), (5.0, 5.0)));","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":1337,"byte_end":1407,"line_start":36,"line_end":36,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":1408,"byte_end":1411,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let insets = Insets::uniform(1.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":1412,"byte_end":1450,"line_start":38,"line_end":38,"column_start":1,"column_end":39}},{"value":"/ let inset_rect = rect - insets;","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":1451,"byte_end":1486,"line_start":39,"line_end":39,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(inset_rect.size(), Size::new(3.0, 3.0));","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":1487,"byte_end":1542,"line_start":40,"line_end":40,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":1543,"byte_end":1550,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":1551,"byte_end":1554,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Finding the closest position on a [`Shape`]'s perimeter to a [`Point`]:","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":1555,"byte_end":1630,"line_start":43,"line_end":43,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":1631,"byte_end":1634,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":1635,"byte_end":1642,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ use kurbo::{Circle, ParamCurve, ParamCurveNearest, Point, Shape};","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":1643,"byte_end":1712,"line_start":46,"line_end":46,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":1713,"byte_end":1716,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ const DESIRED_ACCURACY: f64 = 0.1;","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":1717,"byte_end":1755,"line_start":48,"line_end":48,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":1756,"byte_end":1759,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ /// Given a shape and a point, returns the closest position on the shape's","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":1760,"byte_end":1838,"line_start":50,"line_end":50,"column_start":1,"column_end":79}},{"value":"/ /// parimeter, or `None` if the shape is malformed.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":1839,"byte_end":1894,"line_start":51,"line_end":51,"column_start":1,"column_end":56}},{"value":"/ fn closest_perimeter_point(shape: impl Shape, pt: Point) -> Option<Point> {","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":1895,"byte_end":1974,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/     let mut best: Option<(Point, f64)> = None;","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":1975,"byte_end":2025,"line_start":53,"line_end":53,"column_start":1,"column_end":51}},{"value":"/     for segment in shape.path_segments(DESIRED_ACCURACY) {","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":2026,"byte_end":2088,"line_start":54,"line_end":54,"column_start":1,"column_end":63}},{"value":"/         let (t, distance) = segment.nearest(pt, DESIRED_ACCURACY);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":2089,"byte_end":2159,"line_start":55,"line_end":55,"column_start":1,"column_end":71}},{"value":"/         if best.map(|(_, best_d)| distance < best_d).unwrap_or(true) {","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":2160,"byte_end":2234,"line_start":56,"line_end":56,"column_start":1,"column_end":75}},{"value":"/             best = Some((segment.eval(t), distance))","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":2235,"byte_end":2291,"line_start":57,"line_end":57,"column_start":1,"column_end":57}},{"value":"/         }","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":2292,"byte_end":2305,"line_start":58,"line_end":58,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":2306,"byte_end":2315,"line_start":59,"line_end":59,"column_start":1,"column_end":10}},{"value":"/     best.map(|(point, _)| point)","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":2316,"byte_end":2352,"line_start":60,"line_end":60,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":2353,"byte_end":2358,"line_start":61,"line_end":61,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":2359,"byte_end":2362,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ let circle = Circle::new((5.0, 5.0), 5.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":2363,"byte_end":2409,"line_start":63,"line_end":63,"column_start":1,"column_end":47}},{"value":"/ let hit_point = Point::new(5.0, -2.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":2410,"byte_end":2452,"line_start":64,"line_end":64,"column_start":1,"column_end":43}},{"value":"/ let expectation = Point::new(5.0, 0.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":2453,"byte_end":2496,"line_start":65,"line_end":65,"column_start":1,"column_end":44}},{"value":"/ let hit = closest_perimeter_point(circle, hit_point).unwrap();","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":2497,"byte_end":2563,"line_start":66,"line_end":66,"column_start":1,"column_end":67}},{"value":"/ assert!(hit.distance(expectation) <= DESIRED_ACCURACY);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":2564,"byte_end":2623,"line_start":67,"line_end":67,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":2624,"byte_end":2631,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":2632,"byte_end":2635,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`Shape`]: trait.Shape.html","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":2636,"byte_end":2667,"line_start":70,"line_end":70,"column_start":1,"column_end":32}},{"value":"/ [`Point`]: struct.Point.html","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":2668,"byte_end":2700,"line_start":71,"line_end":71,"column_start":1,"column_end":33}},{"value":"/ [`Piet`]: https://docs.rs/piet","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":2701,"byte_end":2735,"line_start":72,"line_end":72,"column_start":1,"column_end":35}},{"value":"/ [`Druid`]: https://docs.rs/druid","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":2736,"byte_end":2772,"line_start":73,"line_end":73,"column_start":1,"column_end":37}},{"value":"forbid(unsafe_code)","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":2774,"byte_end":2797,"line_start":75,"line_end":75,"column_start":1,"column_end":24}},{"value":"deny(missing_docs, clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":2798,"byte_end":2856,"line_start":76,"line_end":76,"column_start":1,"column_end":59}},{"value":"warn(broken_intra_doc_links)","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":2857,"byte_end":2889,"line_start":77,"line_end":77,"column_start":1,"column_end":33}},{"value":"allow(clippy :: unreadable_literal, clippy :: many_single_char_names, clippy\n        :: excessive_precision)","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":2890,"byte_end":3002,"line_start":78,"line_end":82,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":1228},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":3970,"byte_end":3976,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Affine","qualname":"::affine::Affine","value":"","parent":null,"children":[],"decl_id":null,"docs":" A 2D affine transform.\n","sig":null,"attributes":[{"value":"/ A 2D affine transform.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":3814,"byte_end":3840,"line_start":7,"line_end":7,"column_start":1,"column_end":27}}]},{"kind":"Const","id":{"krate":0,"index":12},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":4130,"byte_end":4136,"line_start":15,"line_end":15,"column_start":15,"column_end":21},"name":"FLIP_Y","qualname":"::affine::Affine::FLIP_Y","value":"Affine","parent":{"krate":0,"index":11},"children":[],"decl_id":null,"docs":" A transform that is flipped on the y-axis. Useful for converting between\n y-up and y-down spaces.\n","sig":null,"attributes":[{"value":"/ A transform that is flipped on the y-axis. Useful for converting between","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":4007,"byte_end":4083,"line_start":13,"line_end":13,"column_start":5,"column_end":81}},{"value":"/ y-up and y-down spaces.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":4088,"byte_end":4115,"line_start":14,"line_end":14,"column_start":5,"column_end":32}}]},{"kind":"Const","id":{"krate":0,"index":13},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":4255,"byte_end":4261,"line_start":18,"line_end":18,"column_start":15,"column_end":21},"name":"FLIP_X","qualname":"::affine::Affine::FLIP_X","value":"Affine","parent":{"krate":0,"index":11},"children":[],"decl_id":null,"docs":" A transform that is flipped on the x-axis.\n","sig":null,"attributes":[{"value":"/ A transform that is flipped on the x-axis.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":4194,"byte_end":4240,"line_start":17,"line_end":17,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":14},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":5036,"byte_end":5039,"line_start":38,"line_end":38,"column_start":18,"column_end":21},"name":"new","qualname":"<Affine>::new","value":"pub const fn new([f64; ]) -> Affine","parent":null,"children":[],"decl_id":null,"docs":" Construct an affine transform from coefficients.","sig":null,"attributes":[{"value":"/ Construct an affine transform from coefficients.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":4319,"byte_end":4371,"line_start":20,"line_end":20,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":4376,"byte_end":4379,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ If the coefficients are `(a, b, c, d, e, f)`, then the resulting","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":4384,"byte_end":4452,"line_start":22,"line_end":22,"column_start":5,"column_end":73}},{"value":"/ transformation represents this augmented matrix:","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":4457,"byte_end":4509,"line_start":23,"line_end":23,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":4514,"byte_end":4517,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":4522,"byte_end":4533,"line_start":25,"line_end":25,"column_start":5,"column_end":16}},{"value":"/ | a c e |","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":4538,"byte_end":4551,"line_start":26,"line_end":26,"column_start":5,"column_end":18}},{"value":"/ | b d f |","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":4556,"byte_end":4569,"line_start":27,"line_end":27,"column_start":5,"column_end":18}},{"value":"/ | 0 0 1 |","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":4574,"byte_end":4587,"line_start":28,"line_end":28,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":4592,"byte_end":4599,"line_start":29,"line_end":29,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":4604,"byte_end":4607,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ Note that this convention is transposed from PostScript and","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":4612,"byte_end":4675,"line_start":31,"line_end":31,"column_start":5,"column_end":68}},{"value":"/ Direct2D, but is consistent with the","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":4680,"byte_end":4720,"line_start":32,"line_end":32,"column_start":5,"column_end":45}},{"value":"/ [Wikipedia](https://en.wikipedia.org/wiki/Affine_transformation)","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":4725,"byte_end":4793,"line_start":33,"line_end":33,"column_start":5,"column_end":73}},{"value":"/ formulation of affine transformation as augmented matrix. The","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":4798,"byte_end":4863,"line_start":34,"line_end":34,"column_start":5,"column_end":70}},{"value":"/ idea is that `(A * B) * v == A * (B * v)`, where `*` is the","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":4868,"byte_end":4931,"line_start":35,"line_end":35,"column_start":5,"column_end":68}},{"value":"/ [`Mul`](https://doc.rust-lang.org/std/ops/trait.Mul.html) trait.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":4936,"byte_end":5004,"line_start":36,"line_end":36,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":5009,"byte_end":5018,"line_start":37,"line_end":37,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":5179,"byte_end":5184,"line_start":44,"line_end":44,"column_start":18,"column_end":23},"name":"scale","qualname":"<Affine>::scale","value":"pub const fn scale(f64) -> Affine","parent":null,"children":[],"decl_id":null,"docs":" An affine transform representing uniform scaling.\n","sig":null,"attributes":[{"value":"/ An affine transform representing uniform scaling.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":5094,"byte_end":5147,"line_start":42,"line_end":42,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":5152,"byte_end":5161,"line_start":43,"line_end":43,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":5395,"byte_end":5412,"line_start":51,"line_end":51,"column_start":18,"column_end":35},"name":"scale_non_uniform","qualname":"<Affine>::scale_non_uniform","value":"pub const fn scale_non_uniform(f64, f64) -> Affine","parent":null,"children":[],"decl_id":null,"docs":" An affine transform representing non-uniform scaling\n with different scale values for x and y\n","sig":null,"attributes":[{"value":"/ An affine transform representing non-uniform scaling","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":5259,"byte_end":5315,"line_start":48,"line_end":48,"column_start":5,"column_end":61}},{"value":"/ with different scale values for x and y","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":5320,"byte_end":5363,"line_start":49,"line_end":49,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":5368,"byte_end":5377,"line_start":50,"line_end":50,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":5925,"byte_end":5931,"line_start":64,"line_end":64,"column_start":12,"column_end":18},"name":"rotate","qualname":"<Affine>::rotate","value":"pub fn rotate(f64) -> Affine","parent":null,"children":[],"decl_id":null,"docs":" An affine transform representing rotation.","sig":null,"attributes":[{"value":"/ An affine transform representing rotation.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":5503,"byte_end":5549,"line_start":55,"line_end":55,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":5554,"byte_end":5557,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ The convention for rotation is that a positive angle rotates a","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":5562,"byte_end":5628,"line_start":57,"line_end":57,"column_start":5,"column_end":71}},{"value":"/ positive X direction into positive Y. Thus, in a Y-down coordinate","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":5633,"byte_end":5703,"line_start":58,"line_end":58,"column_start":5,"column_end":75}},{"value":"/ system (as is common for graphics), it is a clockwise rotation, and","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":5708,"byte_end":5779,"line_start":59,"line_end":59,"column_start":5,"column_end":76}},{"value":"/ in Y-up (traditional for math), it is anti-clockwise.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":5784,"byte_end":5841,"line_start":60,"line_end":60,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":5846,"byte_end":5849,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ The angle, `th`, is expressed in radians.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":5854,"byte_end":5899,"line_start":62,"line_end":62,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":5904,"byte_end":5913,"line_start":63,"line_end":63,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":19},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":6131,"byte_end":6140,"line_start":72,"line_end":72,"column_start":12,"column_end":21},"name":"translate","qualname":"<Affine>::translate","value":"pub fn translate<V: Into<Vec2>>(V) -> Affine","parent":null,"children":[],"decl_id":null,"docs":" An affine transform representing translation.\n","sig":null,"attributes":[{"value":"/ An affine transform representing translation.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":6056,"byte_end":6105,"line_start":70,"line_end":70,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":6110,"byte_end":6119,"line_start":71,"line_end":71,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":6326,"byte_end":6335,"line_start":79,"line_end":79,"column_start":12,"column_end":21},"name":"as_coeffs","qualname":"<Affine>::as_coeffs","value":"pub fn as_coeffs(Self) -> [f64; ]","parent":null,"children":[],"decl_id":null,"docs":" Get the coefficients of the transform.\n","sig":null,"attributes":[{"value":"/ Get the coefficients of the transform.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":6258,"byte_end":6300,"line_start":77,"line_end":77,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":6305,"byte_end":6314,"line_start":78,"line_end":78,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":6440,"byte_end":6451,"line_start":84,"line_end":84,"column_start":12,"column_end":23},"name":"determinant","qualname":"<Affine>::determinant","value":"pub fn determinant(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Compute the determinant of this transform.\n","sig":null,"attributes":[{"value":"/ Compute the determinant of this transform.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":6382,"byte_end":6428,"line_start":83,"line_end":83,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":6644,"byte_end":6651,"line_start":91,"line_end":91,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Affine>::inverse","value":"pub fn inverse(Self) -> Affine","parent":null,"children":[],"decl_id":null,"docs":" Compute the inverse transform.","sig":null,"attributes":[{"value":"/ Compute the inverse transform.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":6532,"byte_end":6566,"line_start":88,"line_end":88,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":6571,"byte_end":6574,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ Produces NaN values when the determinant is zero.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":6579,"byte_end":6632,"line_start":90,"line_end":90,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":7437,"byte_end":7456,"line_start":110,"line_end":110,"column_start":12,"column_end":31},"name":"transform_rect_bbox","qualname":"<Affine>::transform_rect_bbox","value":"pub fn transform_rect_bbox(Self, Rect) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" Compute the bounding box of a transformed rectangle.","sig":null,"attributes":[{"value":"/ Compute the bounding box of a transformed rectangle.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":7035,"byte_end":7091,"line_start":103,"line_end":103,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":7096,"byte_end":7099,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ Returns the minimal `Rect` that encloses the given `Rect` after affine transformation.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":7104,"byte_end":7194,"line_start":105,"line_end":105,"column_start":5,"column_end":95}},{"value":"/ If the transform is axis-aligned, then this bounding box is \"tight\", in other words the","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":7199,"byte_end":7290,"line_start":106,"line_end":106,"column_start":5,"column_end":96}},{"value":"/ returned `Rect` is the transformed rectangle.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":7295,"byte_end":7344,"line_start":107,"line_end":107,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":7349,"byte_end":7352,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ The returned rectangle always has non-negative width and height.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":7357,"byte_end":7425,"line_start":109,"line_end":109,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":1242},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/arc.rs","byte_start":14035,"byte_end":14038,"line_start":12,"line_end":12,"column_start":12,"column_end":15},"name":"Arc","qualname":"::arc::Arc","value":"Arc { center, radii, start_angle, sweep_angle, x_rotation }","parent":null,"children":[{"krate":0,"index":1243},{"krate":0,"index":1244},{"krate":0,"index":1245},{"krate":0,"index":1246},{"krate":0,"index":1247}],"decl_id":null,"docs":" A single arc segment.\n","sig":null,"attributes":[{"value":"/ A single arc segment.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/arc.rs","byte_start":13880,"byte_end":13905,"line_start":9,"line_end":9,"column_start":1,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":1243},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/arc.rs","byte_start":14081,"byte_end":14087,"line_start":14,"line_end":14,"column_start":9,"column_end":15},"name":"center","qualname":"::arc::Arc::center","value":"point::Point","parent":{"krate":0,"index":1242},"children":[],"decl_id":null,"docs":" The arc's centre point.\n","sig":null,"attributes":[{"value":"/ The arc's centre point.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/arc.rs","byte_start":14045,"byte_end":14072,"line_start":13,"line_end":13,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":1244},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/arc.rs","byte_start":14239,"byte_end":14244,"line_start":17,"line_end":17,"column_start":9,"column_end":14},"name":"radii","qualname":"::arc::Arc::radii","value":"vec2::Vec2","parent":{"krate":0,"index":1242},"children":[],"decl_id":null,"docs":" The arc's radii, where the vector's x-component is the radius in the\n positive x direction after applying `x_rotation`.\n","sig":null,"attributes":[{"value":"/ The arc's radii, where the vector's x-component is the radius in the","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/arc.rs","byte_start":14100,"byte_end":14172,"line_start":15,"line_end":15,"column_start":5,"column_end":77}},{"value":"/ positive x direction after applying `x_rotation`.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/arc.rs","byte_start":14177,"byte_end":14230,"line_start":16,"line_end":16,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":1245},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/arc.rs","byte_start":14296,"byte_end":14307,"line_start":19,"line_end":19,"column_start":9,"column_end":20},"name":"start_angle","qualname":"::arc::Arc::start_angle","value":"f64","parent":{"krate":0,"index":1242},"children":[],"decl_id":null,"docs":" The start angle in radians.\n","sig":null,"attributes":[{"value":"/ The start angle in radians.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/arc.rs","byte_start":14256,"byte_end":14287,"line_start":18,"line_end":18,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":1246},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/arc.rs","byte_start":14390,"byte_end":14401,"line_start":21,"line_end":21,"column_start":9,"column_end":20},"name":"sweep_angle","qualname":"::arc::Arc::sweep_angle","value":"f64","parent":{"krate":0,"index":1242},"children":[],"decl_id":null,"docs":" The angle between the start and end of the arc, in radians.\n","sig":null,"attributes":[{"value":"/ The angle between the start and end of the arc, in radians.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/arc.rs","byte_start":14318,"byte_end":14381,"line_start":20,"line_end":20,"column_start":5,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":1247},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/arc.rs","byte_start":14465,"byte_end":14475,"line_start":23,"line_end":23,"column_start":9,"column_end":19},"name":"x_rotation","qualname":"::arc::Arc::x_rotation","value":"f64","parent":{"krate":0,"index":1242},"children":[],"decl_id":null,"docs":" How much the arc is rotated, in radians.\n","sig":null,"attributes":[{"value":"/ How much the arc is rotated, in radians.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/arc.rs","byte_start":14412,"byte_end":14456,"line_start":22,"line_end":22,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/arc.rs","byte_start":14647,"byte_end":14658,"line_start":30,"line_end":30,"column_start":12,"column_end":23},"name":"append_iter","qualname":"<Arc>::append_iter","value":"pub fn append_iter(&Self, f64) -> ArcAppendIter","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator generating Bezier path elements.","sig":null,"attributes":[{"value":"/ Create an iterator generating Bezier path elements.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/arc.rs","byte_start":14500,"byte_end":14555,"line_start":27,"line_end":27,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/arc.rs","byte_start":14560,"byte_end":14563,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ The generated elemets can be append to an existing bezier path.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/arc.rs","byte_start":14568,"byte_end":14635,"line_start":29,"line_end":29,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/arc.rs","byte_start":15771,"byte_end":15787,"line_start":61,"line_end":61,"column_start":12,"column_end":28},"name":"to_cubic_beziers","qualname":"<Arc>::to_cubic_beziers","value":"pub fn to_cubic_beziers<P>(Self, f64, P) where P: FnMut(Point, Point, Point)\n-> ()","parent":null,"children":[],"decl_id":null,"docs":" Converts an Arc into a series of cubic bezier segments.","sig":null,"attributes":[{"value":"/ Converts an Arc into a series of cubic bezier segments.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/arc.rs","byte_start":15642,"byte_end":15701,"line_start":58,"line_end":58,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/arc.rs","byte_start":15706,"byte_end":15709,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Closure will be invoked for each segment.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/arc.rs","byte_start":15714,"byte_end":15759,"line_start":60,"line_end":60,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":58},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/arc.rs","byte_start":16070,"byte_end":16083,"line_start":73,"line_end":73,"column_start":12,"column_end":25},"name":"ArcAppendIter","qualname":"::arc::ArcAppendIter","value":"ArcAppendIter {  }","parent":null,"children":[{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1257},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":22421,"byte_end":22428,"line_start":97,"line_end":97,"column_start":12,"column_end":19},"name":"BezPath","qualname":"::bezpath::BezPath","value":"","parent":null,"children":[],"decl_id":null,"docs":" A Bézier path.","sig":null,"attributes":[{"value":"/ A Bézier path.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":19123,"byte_end":19142,"line_start":18,"line_end":18,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":19143,"byte_end":19146,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ These docs assume basic familiarity with Bézier curves; for an introduction,","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":19147,"byte_end":19228,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ see Pomax's wonderful [A Primer on Bézier Curves].","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":19229,"byte_end":19284,"line_start":21,"line_end":21,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":19285,"byte_end":19288,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ This path can contain lines, quadratics ([`QuadBez`]) and cubics","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":19289,"byte_end":19357,"line_start":23,"line_end":23,"column_start":1,"column_end":69}},{"value":"/ ([`CubicBez`]), and may contain multiple subpaths.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":19358,"byte_end":19412,"line_start":24,"line_end":24,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":19413,"byte_end":19416,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Elements and Segments","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":19417,"byte_end":19444,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":19445,"byte_end":19448,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ A Bézier path can be represented in terms of either 'elements' ([`PathEl`])","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":19449,"byte_end":19529,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ or 'segments' ([`PathSeg`]). Elements map closely to how Béziers are","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":19530,"byte_end":19603,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ generally used in PostScript-style drawing APIs; they can be thought of as","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":19604,"byte_end":19682,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ instructions for drawing the path. Segments more directly describe the","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":19683,"byte_end":19757,"line_start":31,"line_end":31,"column_start":1,"column_end":75}},{"value":"/ path itself, with each segment being an independent line or curve.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":19758,"byte_end":19828,"line_start":32,"line_end":32,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":19829,"byte_end":19832,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ These different representations are useful in different contexts.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":19833,"byte_end":19902,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"/ For tasks like drawing, elements are a natural fit, but when doing","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":19903,"byte_end":19973,"line_start":35,"line_end":35,"column_start":1,"column_end":71}},{"value":"/ hit-testing or subdividing, we need to have access to the segments.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":19974,"byte_end":20045,"line_start":36,"line_end":36,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":20046,"byte_end":20049,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Internally, a `BezPath` is a list of [`PathEl`]s; as such it implements","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":20050,"byte_end":20125,"line_start":38,"line_end":38,"column_start":1,"column_end":76}},{"value":"/ [`FromIterator<PathEl>`] and [`Extend<PathEl>`]:","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":20126,"byte_end":20178,"line_start":39,"line_end":39,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":20179,"byte_end":20182,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":20183,"byte_end":20190,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use kurbo::{BezPath, Rect, Shape, Vec2};","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":20191,"byte_end":20235,"line_start":42,"line_end":42,"column_start":1,"column_end":45}},{"value":"/ let accuracy = 0.1;","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":20236,"byte_end":20259,"line_start":43,"line_end":43,"column_start":1,"column_end":24}},{"value":"/ let rect = Rect::from_origin_size((0., 0.,), (10., 10.));","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":20260,"byte_end":20321,"line_start":44,"line_end":44,"column_start":1,"column_end":62}},{"value":"/ // these are equivalent","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":20322,"byte_end":20349,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"/ let path1 = rect.to_path(accuracy);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":20350,"byte_end":20389,"line_start":46,"line_end":46,"column_start":1,"column_end":40}},{"value":"/ let path2: BezPath = rect.path_elements(accuracy).collect();","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":20390,"byte_end":20454,"line_start":47,"line_end":47,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":20455,"byte_end":20458,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ // extend a path with another path:","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":20459,"byte_end":20498,"line_start":49,"line_end":49,"column_start":1,"column_end":40}},{"value":"/ let mut path = rect.to_path(accuracy);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":20499,"byte_end":20541,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ let shifted_rect = rect + Vec2::new(5.0, 10.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":20542,"byte_end":20593,"line_start":51,"line_end":51,"column_start":1,"column_end":52}},{"value":"/ path.extend(shifted_rect.to_path(accuracy));","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":20594,"byte_end":20642,"line_start":52,"line_end":52,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":20643,"byte_end":20650,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":20651,"byte_end":20654,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ You can iterate the elements of a `BezPath` with the [`iter`] method,","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":20655,"byte_end":20728,"line_start":55,"line_end":55,"column_start":1,"column_end":74}},{"value":"/ and the segments with the [`segments`] method:","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":20729,"byte_end":20779,"line_start":56,"line_end":56,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":20780,"byte_end":20783,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":20784,"byte_end":20791,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/ use kurbo::{BezPath, Line, PathEl, PathSeg, Point, Rect, Shape};","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":20792,"byte_end":20860,"line_start":59,"line_end":59,"column_start":1,"column_end":69}},{"value":"/ let accuracy = 0.1;","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":20861,"byte_end":20884,"line_start":60,"line_end":60,"column_start":1,"column_end":24}},{"value":"/ let rect = Rect::from_origin_size((0., 0.,), (10., 10.));","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":20885,"byte_end":20946,"line_start":61,"line_end":61,"column_start":1,"column_end":62}},{"value":"/ // these are equivalent","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":20947,"byte_end":20974,"line_start":62,"line_end":62,"column_start":1,"column_end":28}},{"value":"/ let path = rect.to_path(accuracy);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":20975,"byte_end":21013,"line_start":63,"line_end":63,"column_start":1,"column_end":39}},{"value":"/ let first_el = PathEl::MoveTo(Point::ZERO);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":21014,"byte_end":21061,"line_start":64,"line_end":64,"column_start":1,"column_end":48}},{"value":"/ let first_seg = PathSeg::Line(Line::new((0., 0.), (10., 0.)));","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":21062,"byte_end":21128,"line_start":65,"line_end":65,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(path.iter().next(), Some(first_el));","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":21129,"byte_end":21180,"line_start":66,"line_end":66,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(path.segments().next(), Some(first_seg));","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":21181,"byte_end":21237,"line_start":67,"line_end":67,"column_start":1,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":21238,"byte_end":21245,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/ In addition, if you have some other type that implements","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":21246,"byte_end":21306,"line_start":69,"line_end":69,"column_start":1,"column_end":61}},{"value":"/ `Iterator<Item=PathEl>`, you can adapt that to an iterator of segments with","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":21307,"byte_end":21386,"line_start":70,"line_end":70,"column_start":1,"column_end":80}},{"value":"/ the [`segments` free function].","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":21387,"byte_end":21422,"line_start":71,"line_end":71,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":21423,"byte_end":21426,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ # Advanced functionality","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":21427,"byte_end":21455,"line_start":73,"line_end":73,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":21456,"byte_end":21459,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ In addition to the basic API, there are several useful pieces of advanced","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":21460,"byte_end":21537,"line_start":75,"line_end":75,"column_start":1,"column_end":78}},{"value":"/ functionality available on `BezPath`:","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":21538,"byte_end":21579,"line_start":76,"line_end":76,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":21580,"byte_end":21583,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ - [`flatten`] does Bézier flattening, converting a curve to a series of","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":21584,"byte_end":21660,"line_start":78,"line_end":78,"column_start":1,"column_end":76}},{"value":"/ line segments","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":21661,"byte_end":21678,"line_start":79,"line_end":79,"column_start":1,"column_end":18}},{"value":"/ - [`intersect_line`] computes intersections of a path with a line, useful","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":21679,"byte_end":21756,"line_start":80,"line_end":80,"column_start":1,"column_end":78}},{"value":"/ for things like subdividing","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":21757,"byte_end":21788,"line_start":81,"line_end":81,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":21789,"byte_end":21792,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ [A Primer on Bézier Curves]: https://pomax.github.io/bezierinfo/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":21793,"byte_end":21862,"line_start":83,"line_end":83,"column_start":1,"column_end":69}},{"value":"/ [`PathEl`]: enum.PathEl.html","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":21863,"byte_end":21895,"line_start":84,"line_end":84,"column_start":1,"column_end":33}},{"value":"/ [`PathSeg`]: enum.PathSeg.html","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":21896,"byte_end":21930,"line_start":85,"line_end":85,"column_start":1,"column_end":35}},{"value":"/ [`QuadBez`]: struct.QuadBez.html","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":21931,"byte_end":21967,"line_start":86,"line_end":86,"column_start":1,"column_end":37}},{"value":"/ [`CubicBez`]: struct.CubicBez.html","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":21968,"byte_end":22006,"line_start":87,"line_end":87,"column_start":1,"column_end":39}},{"value":"/ [`iter`]: #method.iter","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":22007,"byte_end":22033,"line_start":88,"line_end":88,"column_start":1,"column_end":27}},{"value":"/ [`segments`]: #method.segments","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":22034,"byte_end":22068,"line_start":89,"line_end":89,"column_start":1,"column_end":35}},{"value":"/ [`flatten`]: #method.flatten","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":22069,"byte_end":22101,"line_start":90,"line_end":90,"column_start":1,"column_end":33}},{"value":"/ [`intersect_line`]: #method.intersect_line","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":22102,"byte_end":22148,"line_start":91,"line_end":91,"column_start":1,"column_end":47}},{"value":"/ [`segments` free function]: function.segments.html","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":22149,"byte_end":22203,"line_start":92,"line_end":92,"column_start":1,"column_end":55}},{"value":"/ [`FromIterator<PathEl>`]: std::iter::FromIterator","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":22204,"byte_end":22257,"line_start":93,"line_end":93,"column_start":1,"column_end":54}},{"value":"/ [`Extend<PathEl>`]: std::iter::Extend","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":22258,"byte_end":22299,"line_start":94,"line_end":94,"column_start":1,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1267},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":22780,"byte_end":22786,"line_start":107,"line_end":107,"column_start":5,"column_end":11},"name":"MoveTo","qualname":"::bezpath::PathEl::MoveTo","value":"PathEl::MoveTo(Point)","parent":{"krate":0,"index":1266},"children":[],"decl_id":null,"docs":" Move directly to the point without drawing anything, starting a new\n subpath.\n","sig":null,"attributes":[{"value":"/ Move directly to the point without drawing anything, starting a new","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":22687,"byte_end":22758,"line_start":105,"line_end":105,"column_start":5,"column_end":76}},{"value":"/ subpath.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":22763,"byte_end":22775,"line_start":106,"line_end":106,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1270},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":22859,"byte_end":22865,"line_start":109,"line_end":109,"column_start":5,"column_end":11},"name":"LineTo","qualname":"::bezpath::PathEl::LineTo","value":"PathEl::LineTo(Point)","parent":{"krate":0,"index":1266},"children":[],"decl_id":null,"docs":" Draw a line from the current location to the point.\n","sig":null,"attributes":[{"value":"/ Draw a line from the current location to the point.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":22799,"byte_end":22854,"line_start":108,"line_end":108,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1273},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":22957,"byte_end":22963,"line_start":111,"line_end":111,"column_start":5,"column_end":11},"name":"QuadTo","qualname":"::bezpath::PathEl::QuadTo","value":"PathEl::QuadTo(Point, Point)","parent":{"krate":0,"index":1266},"children":[],"decl_id":null,"docs":" Draw a quadratic bezier using the current location and the two points.\n","sig":null,"attributes":[{"value":"/ Draw a quadratic bezier using the current location and the two points.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":22878,"byte_end":22952,"line_start":110,"line_end":110,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1277},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":23060,"byte_end":23067,"line_start":113,"line_end":113,"column_start":5,"column_end":12},"name":"CurveTo","qualname":"::bezpath::PathEl::CurveTo","value":"PathEl::CurveTo(Point, Point, Point)","parent":{"krate":0,"index":1266},"children":[],"decl_id":null,"docs":" Draw a cubic bezier using the current location and the three points.\n","sig":null,"attributes":[{"value":"/ Draw a cubic bezier using the current location and the three points.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":22983,"byte_end":23055,"line_start":112,"line_end":112,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1282},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":23122,"byte_end":23131,"line_start":115,"line_end":115,"column_start":5,"column_end":14},"name":"ClosePath","qualname":"::bezpath::PathEl::ClosePath","value":"PathEl::ClosePath","parent":{"krate":0,"index":1266},"children":[],"decl_id":null,"docs":" Close off the path.\n","sig":null,"attributes":[{"value":"/ Close off the path.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":23094,"byte_end":23117,"line_start":114,"line_end":114,"column_start":5,"column_end":28}}]},{"kind":"Enum","id":{"krate":0,"index":1266},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":22674,"byte_end":22680,"line_start":104,"line_end":104,"column_start":10,"column_end":16},"name":"PathEl","qualname":"::bezpath::PathEl","value":"pub enum PathEl {\n\n    /// Move directly to the point without drawing anything, starting a new\n    /// subpath.\n    MoveTo(Point),\n\n    /// Draw a line from the current location to the point.\n    LineTo(Point),\n\n    /// Draw a quadratic bezier using the current location and the two points.\n    QuadTo(Point, Point),\n\n    /// Draw a cubic bezier using the current location and the three points.\n    CurveTo(Point, Point, Point),\n\n    /// Close off the path.\n    ClosePath,\n}","parent":null,"children":[{"krate":0,"index":1267},{"krate":0,"index":1270},{"krate":0,"index":1273},{"krate":0,"index":1277},{"krate":0,"index":1282}],"decl_id":null,"docs":" The element of a Bézier path.","sig":null,"attributes":[{"value":"/ The element of a Bézier path.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":22444,"byte_end":22478,"line_start":99,"line_end":99,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":22479,"byte_end":22482,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ A valid path has `MoveTo` at the beginning of each subpath.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":22483,"byte_end":22546,"line_start":101,"line_end":101,"column_start":1,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1294},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":23334,"byte_end":23338,"line_start":123,"line_end":123,"column_start":5,"column_end":9},"name":"Line","qualname":"::bezpath::PathSeg::Line","value":"PathSeg::Line(Line)","parent":{"krate":0,"index":1293},"children":[],"decl_id":null,"docs":" A line segment.\n","sig":null,"attributes":[{"value":"/ A line segment.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":23310,"byte_end":23329,"line_start":122,"line_end":122,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1297},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":23386,"byte_end":23390,"line_start":125,"line_end":125,"column_start":5,"column_end":9},"name":"Quad","qualname":"::bezpath::PathSeg::Quad","value":"PathSeg::Quad(QuadBez)","parent":{"krate":0,"index":1293},"children":[],"decl_id":null,"docs":" A quadratic bezier segment.\n","sig":null,"attributes":[{"value":"/ A quadratic bezier segment.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":23350,"byte_end":23381,"line_start":124,"line_end":124,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1300},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":23437,"byte_end":23442,"line_start":127,"line_end":127,"column_start":5,"column_end":10},"name":"Cubic","qualname":"::bezpath::PathSeg::Cubic","value":"PathSeg::Cubic(CubicBez)","parent":{"krate":0,"index":1293},"children":[],"decl_id":null,"docs":" A cubic bezier segment.\n","sig":null,"attributes":[{"value":"/ A cubic bezier segment.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":23405,"byte_end":23432,"line_start":126,"line_end":126,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":1293},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":23296,"byte_end":23303,"line_start":121,"line_end":121,"column_start":10,"column_end":17},"name":"PathSeg","qualname":"::bezpath::PathSeg","value":"pub enum PathSeg {\n\n    /// A line segment.\n    Line(Line),\n\n    /// A quadratic bezier segment.\n    Quad(QuadBez),\n\n    /// A cubic bezier segment.\n    Cubic(CubicBez),\n}","parent":null,"children":[{"krate":0,"index":1294},{"krate":0,"index":1297},{"krate":0,"index":1300}],"decl_id":null,"docs":" A segment of a Bézier path.\n","sig":null,"attributes":[{"value":"/ A segment of a Bézier path.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":23136,"byte_end":23168,"line_start":118,"line_end":118,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":1312},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":23769,"byte_end":23785,"line_start":138,"line_end":138,"column_start":12,"column_end":28},"name":"LineIntersection","qualname":"::bezpath::LineIntersection","value":"LineIntersection { line_t, segment_t }","parent":null,"children":[{"krate":0,"index":1313},{"krate":0,"index":1314}],"decl_id":null,"docs":" An intersection of a [`Line`] and a [`PathSeg`].","sig":null,"attributes":[{"value":"/ An intersection of a [`Line`] and a [`PathSeg`].","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":23457,"byte_end":23509,"line_start":130,"line_end":130,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":23510,"byte_end":23513,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ This can be generated with the [`PathSeg::intersect_line`] method.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":23514,"byte_end":23584,"line_start":132,"line_end":132,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":23585,"byte_end":23588,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ [`Line`]: struct.Line.html","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":23589,"byte_end":23619,"line_start":134,"line_end":134,"column_start":1,"column_end":31}},{"value":"/ [`PathSeg`]: enum.PathSeg.html","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":23620,"byte_end":23654,"line_start":135,"line_end":135,"column_start":1,"column_end":35}},{"value":"/ [`PathSeg::intersect_line`]: enum.PathSeg.html#method.intersect_line","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":23655,"byte_end":23727,"line_start":136,"line_end":136,"column_start":1,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":1313},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":23907,"byte_end":23913,"line_start":142,"line_end":142,"column_start":9,"column_end":15},"name":"line_t","qualname":"::bezpath::LineIntersection::line_t","value":"f64","parent":{"krate":0,"index":1312},"children":[],"decl_id":null,"docs":" The 'time' that the intersection occurs, on the line.","sig":null,"attributes":[{"value":"/ The 'time' that the intersection occurs, on the line.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":23792,"byte_end":23849,"line_start":139,"line_end":139,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":23854,"byte_end":23857,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ This value is in the range 0..1.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":23862,"byte_end":23898,"line_start":141,"line_end":141,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":1314},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":24140,"byte_end":24149,"line_start":148,"line_end":148,"column_start":9,"column_end":18},"name":"segment_t","qualname":"::bezpath::LineIntersection::segment_t","value":"f64","parent":{"krate":0,"index":1312},"children":[],"decl_id":null,"docs":" The 'time' that the intersection occurs, on the path segment.","sig":null,"attributes":[{"value":"/ The 'time' that the intersection occurs, on the path segment.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":23925,"byte_end":23990,"line_start":144,"line_end":144,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":23995,"byte_end":23998,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ This value is nominally in the range 0..1, although it may slightly exceed","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":24003,"byte_end":24081,"line_start":146,"line_end":146,"column_start":5,"column_end":83}},{"value":"/ that range at the boundaries of segments.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":24086,"byte_end":24131,"line_start":147,"line_end":147,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":24212,"byte_end":24215,"line_start":153,"line_end":153,"column_start":12,"column_end":15},"name":"new","qualname":"<BezPath>::new","value":"pub fn new() -> BezPath","parent":null,"children":[],"decl_id":null,"docs":" Create a new path.\n","sig":null,"attributes":[{"value":"/ Create a new path.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":24178,"byte_end":24200,"line_start":152,"line_end":152,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":24702,"byte_end":24710,"line_start":169,"line_end":169,"column_start":12,"column_end":20},"name":"from_vec","qualname":"<BezPath>::from_vec","value":"pub fn from_vec(Vec<PathEl>) -> BezPath","parent":null,"children":[],"decl_id":null,"docs":" Create a path from a vector of path elements.","sig":null,"attributes":[{"value":"/ Create a path from a vector of path elements.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":24269,"byte_end":24318,"line_start":157,"line_end":157,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":24323,"byte_end":24326,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ `BezPath` also implements `FromIterator<PathEl>`, so it works with `collect`:","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":24331,"byte_end":24412,"line_start":159,"line_end":159,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":24417,"byte_end":24420,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":24425,"byte_end":24432,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"/ // a very contrived example:","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":24437,"byte_end":24469,"line_start":162,"line_end":162,"column_start":5,"column_end":37}},{"value":"/ use kurbo::{BezPath, PathEl};","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":24474,"byte_end":24507,"line_start":163,"line_end":163,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":24512,"byte_end":24515,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ let path = BezPath::new();","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":24520,"byte_end":24550,"line_start":165,"line_end":165,"column_start":5,"column_end":35}},{"value":"/ let as_vec: Vec<PathEl> = path.into_iter().collect();","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":24555,"byte_end":24612,"line_start":166,"line_end":166,"column_start":5,"column_end":62}},{"value":"/ let back_to_path: BezPath = as_vec.into_iter().collect();","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":24617,"byte_end":24678,"line_start":167,"line_end":167,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":24683,"byte_end":24690,"line_start":168,"line_end":168,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":24828,"byte_end":24832,"line_start":174,"line_end":174,"column_start":12,"column_end":16},"name":"push","qualname":"<BezPath>::push","value":"pub fn push(&mut Self, PathEl)","parent":null,"children":[],"decl_id":null,"docs":" Push a generic path element onto the path.\n","sig":null,"attributes":[{"value":"/ Push a generic path element onto the path.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":24770,"byte_end":24816,"line_start":173,"line_end":173,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":24948,"byte_end":24955,"line_start":179,"line_end":179,"column_start":12,"column_end":19},"name":"move_to","qualname":"<BezPath>::move_to","value":"pub fn move_to<P: Into<Point>>(&mut Self, P)","parent":null,"children":[],"decl_id":null,"docs":" Push a \"move to\" element onto the path.\n","sig":null,"attributes":[{"value":"/ Push a \"move to\" element onto the path.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":24893,"byte_end":24936,"line_start":178,"line_end":178,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":25102,"byte_end":25109,"line_start":184,"line_end":184,"column_start":12,"column_end":19},"name":"line_to","qualname":"<BezPath>::line_to","value":"pub fn line_to<P: Into<Point>>(&mut Self, P)","parent":null,"children":[],"decl_id":null,"docs":" Push a \"line to\" element onto the path.\n","sig":null,"attributes":[{"value":"/ Push a \"line to\" element onto the path.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":25047,"byte_end":25090,"line_start":183,"line_end":183,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":25256,"byte_end":25263,"line_start":189,"line_end":189,"column_start":12,"column_end":19},"name":"quad_to","qualname":"<BezPath>::quad_to","value":"pub fn quad_to<P: Into<Point>>(&mut Self, P, P)","parent":null,"children":[],"decl_id":null,"docs":" Push a \"quad to\" element onto the path.\n","sig":null,"attributes":[{"value":"/ Push a \"quad to\" element onto the path.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":25201,"byte_end":25244,"line_start":188,"line_end":188,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":25431,"byte_end":25439,"line_start":194,"line_end":194,"column_start":12,"column_end":20},"name":"curve_to","qualname":"<BezPath>::curve_to","value":"pub fn curve_to<P: Into<Point>>(&mut Self, P, P, P)","parent":null,"children":[],"decl_id":null,"docs":" Push a \"curve to\" element onto the path.\n","sig":null,"attributes":[{"value":"/ Push a \"curve to\" element onto the path.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":25375,"byte_end":25419,"line_start":193,"line_end":193,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":25628,"byte_end":25638,"line_start":199,"line_end":199,"column_start":12,"column_end":22},"name":"close_path","qualname":"<BezPath>::close_path","value":"pub fn close_path(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Push a \"close path\" element onto the path.\n","sig":null,"attributes":[{"value":"/ Push a \"close path\" element onto the path.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":25570,"byte_end":25616,"line_start":198,"line_end":198,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":25739,"byte_end":25747,"line_start":204,"line_end":204,"column_start":12,"column_end":20},"name":"elements","qualname":"<BezPath>::elements","value":"pub fn elements(&Self) -> &[PathEl]","parent":null,"children":[],"decl_id":null,"docs":" Get the path elements.\n","sig":null,"attributes":[{"value":"/ Get the path elements.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":25701,"byte_end":25727,"line_start":203,"line_end":203,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":25858,"byte_end":25862,"line_start":209,"line_end":209,"column_start":12,"column_end":16},"name":"iter","qualname":"<BezPath>::iter","value":"pub fn iter(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the path's elements.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the path's elements.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":25797,"byte_end":25846,"line_start":208,"line_end":208,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":25998,"byte_end":26006,"line_start":214,"line_end":214,"column_start":12,"column_end":20},"name":"segments","qualname":"<BezPath>::segments","value":"pub fn segments(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Iterate over the path segments.\n","sig":null,"attributes":[{"value":"/ Iterate over the path segments.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":25951,"byte_end":25986,"line_start":213,"line_end":213,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":33247,"byte_end":33254,"line_start":287,"line_end":287,"column_start":12,"column_end":19},"name":"flatten","qualname":"<BezPath>::flatten","value":"pub fn flatten<impl FnMut(PathEl): FnMut(PathEl) ->\n               ()>(&Self, f64, impl FnMut(PathEl))","parent":null,"children":[],"decl_id":null,"docs":" Flatten the path, invoking the callback repeatedly.","sig":null,"attributes":[{"value":"/ Flatten the path, invoking the callback repeatedly.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":26095,"byte_end":26150,"line_start":218,"line_end":218,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":26155,"byte_end":26158,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Flattening is the action of approximating a curve with a succession of line segments.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":26163,"byte_end":26252,"line_start":220,"line_end":220,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":26257,"byte_end":26260,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 120 30\" height=\"30mm\" width=\"120mm\">","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":26265,"byte_end":26358,"line_start":222,"line_end":222,"column_start":5,"column_end":98}},{"value":"/   <path d=\"M26.7 24.94l.82-11.15M44.46 5.1L33.8 7.34\" fill=\"none\" stroke=\"#55d400\" stroke-width=\".5\"/>","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":26363,"byte_end":26469,"line_start":223,"line_end":223,"column_start":5,"column_end":111}},{"value":"/   <path d=\"M26.7 24.94c.97-11.13 7.17-17.6 17.76-19.84M75.27 24.94l1.13-5.5 2.67-5.48 4-4.42L88 6.7l5.02-1.6\" fill=\"none\" stroke=\"#000\"/>","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":26474,"byte_end":26615,"line_start":224,"line_end":224,"column_start":5,"column_end":146}},{"value":"/   <path d=\"M77.57 19.37a1.1 1.1 0 0 1-1.08 1.08 1.1 1.1 0 0 1-1.1-1.08 1.1 1.1 0 0 1 1.08-1.1 1.1 1.1 0 0 1 1.1 1.1\" color=\"#000\" fill=\"none\" stroke=\"#030303\" stroke-linecap=\"round\" stroke-opacity=\".5\"/>","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":26620,"byte_end":26827,"line_start":225,"line_end":225,"column_start":5,"column_end":212}},{"value":"/   <path d=\"M77.57 19.37a1.1 1.1 0 0 1-1.08 1.08 1.1 1.1 0 0 1-1.1-1.08 1.1 1.1 0 0 1 1.08-1.1 1.1 1.1 0 0 1 1.1 1.1\" color=\"#000\" fill=\"#fff\"/>","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":26832,"byte_end":26979,"line_start":226,"line_end":226,"column_start":5,"column_end":152}},{"value":"/   <path d=\"M80.22 13.93a1.1 1.1 0 0 1-1.1 1.1 1.1 1.1 0 0 1-1.08-1.1 1.1 1.1 0 0 1 1.1-1.08 1.1 1.1 0 0 1 1.08 1.08\" color=\"#000\" fill=\"none\" stroke=\"#030303\" stroke-linecap=\"round\" stroke-opacity=\".5\"/>","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":26984,"byte_end":27191,"line_start":227,"line_end":227,"column_start":5,"column_end":212}},{"value":"/   <path d=\"M80.22 13.93a1.1 1.1 0 0 1-1.1 1.1 1.1 1.1 0 0 1-1.08-1.1 1.1 1.1 0 0 1 1.1-1.08 1.1 1.1 0 0 1 1.08 1.08\" color=\"#000\" fill=\"#fff\"/>","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":27196,"byte_end":27343,"line_start":228,"line_end":228,"column_start":5,"column_end":152}},{"value":"/   <path d=\"M84.08 9.55a1.1 1.1 0 0 1-1.08 1.1 1.1 1.1 0 0 1-1.1-1.1 1.1 1.1 0 0 1 1.1-1.1 1.1 1.1 0 0 1 1.08 1.1\" color=\"#000\" fill=\"none\" stroke=\"#030303\" stroke-linecap=\"round\" stroke-opacity=\".5\"/>","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":27348,"byte_end":27552,"line_start":229,"line_end":229,"column_start":5,"column_end":209}},{"value":"/   <path d=\"M84.08 9.55a1.1 1.1 0 0 1-1.08 1.1 1.1 1.1 0 0 1-1.1-1.1 1.1 1.1 0 0 1 1.1-1.1 1.1 1.1 0 0 1 1.08 1.1\" color=\"#000\" fill=\"#fff\"/>","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":27557,"byte_end":27701,"line_start":230,"line_end":230,"column_start":5,"column_end":149}},{"value":"/   <path d=\"M89.1 6.66a1.1 1.1 0 0 1-1.08 1.1 1.1 1.1 0 0 1-1.08-1.1 1.1 1.1 0 0 1 1.08-1.08 1.1 1.1 0 0 1 1.1 1.08\" color=\"#000\" fill=\"none\" stroke=\"#030303\" stroke-linecap=\"round\" stroke-opacity=\".5\"/>","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":27706,"byte_end":27912,"line_start":231,"line_end":231,"column_start":5,"column_end":211}},{"value":"/   <path d=\"M89.1 6.66a1.1 1.1 0 0 1-1.08 1.1 1.1 1.1 0 0 1-1.08-1.1 1.1 1.1 0 0 1 1.08-1.08 1.1 1.1 0 0 1 1.1 1.08\" color=\"#000\" fill=\"#fff\"/>","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":27917,"byte_end":28063,"line_start":232,"line_end":232,"column_start":5,"column_end":151}},{"value":"/   <path d=\"M94.4 5a1.1 1.1 0 0 1-1.1 1.1A1.1 1.1 0 0 1 92.23 5a1.1 1.1 0 0 1 1.08-1.08A1.1 1.1 0 0 1 94.4 5\" color=\"#000\" fill=\"none\" stroke=\"#030303\" stroke-linecap=\"round\" stroke-opacity=\".5\"/>","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":28068,"byte_end":28267,"line_start":233,"line_end":233,"column_start":5,"column_end":204}},{"value":"/   <path d=\"M94.4 5a1.1 1.1 0 0 1-1.1 1.1A1.1 1.1 0 0 1 92.23 5a1.1 1.1 0 0 1 1.08-1.08A1.1 1.1 0 0 1 94.4 5\" color=\"#000\" fill=\"#fff\"/>","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":28272,"byte_end":28411,"line_start":234,"line_end":234,"column_start":5,"column_end":144}},{"value":"/   <path d=\"M76.44 25.13a1.1 1.1 0 0 1-1.1 1.1 1.1 1.1 0 0 1-1.08-1.1 1.1 1.1 0 0 1 1.1-1.1 1.1 1.1 0 0 1 1.08 1.1\" color=\"#000\" fill=\"none\" stroke=\"#030303\" stroke-linecap=\"round\" stroke-opacity=\".5\"/>","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":28416,"byte_end":28621,"line_start":235,"line_end":235,"column_start":5,"column_end":210}},{"value":"/   <path d=\"M76.44 25.13a1.1 1.1 0 0 1-1.1 1.1 1.1 1.1 0 0 1-1.08-1.1 1.1 1.1 0 0 1 1.1-1.1 1.1 1.1 0 0 1 1.08 1.1\" color=\"#000\" fill=\"#fff\"/>","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":28626,"byte_end":28771,"line_start":236,"line_end":236,"column_start":5,"column_end":150}},{"value":"/   <path d=\"M27.78 24.9a1.1 1.1 0 0 1-1.08 1.08 1.1 1.1 0 0 1-1.1-1.08 1.1 1.1 0 0 1 1.1-1.1 1.1 1.1 0 0 1 1.08 1.1\" color=\"#000\" fill=\"none\" stroke=\"#030303\" stroke-linecap=\"round\" stroke-opacity=\".5\"/>","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":28776,"byte_end":28982,"line_start":237,"line_end":237,"column_start":5,"column_end":211}},{"value":"/   <path d=\"M27.78 24.9a1.1 1.1 0 0 1-1.08 1.08 1.1 1.1 0 0 1-1.1-1.08 1.1 1.1 0 0 1 1.1-1.1 1.1 1.1 0 0 1 1.08 1.1\" color=\"#000\" fill=\"#fff\"/>","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":28987,"byte_end":29133,"line_start":238,"line_end":238,"column_start":5,"column_end":151}},{"value":"/   <path d=\"M45.4 5.14a1.1 1.1 0 0 1-1.08 1.1 1.1 1.1 0 0 1-1.1-1.1 1.1 1.1 0 0 1 1.1-1.08 1.1 1.1 0 0 1 1.1 1.08\" color=\"#000\" fill=\"none\" stroke=\"#030303\" stroke-linecap=\"round\" stroke-opacity=\".5\"/>","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":29138,"byte_end":29342,"line_start":239,"line_end":239,"column_start":5,"column_end":209}},{"value":"/   <path d=\"M45.4 5.14a1.1 1.1 0 0 1-1.08 1.1 1.1 1.1 0 0 1-1.1-1.1 1.1 1.1 0 0 1 1.1-1.08 1.1 1.1 0 0 1 1.1 1.08\" color=\"#000\" fill=\"#fff\"/>","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":29347,"byte_end":29491,"line_start":240,"line_end":240,"column_start":5,"column_end":149}},{"value":"/   <path d=\"M28.67 13.8a1.1 1.1 0 0 1-1.1 1.08 1.1 1.1 0 0 1-1.08-1.08 1.1 1.1 0 0 1 1.08-1.1 1.1 1.1 0 0 1 1.1 1.1\" color=\"#000\" fill=\"none\" stroke=\"#030303\" stroke-linecap=\"round\" stroke-opacity=\".5\"/>","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":29496,"byte_end":29702,"line_start":241,"line_end":241,"column_start":5,"column_end":211}},{"value":"/   <path d=\"M28.67 13.8a1.1 1.1 0 0 1-1.1 1.08 1.1 1.1 0 0 1-1.08-1.08 1.1 1.1 0 0 1 1.08-1.1 1.1 1.1 0 0 1 1.1 1.1\" color=\"#000\" fill=\"#fff\"/>","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":29707,"byte_end":29853,"line_start":242,"line_end":242,"column_start":5,"column_end":151}},{"value":"/   <path d=\"M35 7.32a1.1 1.1 0 0 1-1.1 1.1 1.1 1.1 0 0 1-1.08-1.1 1.1 1.1 0 0 1 1.1-1.1A1.1 1.1 0 0 1 35 7.33\" color=\"#000\" fill=\"none\" stroke=\"#030303\" stroke-linecap=\"round\" stroke-opacity=\".5\"/>","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":29858,"byte_end":30058,"line_start":243,"line_end":243,"column_start":5,"column_end":205}},{"value":"/   <path d=\"M35 7.32a1.1 1.1 0 0 1-1.1 1.1 1.1 1.1 0 0 1-1.08-1.1 1.1 1.1 0 0 1 1.1-1.1A1.1 1.1 0 0 1 35 7.33\" color=\"#000\" fill=\"#fff\"/>","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":30063,"byte_end":30203,"line_start":244,"line_end":244,"column_start":5,"column_end":145}},{"value":"/   <text style=\"line-height:6.61458302px\" x=\"35.74\" y=\"284.49\" font-size=\"5.29\" font-family=\"Sans\" letter-spacing=\"0\" word-spacing=\"0\" fill=\"#b3b3b3\" stroke-width=\".26\" transform=\"translate(19.595 -267)\">","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":30208,"byte_end":30415,"line_start":245,"line_end":245,"column_start":5,"column_end":212}},{"value":"/     <tspan x=\"35.74\" y=\"284.49\" font-size=\"10.58\">→</tspan>","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":30420,"byte_end":30485,"line_start":246,"line_end":246,"column_start":5,"column_end":68}},{"value":"/   </text>","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":30490,"byte_end":30503,"line_start":247,"line_end":247,"column_start":5,"column_end":18}},{"value":"/ </svg>","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":30508,"byte_end":30518,"line_start":248,"line_end":248,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":30523,"byte_end":30526,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ The tolerance value controls the maximum distance between the curved input","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":30531,"byte_end":30609,"line_start":250,"line_end":250,"column_start":5,"column_end":83}},{"value":"/ segments and their polyline approximations. (In technical terms, this is the","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":30614,"byte_end":30694,"line_start":251,"line_end":251,"column_start":5,"column_end":85}},{"value":"/ Hausdorff distance). The algorithm attempts to bound this distance between","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":30699,"byte_end":30777,"line_start":252,"line_end":252,"column_start":5,"column_end":83}},{"value":"/ by `tolerance` but this is not absolutely guaranteed. The appropriate value","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":30782,"byte_end":30861,"line_start":253,"line_end":253,"column_start":5,"column_end":84}},{"value":"/ depends on the use, but for antialiasted rendering, a value of 0.25 has been","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":30866,"byte_end":30946,"line_start":254,"line_end":254,"column_start":5,"column_end":85}},{"value":"/ determined to give good results. The number of segments tends to scale as the","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":30951,"byte_end":31032,"line_start":255,"line_end":255,"column_start":5,"column_end":86}},{"value":"/ inverse square root of tolerance.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":31037,"byte_end":31074,"line_start":256,"line_end":256,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":31079,"byte_end":31082,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ <svg viewBox=\"0 0 47.5 13.2\" height=\"100\" width=\"350\" xmlns=\"http://www.w3.org/2000/svg\">","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":31087,"byte_end":31180,"line_start":258,"line_end":258,"column_start":5,"column_end":98}},{"value":"/   <path d=\"M-2.44 9.53c16.27-8.5 39.68-7.93 52.13 1.9\" fill=\"none\" stroke=\"#dde9af\" stroke-width=\"4.6\"/>","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":31185,"byte_end":31293,"line_start":259,"line_end":259,"column_start":5,"column_end":113}},{"value":"/   <path d=\"M-1.97 9.3C14.28 1.03 37.36 1.7 49.7 11.4\" fill=\"none\" stroke=\"#00d400\" stroke-width=\".57\" stroke-linecap=\"round\" stroke-dasharray=\"4.6, 2.291434\"/>","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":31298,"byte_end":31461,"line_start":260,"line_end":260,"column_start":5,"column_end":168}},{"value":"/   <path d=\"M-1.94 10.46L6.2 6.08l28.32-1.4 15.17 6.74\" fill=\"none\" stroke=\"#000\" stroke-width=\".6\"/>","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":31466,"byte_end":31570,"line_start":261,"line_end":261,"column_start":5,"column_end":109}},{"value":"/   <path d=\"M6.83 6.57a.9.9 0 0 1-1.25.15.9.9 0 0 1-.15-1.25.9.9 0 0 1 1.25-.15.9.9 0 0 1 .15 1.25\" color=\"#000\" stroke=\"#000\" stroke-width=\".57\" stroke-linecap=\"round\" stroke-opacity=\".5\"/>","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":31575,"byte_end":31768,"line_start":262,"line_end":262,"column_start":5,"column_end":198}},{"value":"/   <path d=\"M35.35 5.3a.9.9 0 0 1-1.25.15.9.9 0 0 1-.15-1.25.9.9 0 0 1 1.25-.15.9.9 0 0 1 .15 1.24\" color=\"#000\" stroke=\"#000\" stroke-width=\".6\" stroke-opacity=\".5\"/>","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":31773,"byte_end":31942,"line_start":263,"line_end":263,"column_start":5,"column_end":174}},{"value":"/   <g fill=\"none\" stroke=\"#ff7f2a\" stroke-width=\".26\">","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":31947,"byte_end":32004,"line_start":264,"line_end":264,"column_start":5,"column_end":62}},{"value":"/     <path d=\"M20.4 3.8l.1 1.83M19.9 4.28l.48-.56.57.52M21.02 5.18l-.5.56-.6-.53\" stroke-width=\".2978872\"/>","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":32009,"byte_end":32119,"line_start":265,"line_end":265,"column_start":5,"column_end":115}},{"value":"/   </g>","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":32124,"byte_end":32134,"line_start":266,"line_end":266,"column_start":5,"column_end":15}},{"value":"/ </svg>","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":32139,"byte_end":32149,"line_start":267,"line_end":267,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":32154,"byte_end":32157,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ The callback will be called in order with each element of the generated","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":32162,"byte_end":32237,"line_start":269,"line_end":269,"column_start":5,"column_end":80}},{"value":"/ path. Because the result is made of polylines, these will be straight-line","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":32242,"byte_end":32320,"line_start":270,"line_end":270,"column_start":5,"column_end":83}},{"value":"/ path elements only, no curves.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":32325,"byte_end":32359,"line_start":271,"line_end":271,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":32364,"byte_end":32367,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ This algorithm is based on the blog post [Flattening quadratic Béziers]","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":32372,"byte_end":32448,"line_start":273,"line_end":273,"column_start":5,"column_end":80}},{"value":"/ but with some refinements. For one, there is a more careful approximation","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":32453,"byte_end":32530,"line_start":274,"line_end":274,"column_start":5,"column_end":82}},{"value":"/ at cusps. For two, the algorithm is extended to work with cubic Béziers","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":32535,"byte_end":32611,"line_start":275,"line_end":275,"column_start":5,"column_end":80}},{"value":"/ as well, by first subdividing into quadratics and then computing the","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":32616,"byte_end":32688,"line_start":276,"line_end":276,"column_start":5,"column_end":77}},{"value":"/ subdivision of each quadratic. However, as a clever trick, these quadratics","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":32693,"byte_end":32772,"line_start":277,"line_end":277,"column_start":5,"column_end":84}},{"value":"/ are subdivided fractionally, and their endpoints are not included.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":32777,"byte_end":32847,"line_start":278,"line_end":278,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":32852,"byte_end":32855,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ TODO: write a paper explaining this in more detail.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":32860,"byte_end":32915,"line_start":280,"line_end":280,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":32920,"byte_end":32923,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ Note: the [`flatten`](fn.flatten.html) function provides the same","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":32928,"byte_end":32997,"line_start":282,"line_end":282,"column_start":5,"column_end":74}},{"value":"/ functionality but works with slices and other [`PathEl`] iterators.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":33002,"byte_end":33073,"line_start":283,"line_end":283,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":33078,"byte_end":33081,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ [Flattening quadratic Béziers]: https://raphlinus.github.io/graphics/curves/2019/12/23/flatten-quadbez.html","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":33086,"byte_end":33198,"line_start":285,"line_end":285,"column_start":5,"column_end":116}},{"value":"/ [`PathEl`]: enum.PathEl.html","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":33203,"byte_end":33235,"line_start":286,"line_end":286,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":33557,"byte_end":33564,"line_start":295,"line_end":295,"column_start":12,"column_end":19},"name":"get_seg","qualname":"<BezPath>::get_seg","value":"pub fn get_seg(&Self, usize) -> Option<PathSeg>","parent":null,"children":[],"decl_id":null,"docs":" Get the segment at the given element index.","sig":null,"attributes":[{"value":"/ Get the segment at the given element index.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":33365,"byte_end":33412,"line_start":291,"line_end":291,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":33417,"byte_end":33420,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ The element index counts [`PathEl`](enum.PathEl.html) elements, so","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":33425,"byte_end":33495,"line_start":293,"line_end":293,"column_start":5,"column_end":75}},{"value":"/ for example includes an initial `Moveto`.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":33500,"byte_end":33545,"line_start":294,"line_end":294,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":34531,"byte_end":34539,"line_start":319,"line_end":319,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<BezPath>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the path contains no segments.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the path contains no segments.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":34467,"byte_end":34519,"line_start":318,"line_end":318,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":34733,"byte_end":34745,"line_start":326,"line_end":326,"column_start":12,"column_end":24},"name":"apply_affine","qualname":"<BezPath>::apply_affine","value":"pub fn apply_affine(&mut Self, Affine)","parent":null,"children":[],"decl_id":null,"docs":" Apply an affine transform to the path.\n","sig":null,"attributes":[{"value":"/ Apply an affine transform to the path.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":34679,"byte_end":34721,"line_start":325,"line_end":325,"column_start":5,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":148},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":36211,"byte_end":36218,"line_start":376,"line_end":376,"column_start":8,"column_end":15},"name":"flatten","qualname":"::bezpath::flatten","value":"pub fn flatten<impl IntoIterator<Item = PathEl>: IntoIterator<Item = PathEl>,\n               impl FnMut(PathEl): FnMut(PathEl) ->\n               ()>(impl IntoIterator<Item = PathEl>, f64, impl FnMut(PathEl))","parent":null,"children":[],"decl_id":null,"docs":" Flatten the path, invoking the callback repeatedly.","sig":null,"attributes":[{"value":"/ Flatten the path, invoking the callback repeatedly.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":35931,"byte_end":35986,"line_start":371,"line_end":371,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":35987,"byte_end":35990,"line_start":372,"line_end":372,"column_start":1,"column_end":4}},{"value":"/ See [`BezPath::flatten`](struct.BezPath.html#method.flatten) for more discussion.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":35991,"byte_end":36076,"line_start":373,"line_end":373,"column_start":1,"column_end":86}},{"value":"/ This signature is a bit more general, allowing flattening of `&[PathEl]` slices","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":36077,"byte_end":36160,"line_start":374,"line_end":374,"column_start":1,"column_end":84}},{"value":"/ and other iterators yielding `PathEl`.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":36161,"byte_end":36203,"line_start":375,"line_end":375,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":181},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":42488,"byte_end":42496,"line_start":553,"line_end":553,"column_start":8,"column_end":16},"name":"segments","qualname":"::bezpath::segments","value":"pub fn segments<I>(I) -> Segments<I::IntoIter> where I: IntoIterator<Item =\nPathEl>","parent":null,"children":[],"decl_id":null,"docs":" Transform an iterator over path elements into one over path\n segments.","sig":null,"attributes":[{"value":"/ Transform an iterator over path elements into one over path","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":42213,"byte_end":42276,"line_start":547,"line_end":547,"column_start":1,"column_end":64}},{"value":"/ segments.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":42277,"byte_end":42290,"line_start":548,"line_end":548,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":42291,"byte_end":42294,"line_start":549,"line_end":549,"column_start":1,"column_end":4}},{"value":"/ See also [`BezPath::segments`](struct.BezPath.html#method.segments).","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":42295,"byte_end":42367,"line_start":550,"line_end":550,"column_start":1,"column_end":73}},{"value":"/ This signature is a bit more general, allowing `&[PathEl]` slices","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":42368,"byte_end":42437,"line_start":551,"line_end":551,"column_start":1,"column_end":70}},{"value":"/ and other iterators yielding `PathEl`.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":42438,"byte_end":42480,"line_start":552,"line_end":552,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":183},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":42826,"byte_end":42834,"line_start":566,"line_end":566,"column_start":12,"column_end":20},"name":"Segments","qualname":"::bezpath::Segments","value":"Segments {  }","parent":null,"children":[{"krate":0,"index":185},{"krate":0,"index":186}],"decl_id":null,"docs":" An iterator that transforms path elements to path segments.","sig":null,"attributes":[{"value":"/ An iterator that transforms path elements to path segments.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":42672,"byte_end":42735,"line_start":563,"line_end":563,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":42736,"byte_end":42739,"line_start":564,"line_end":564,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`segments`](fn.segments.html) function.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":42740,"byte_end":42814,"line_start":565,"line_end":565,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":47495,"byte_end":47502,"line_start":711,"line_end":711,"column_start":12,"column_end":19},"name":"reverse","qualname":"<PathSeg>::reverse","value":"pub fn reverse(&Self) -> PathSeg","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `PathSeg` describing the same path as `self`, but with\n the points reversed.\n","sig":null,"attributes":[{"value":"/ Returns a new `PathSeg` describing the same path as `self`, but with","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":47382,"byte_end":47454,"line_start":709,"line_end":709,"column_start":5,"column_end":77}},{"value":"/ the points reversed.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":47459,"byte_end":47483,"line_start":710,"line_end":710,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":47869,"byte_end":47877,"line_start":720,"line_end":720,"column_start":12,"column_end":20},"name":"to_cubic","qualname":"<PathSeg>::to_cubic","value":"pub fn to_cubic(&Self) -> CubicBez","parent":null,"children":[],"decl_id":null,"docs":" Convert this segment to a cubic bezier.\n","sig":null,"attributes":[{"value":"/ Convert this segment to a cubic bezier.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":47814,"byte_end":47857,"line_start":719,"line_end":719,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":52402,"byte_end":52416,"line_start":850,"line_end":850,"column_start":12,"column_end":26},"name":"intersect_line","qualname":"<PathSeg>::intersect_line","value":"pub fn intersect_line(&Self, Line) -> ArrayVec<[LineIntersection; ]>","parent":null,"children":[],"decl_id":null,"docs":" Compute intersections against a line.","sig":null,"attributes":[{"value":"/ Compute intersections against a line.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":51279,"byte_end":51320,"line_start":824,"line_end":824,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":51325,"byte_end":51328,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ Returns a vector of the intersections. For each intersection,","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":51333,"byte_end":51398,"line_start":826,"line_end":826,"column_start":5,"column_end":70}},{"value":"/ the `t` value of the segment and line are given.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":51403,"byte_end":51455,"line_start":827,"line_end":827,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":51460,"byte_end":51463,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ Note: This test is designed to be inclusive of points near the endpoints","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":51468,"byte_end":51544,"line_start":829,"line_end":829,"column_start":5,"column_end":81}},{"value":"/ of the segment. This is so that testing a line against multiple","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":51549,"byte_end":51616,"line_start":830,"line_end":830,"column_start":5,"column_end":72}},{"value":"/ contiguous segments of a path will be guaranteed to catch at least one","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":51621,"byte_end":51695,"line_start":831,"line_end":831,"column_start":5,"column_end":79}},{"value":"/ of them. In such cases, use higher level logic to coalesce the hits","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":51700,"byte_end":51771,"line_start":832,"line_end":832,"column_start":5,"column_end":76}},{"value":"/ (the `t` value may be slightly outside the range of 0..1).","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":51776,"byte_end":51838,"line_start":833,"line_end":833,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":51843,"byte_end":51846,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":51851,"byte_end":51865,"line_start":835,"line_end":835,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":51870,"byte_end":51873,"line_start":836,"line_end":836,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":51878,"byte_end":51885,"line_start":837,"line_end":837,"column_start":5,"column_end":12}},{"value":"/ # use kurbo::*;","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":51890,"byte_end":51909,"line_start":838,"line_end":838,"column_start":5,"column_end":24}},{"value":"/ let seg = PathSeg::Line(Line::new((0.0, 0.0), (2.0, 0.0)));","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":51914,"byte_end":51977,"line_start":839,"line_end":839,"column_start":5,"column_end":68}},{"value":"/ let line = Line::new((1.0, 2.0), (1.0, -2.0));","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":51982,"byte_end":52032,"line_start":840,"line_end":840,"column_start":5,"column_end":55}},{"value":"/ let intersection = seg.intersect_line(line);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":52037,"byte_end":52085,"line_start":841,"line_end":841,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(intersection.len(), 1);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":52090,"byte_end":52128,"line_start":842,"line_end":842,"column_start":5,"column_end":43}},{"value":"/ let intersection = intersection[0];","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":52133,"byte_end":52172,"line_start":843,"line_end":843,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(intersection.segment_t, 0.5);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":52177,"byte_end":52221,"line_start":844,"line_end":844,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(intersection.line_t, 0.5);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":52226,"byte_end":52267,"line_start":845,"line_end":845,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":52272,"byte_end":52275,"line_start":846,"line_end":846,"column_start":5,"column_end":8}},{"value":"/ let point = seg.eval(intersection.segment_t);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":52280,"byte_end":52329,"line_start":847,"line_end":847,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(point, Point::new(1.0, 0.0));","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":52334,"byte_end":52378,"line_start":848,"line_end":848,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":52383,"byte_end":52390,"line_start":849,"line_end":849,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":252},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":58981,"byte_end":58992,"line_start":1044,"line_end":1044,"column_start":12,"column_end":23},"name":"PathSegIter","qualname":"::bezpath::PathSegIter","value":"PathSegIter {  }","parent":null,"children":[{"krate":0,"index":253},{"krate":0,"index":254}],"decl_id":null,"docs":" An iterator for path segments.\n","sig":null,"attributes":[{"value":"/ An iterator for path segments.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":58935,"byte_end":58969,"line_start":1043,"line_end":1043,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":1320},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/circle.rs","byte_start":64210,"byte_end":64216,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Circle","qualname":"::circle::Circle","value":"Circle { center, radius }","parent":null,"children":[{"krate":0,"index":1321},{"krate":0,"index":1322}],"decl_id":null,"docs":" A circle.\n","sig":null,"attributes":[{"value":"/ A circle.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/circle.rs","byte_start":64058,"byte_end":64071,"line_start":11,"line_end":11,"column_start":1,"column_end":14}}]},{"kind":"Field","id":{"krate":0,"index":1321},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/circle.rs","byte_start":64247,"byte_end":64253,"line_start":16,"line_end":16,"column_start":9,"column_end":15},"name":"center","qualname":"::circle::Circle::center","value":"point::Point","parent":{"krate":0,"index":1320},"children":[],"decl_id":null,"docs":" The center.\n","sig":null,"attributes":[{"value":"/ The center.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/circle.rs","byte_start":64223,"byte_end":64238,"line_start":15,"line_end":15,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":1322},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/circle.rs","byte_start":64290,"byte_end":64296,"line_start":18,"line_end":18,"column_start":9,"column_end":15},"name":"radius","qualname":"::circle::Circle::radius","value":"f64","parent":{"krate":0,"index":1320},"children":[],"decl_id":null,"docs":" The radius.\n","sig":null,"attributes":[{"value":"/ The radius.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/circle.rs","byte_start":64266,"byte_end":64281,"line_start":17,"line_end":17,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/circle.rs","byte_start":64390,"byte_end":64393,"line_start":24,"line_end":24,"column_start":12,"column_end":15},"name":"new","qualname":"<Circle>::new","value":"pub fn new<impl Into<Point>: Into<Point>>(impl Into<Point>, f64) -> Circle","parent":null,"children":[],"decl_id":null,"docs":" A new circle from center and radius.\n","sig":null,"attributes":[{"value":"/ A new circle from center and radius.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/circle.rs","byte_start":64324,"byte_end":64364,"line_start":22,"line_end":22,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/circle.rs","byte_start":64369,"byte_end":64378,"line_start":23,"line_end":23,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/circle.rs","byte_start":64678,"byte_end":64685,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"segment","qualname":"<Circle>::segment","value":"pub fn segment(Self, f64, f64, f64) -> CircleSegment","parent":null,"children":[],"decl_id":null,"docs":" Create a [`CircleSegment`] by cutting out parts of this circle.","sig":null,"attributes":[{"value":"/ Create a [`CircleSegment`] by cutting out parts of this circle.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/circle.rs","byte_start":64538,"byte_end":64605,"line_start":31,"line_end":31,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/circle.rs","byte_start":64610,"byte_end":64613,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ [`CircleSegment`]: struct.CircleSegment.html","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/circle.rs","byte_start":64618,"byte_end":64666,"line_start":33,"line_end":33,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":299},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/circle.rs","byte_start":65561,"byte_end":65575,"line_start":77,"line_end":77,"column_start":12,"column_end":26},"name":"CirclePathIter","qualname":"::circle::CirclePathIter","value":"CirclePathIter {  }","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":316},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/circle.rs","byte_start":68358,"byte_end":68371,"line_start":176,"line_end":176,"column_start":12,"column_end":25},"name":"CircleSegment","qualname":"::circle::CircleSegment","value":"CircleSegment { center, outer_radius, inner_radius, start_angle, sweep_angle }","parent":null,"children":[{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321}],"decl_id":null,"docs":" A segment of a circle.","sig":null,"attributes":[{"value":"/ A segment of a circle.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/circle.rs","byte_start":68246,"byte_end":68272,"line_start":173,"line_end":173,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/circle.rs","byte_start":68273,"byte_end":68276,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ If `inner_radius > 0`, then the shape will be a doughnut segment.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/circle.rs","byte_start":68277,"byte_end":68346,"line_start":175,"line_end":175,"column_start":1,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":317},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/circle.rs","byte_start":68402,"byte_end":68408,"line_start":178,"line_end":178,"column_start":9,"column_end":15},"name":"center","qualname":"::circle::CircleSegment::center","value":"point::Point","parent":{"krate":0,"index":316},"children":[],"decl_id":null,"docs":" The center.\n","sig":null,"attributes":[{"value":"/ The center.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/circle.rs","byte_start":68378,"byte_end":68393,"line_start":177,"line_end":177,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":318},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/circle.rs","byte_start":68451,"byte_end":68463,"line_start":180,"line_end":180,"column_start":9,"column_end":21},"name":"outer_radius","qualname":"::circle::CircleSegment::outer_radius","value":"f64","parent":{"krate":0,"index":316},"children":[],"decl_id":null,"docs":" The outer radius.\n","sig":null,"attributes":[{"value":"/ The outer radius.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/circle.rs","byte_start":68421,"byte_end":68442,"line_start":179,"line_end":179,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":319},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/circle.rs","byte_start":68504,"byte_end":68516,"line_start":182,"line_end":182,"column_start":9,"column_end":21},"name":"inner_radius","qualname":"::circle::CircleSegment::inner_radius","value":"f64","parent":{"krate":0,"index":316},"children":[],"decl_id":null,"docs":" The inner radius.\n","sig":null,"attributes":[{"value":"/ The inner radius.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/circle.rs","byte_start":68474,"byte_end":68495,"line_start":181,"line_end":181,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":320},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/circle.rs","byte_start":68592,"byte_end":68603,"line_start":184,"line_end":184,"column_start":9,"column_end":20},"name":"start_angle","qualname":"::circle::CircleSegment::start_angle","value":"f64","parent":{"krate":0,"index":316},"children":[],"decl_id":null,"docs":" The angle to start drawing the segment (in radians).\n","sig":null,"attributes":[{"value":"/ The angle to start drawing the segment (in radians).","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/circle.rs","byte_start":68527,"byte_end":68583,"line_start":183,"line_end":183,"column_start":5,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":321},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/circle.rs","byte_start":68670,"byte_end":68681,"line_start":186,"line_end":186,"column_start":9,"column_end":20},"name":"sweep_angle","qualname":"::circle::CircleSegment::sweep_angle","value":"f64","parent":{"krate":0,"index":316},"children":[],"decl_id":null,"docs":" The arc length of the segment (in radians).\n","sig":null,"attributes":[{"value":"/ The arc length of the segment (in radians).","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/circle.rs","byte_start":68614,"byte_end":68661,"line_start":185,"line_end":185,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/circle.rs","byte_start":68786,"byte_end":68789,"line_start":191,"line_end":191,"column_start":12,"column_end":15},"name":"new","qualname":"<CircleSegment>::new","value":"pub fn new<impl Into<Point>: Into<Point>>(impl Into<Point>, f64, f64, f64,\n                                          f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `CircleSegment` out of its constituent parts.\n","sig":null,"attributes":[{"value":"/ Create a `CircleSegment` out of its constituent parts.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/circle.rs","byte_start":68716,"byte_end":68774,"line_start":190,"line_end":190,"column_start":5,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":340},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/common.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"common","qualname":"::common","value":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/common.rs","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":345},{"krate":0,"index":347},{"krate":0,"index":349},{"krate":0,"index":351},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358}],"decl_id":null,"docs":" Common mathematical operations\n","sig":null,"attributes":[{"value":"/ Common mathematical operations","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/common.rs","byte_start":73591,"byte_end":73625,"line_start":1,"line_end":1,"column_start":1,"column_end":35}},{"value":"allow(missing_docs)","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/common.rs","byte_start":73627,"byte_end":73650,"line_start":3,"line_end":3,"column_start":1,"column_end":24}}]},{"kind":"Trait","id":{"krate":0,"index":342},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/common.rs","byte_start":73736,"byte_end":73744,"line_start":8,"line_end":8,"column_start":11,"column_end":19},"name":"FloatExt","qualname":"::common::FloatExt","value":"FloatExt<T>","parent":null,"children":[{"krate":0,"index":344}],"decl_id":null,"docs":" Adds convenience methods to `f32` and `f64`.\n","sig":null,"attributes":[{"value":"/ Adds convenience methods to `f32` and `f64`.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/common.rs","byte_start":73677,"byte_end":73725,"line_start":7,"line_end":7,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/common.rs","byte_start":74292,"byte_end":74298,"line_start":29,"line_end":29,"column_start":8,"column_end":14},"name":"expand","qualname":"::common::FloatExt::expand","value":"pub fn expand(&Self) -> T","parent":{"krate":0,"index":342},"children":[],"decl_id":null,"docs":" Rounds to the nearest integer away from zero,\n unless the provided value is already an integer.","sig":null,"attributes":[{"value":"/ Rounds to the nearest integer away from zero,","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/common.rs","byte_start":73754,"byte_end":73803,"line_start":9,"line_end":9,"column_start":5,"column_end":54}},{"value":"/ unless the provided value is already an integer.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/common.rs","byte_start":73808,"byte_end":73860,"line_start":10,"line_end":10,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/common.rs","byte_start":73865,"byte_end":73868,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ It is to `ceil` what `trunc` is to `floor`.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/common.rs","byte_start":73873,"byte_end":73920,"line_start":12,"line_end":12,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/common.rs","byte_start":73925,"byte_end":73928,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/common.rs","byte_start":73933,"byte_end":73947,"line_start":14,"line_end":14,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/common.rs","byte_start":73952,"byte_end":73955,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/common.rs","byte_start":73960,"byte_end":73967,"line_start":16,"line_end":16,"column_start":5,"column_end":12}},{"value":"/ use kurbo::common::FloatExt;","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/common.rs","byte_start":73972,"byte_end":74004,"line_start":17,"line_end":17,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/common.rs","byte_start":74009,"byte_end":74012,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ let f = 3.7_f64;","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/common.rs","byte_start":74017,"byte_end":74037,"line_start":19,"line_end":19,"column_start":5,"column_end":25}},{"value":"/ let g = 3.0_f64;","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/common.rs","byte_start":74042,"byte_end":74062,"line_start":20,"line_end":20,"column_start":5,"column_end":25}},{"value":"/ let h = -3.7_f64;","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/common.rs","byte_start":74067,"byte_end":74088,"line_start":21,"line_end":21,"column_start":5,"column_end":26}},{"value":"/ let i = -5.1_f32;","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/common.rs","byte_start":74093,"byte_end":74114,"line_start":22,"line_end":22,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/common.rs","byte_start":74119,"byte_end":74122,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.expand(), 4.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/common.rs","byte_start":74127,"byte_end":74159,"line_start":24,"line_end":24,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(g.expand(), 3.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/common.rs","byte_start":74164,"byte_end":74196,"line_start":25,"line_end":25,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(h.expand(), -4.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/common.rs","byte_start":74201,"byte_end":74234,"line_start":26,"line_end":26,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(i.expand(), -6.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/common.rs","byte_start":74239,"byte_end":74272,"line_start":27,"line_end":27,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/common.rs","byte_start":74277,"byte_end":74284,"line_start":28,"line_end":28,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":349},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/common.rs","byte_start":74895,"byte_end":74906,"line_start":54,"line_end":54,"column_start":8,"column_end":19},"name":"solve_cubic","qualname":"::common::solve_cubic","value":"pub fn solve_cubic(f64, f64, f64, f64) -> ArrayVec<[f64; ]>","parent":null,"children":[],"decl_id":null,"docs":" Find real roots of cubic equation.","sig":null,"attributes":[{"value":"/ Find real roots of cubic equation.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/common.rs","byte_start":74563,"byte_end":74601,"line_start":46,"line_end":46,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/common.rs","byte_start":74602,"byte_end":74605,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ The implementation is not (yet) fully robust, but it does handle the case","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/common.rs","byte_start":74606,"byte_end":74683,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"/ where `c3` is zero (in that case, solving the quadratic equation).","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/common.rs","byte_start":74684,"byte_end":74754,"line_start":49,"line_end":49,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/common.rs","byte_start":74755,"byte_end":74758,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ See: <http://mathworld.wolfram.com/CubicFormula.html>","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/common.rs","byte_start":74759,"byte_end":74816,"line_start":51,"line_end":51,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/common.rs","byte_start":74817,"byte_end":74820,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Returns values of x for which c0 + c1 x + c2 x² + c3 x³ = 0.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/common.rs","byte_start":74821,"byte_end":74887,"line_start":53,"line_end":53,"column_start":1,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":351},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/common.rs","byte_start":76831,"byte_end":76846,"line_start":105,"line_end":105,"column_start":8,"column_end":23},"name":"solve_quadratic","qualname":"::common::solve_quadratic","value":"pub fn solve_quadratic(f64, f64, f64) -> ArrayVec<[f64; ]>","parent":null,"children":[],"decl_id":null,"docs":" Find real roots of quadratic equation.","sig":null,"attributes":[{"value":"/ Find real roots of quadratic equation.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/common.rs","byte_start":76374,"byte_end":76416,"line_start":96,"line_end":96,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/common.rs","byte_start":76417,"byte_end":76420,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ Returns values of x for which c0 + c1 x + c2 x² = 0.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/common.rs","byte_start":76421,"byte_end":76478,"line_start":98,"line_end":98,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/common.rs","byte_start":76479,"byte_end":76482,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ This function tries to be quite numerically robust. If the equation","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/common.rs","byte_start":76483,"byte_end":76554,"line_start":100,"line_end":100,"column_start":1,"column_end":72}},{"value":"/ is nearly linear, it will return the root ignoring the quadratic term;","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/common.rs","byte_start":76555,"byte_end":76629,"line_start":101,"line_end":101,"column_start":1,"column_end":75}},{"value":"/ the other root might be out of representable range. In the degenerate","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/common.rs","byte_start":76630,"byte_end":76703,"line_start":102,"line_end":102,"column_start":1,"column_end":74}},{"value":"/ case where all coefficients are zero, so that all values of x satisfy","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/common.rs","byte_start":76704,"byte_end":76777,"line_start":103,"line_end":103,"column_start":1,"column_end":74}},{"value":"/ the equation, a single `0.0` is returned.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/common.rs","byte_start":76778,"byte_end":76823,"line_start":104,"line_end":104,"column_start":1,"column_end":46}}]},{"kind":"Const","id":{"krate":0,"index":353},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/common.rs","byte_start":78343,"byte_end":78366,"line_start":154,"line_end":154,"column_start":11,"column_end":34},"name":"GAUSS_LEGENDRE_COEFFS_3","qualname":"::common::GAUSS_LEGENDRE_COEFFS_3","value":"&[(f64, f64)]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":354},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/common.rs","byte_start":78540,"byte_end":78563,"line_start":160,"line_end":160,"column_start":11,"column_end":34},"name":"GAUSS_LEGENDRE_COEFFS_5","qualname":"::common::GAUSS_LEGENDRE_COEFFS_5","value":"&[(f64, f64)]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":355},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/common.rs","byte_start":78830,"byte_end":78853,"line_start":168,"line_end":168,"column_start":11,"column_end":34},"name":"GAUSS_LEGENDRE_COEFFS_7","qualname":"::common::GAUSS_LEGENDRE_COEFFS_7","value":"&[(f64, f64)]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":356},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/common.rs","byte_start":79213,"byte_end":79236,"line_start":178,"line_end":178,"column_start":11,"column_end":34},"name":"GAUSS_LEGENDRE_COEFFS_9","qualname":"::common::GAUSS_LEGENDRE_COEFFS_9","value":"&[(f64, f64)]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":357},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/common.rs","byte_start":79689,"byte_end":79713,"line_start":190,"line_end":190,"column_start":11,"column_end":35},"name":"GAUSS_LEGENDRE_COEFFS_11","qualname":"::common::GAUSS_LEGENDRE_COEFFS_11","value":"&[(f64, f64)]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":358},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/common.rs","byte_start":80259,"byte_end":80283,"line_start":204,"line_end":204,"column_start":11,"column_end":35},"name":"GAUSS_LEGENDRE_COEFFS_24","qualname":"::common::GAUSS_LEGENDRE_COEFFS_24","value":"&[(f64, f64)]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1334},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/cubicbez.rs","byte_start":83279,"byte_end":83287,"line_start":19,"line_end":19,"column_start":12,"column_end":20},"name":"CubicBez","qualname":"::cubicbez::CubicBez","value":"CubicBez { p0, p1, p2, p3 }","parent":null,"children":[{"krate":0,"index":1335},{"krate":0,"index":1336},{"krate":0,"index":1337},{"krate":0,"index":1338}],"decl_id":null,"docs":" A single cubic Bézier segment.\n","sig":null,"attributes":[{"value":"/ A single cubic Bézier segment.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/cubicbez.rs","byte_start":83091,"byte_end":83126,"line_start":15,"line_end":15,"column_start":1,"column_end":35}},{"value":"allow(missing_docs)","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/cubicbez.rs","byte_start":83245,"byte_end":83267,"line_start":18,"line_end":18,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":1335},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/cubicbez.rs","byte_start":83298,"byte_end":83300,"line_start":20,"line_end":20,"column_start":9,"column_end":11},"name":"p0","qualname":"::cubicbez::CubicBez::p0","value":"point::Point","parent":{"krate":0,"index":1334},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1336},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/cubicbez.rs","byte_start":83317,"byte_end":83319,"line_start":21,"line_end":21,"column_start":9,"column_end":11},"name":"p1","qualname":"::cubicbez::CubicBez::p1","value":"point::Point","parent":{"krate":0,"index":1334},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1337},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/cubicbez.rs","byte_start":83336,"byte_end":83338,"line_start":22,"line_end":22,"column_start":9,"column_end":11},"name":"p2","qualname":"::cubicbez::CubicBez::p2","value":"point::Point","parent":{"krate":0,"index":1334},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1338},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/cubicbez.rs","byte_start":83355,"byte_end":83357,"line_start":23,"line_end":23,"column_start":9,"column_end":11},"name":"p3","qualname":"::cubicbez::CubicBez::p3","value":"point::Point","parent":{"krate":0,"index":1334},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/cubicbez.rs","byte_start":83578,"byte_end":83581,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<CubicBez>::new","value":"pub fn new<P: Into<Point>>(P, P, P, P) -> CubicBez","parent":null,"children":[],"decl_id":null,"docs":" Create a new cubic Bézier segment.\n","sig":null,"attributes":[{"value":"/ Create a new cubic Bézier segment.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/cubicbez.rs","byte_start":83513,"byte_end":83552,"line_start":34,"line_end":34,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/cubicbez.rs","byte_start":83557,"byte_end":83566,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/cubicbez.rs","byte_start":84212,"byte_end":84220,"line_start":55,"line_end":55,"column_start":12,"column_end":20},"name":"to_quads","qualname":"<CubicBez>::to_quads","value":"pub fn to_quads(&Self, f64) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Convert to quadratic Béziers.","sig":null,"attributes":[{"value":"/ Convert to quadratic Béziers.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/cubicbez.rs","byte_start":83788,"byte_end":83822,"line_start":45,"line_end":45,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/cubicbez.rs","byte_start":83827,"byte_end":83830,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ The iterator returns the start and end parameter in the cubic of each quadratic","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/cubicbez.rs","byte_start":83835,"byte_end":83918,"line_start":47,"line_end":47,"column_start":5,"column_end":88}},{"value":"/ segment, along with the quadratic.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/cubicbez.rs","byte_start":83923,"byte_end":83961,"line_start":48,"line_end":48,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/cubicbez.rs","byte_start":83966,"byte_end":83969,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that the resulting quadratic Béziers are not in general G1 continuous;","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/cubicbez.rs","byte_start":83974,"byte_end":84054,"line_start":50,"line_end":50,"column_start":5,"column_end":84}},{"value":"/ they are optimized for minimizing distance error.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/cubicbez.rs","byte_start":84059,"byte_end":84112,"line_start":51,"line_end":51,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/cubicbez.rs","byte_start":84117,"byte_end":84120,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This iterator will always produce at least one `QuadBez`.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/cubicbez.rs","byte_start":84125,"byte_end":84186,"line_start":53,"line_end":53,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/cubicbez.rs","byte_start":84191,"byte_end":84200,"line_start":54,"line_end":54,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":390},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/cubicbez.rs","byte_start":85347,"byte_end":85359,"line_start":78,"line_end":78,"column_start":12,"column_end":24},"name":"CubicBezIter","qualname":"::cubicbez::CubicBezIter","value":"CubicBezIter {  }","parent":null,"children":[{"krate":0,"index":391},{"krate":0,"index":392}],"decl_id":null,"docs":" An iterator for cubic beziers.\n","sig":null,"attributes":[{"value":"/ An iterator for cubic beziers.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/cubicbez.rs","byte_start":85301,"byte_end":85335,"line_start":77,"line_end":77,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":1348},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":100100,"byte_end":100107,"line_start":14,"line_end":14,"column_start":12,"column_end":19},"name":"Ellipse","qualname":"::ellipse::Ellipse","value":"Ellipse {  }","parent":null,"children":[{"krate":0,"index":1349}],"decl_id":null,"docs":" An ellipse.\n","sig":null,"attributes":[{"value":"/ An ellipse.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":99946,"byte_end":99961,"line_start":11,"line_end":11,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":100933,"byte_end":100936,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"new","qualname":"<Ellipse>::new","value":"pub fn new<impl Into<Point>: Into<Point>,\n           impl Into<Vec2>: Into<Vec2>>(impl Into<Point>, impl Into<Vec2>,\n                                        f64) -> Ellipse","parent":null,"children":[],"decl_id":null,"docs":" Create A new ellipse with a given center, radii, and rotation.","sig":null,"attributes":[{"value":"/ Create A new ellipse with a given center, radii, and rotation.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":100407,"byte_end":100473,"line_start":23,"line_end":23,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":100478,"byte_end":100481,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ The returned ellipse will be the result of taking a circle, stretching","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":100486,"byte_end":100560,"line_start":25,"line_end":25,"column_start":5,"column_end":79}},{"value":"/ it by the `radii` along the x and y axes, then rotating it from the","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":100565,"byte_end":100636,"line_start":26,"line_end":26,"column_start":5,"column_end":76}},{"value":"/ x asix by `rotation` radians, before finally translating the center","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":100641,"byte_end":100712,"line_start":27,"line_end":27,"column_start":5,"column_end":76}},{"value":"/ to `center`.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":100717,"byte_end":100733,"line_start":28,"line_end":28,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":100738,"byte_end":100741,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ Rotation is clockwise in a y-down coordinate system. For more on","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":100746,"byte_end":100814,"line_start":30,"line_end":30,"column_start":5,"column_end":73}},{"value":"/ rotation, see [`Affine::rotate`].","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":100819,"byte_end":100856,"line_start":31,"line_end":31,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":100861,"byte_end":100864,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ [`Affine::rotate`]: Affine::rotate","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":100869,"byte_end":100907,"line_start":33,"line_end":33,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":100912,"byte_end":100921,"line_start":34,"line_end":34,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":101590,"byte_end":101599,"line_start":51,"line_end":51,"column_start":12,"column_end":21},"name":"from_rect","qualname":"<Ellipse>::from_rect","value":"pub fn from_rect(Rect) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the largest ellipse that can be bounded by this [`Rect`].","sig":null,"attributes":[{"value":"/ Returns the largest ellipse that can be bounded by this [`Rect`].","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":101202,"byte_end":101271,"line_start":41,"line_end":41,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":101276,"byte_end":101279,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ This uses the absolute width and height of the rectangle.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":101284,"byte_end":101345,"line_start":43,"line_end":43,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":101350,"byte_end":101353,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ This ellipse is always axis-aligned; to apply rotation you can call","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":101358,"byte_end":101429,"line_start":45,"line_end":45,"column_start":5,"column_end":76}},{"value":"/ [`with_rotation`] with the result.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":101434,"byte_end":101472,"line_start":46,"line_end":46,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":101477,"byte_end":101480,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ [`Rect`]: struct.Rect.html","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":101485,"byte_end":101515,"line_start":48,"line_end":48,"column_start":5,"column_end":35}},{"value":"/ [`with_rotation`]: #method.with_rotation","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":101520,"byte_end":101564,"line_start":49,"line_end":49,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":101569,"byte_end":101578,"line_start":50,"line_end":50,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":101889,"byte_end":101900,"line_start":59,"line_end":59,"column_start":12,"column_end":23},"name":"from_affine","qualname":"<Ellipse>::from_affine","value":"pub fn from_affine(Affine) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an ellipse from an affine transformation of the unit circle.\n","sig":null,"attributes":[{"value":"/ Create an ellipse from an affine transformation of the unit circle.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":101792,"byte_end":101863,"line_start":57,"line_end":57,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":101868,"byte_end":101877,"line_start":58,"line_end":58,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":102072,"byte_end":102083,"line_start":66,"line_end":66,"column_start":12,"column_end":23},"name":"with_center","qualname":"<Ellipse>::with_center","value":"pub fn with_center(Self, Point) -> Ellipse","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Ellipse` centered on the provided point.\n","sig":null,"attributes":[{"value":"/ Create a new `Ellipse` centered on the provided point.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":101972,"byte_end":102030,"line_start":63,"line_end":63,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":102035,"byte_end":102044,"line_start":64,"line_end":64,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":102049,"byte_end":102060,"line_start":65,"line_end":65,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":102359,"byte_end":102369,"line_start":75,"line_end":75,"column_start":12,"column_end":22},"name":"with_radii","qualname":"<Ellipse>::with_radii","value":"pub fn with_radii(Self, Vec2) -> Ellipse","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Ellipse` with the provided radii.\n","sig":null,"attributes":[{"value":"/ Create a new `Ellipse` with the provided radii.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":102280,"byte_end":102331,"line_start":73,"line_end":73,"column_start":5,"column_end":56}},{"value":"must_use","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":102336,"byte_end":102347,"line_start":74,"line_end":74,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":102887,"byte_end":102900,"line_start":89,"line_end":89,"column_start":12,"column_end":25},"name":"with_rotation","qualname":"<Ellipse>::with_rotation","value":"pub fn with_rotation(Self, f64) -> Ellipse","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Ellipse`, with the rotation replaced by `rotation`\n radians.","sig":null,"attributes":[{"value":"/ Create a new `Ellipse`, with the rotation replaced by `rotation`","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":102594,"byte_end":102662,"line_start":81,"line_end":81,"column_start":5,"column_end":73}},{"value":"/ radians.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":102667,"byte_end":102679,"line_start":82,"line_end":82,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":102684,"byte_end":102687,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ The rotation is clockwise, for a y-down coordinate system. For more","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":102692,"byte_end":102763,"line_start":84,"line_end":84,"column_start":5,"column_end":76}},{"value":"/ on rotation, See [`Affine::rotate`].","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":102768,"byte_end":102808,"line_start":85,"line_end":85,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":102813,"byte_end":102816,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ [`Affine::rotate`]: Affine::rotate","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":102821,"byte_end":102859,"line_start":87,"line_end":87,"column_start":5,"column_end":43}},{"value":"must_use","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":102864,"byte_end":102875,"line_start":88,"line_end":88,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":103225,"byte_end":103240,"line_start":98,"line_end":98,"column_start":12,"column_end":27},"name":"with_x_rotation","qualname":"<Ellipse>::with_x_rotation","value":"pub fn with_x_rotation(Self, f64) -> Ellipse","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.7.0\", note = \"use with_rotation instead\")","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":103112,"byte_end":103178,"line_start":95,"line_end":95,"column_start":5,"column_end":71}},{"value":"must_use","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":103183,"byte_end":103194,"line_start":96,"line_end":96,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":103991,"byte_end":103997,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"name":"center","qualname":"<Ellipse>::center","value":"pub fn center(&Self) -> Point","parent":null,"children":[],"decl_id":null,"docs":" Returns the center of this ellipse.\n","sig":null,"attributes":[{"value":"/ Returns the center of this ellipse.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":103926,"byte_end":103965,"line_start":116,"line_end":116,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":103970,"byte_end":103979,"line_start":117,"line_end":117,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":104300,"byte_end":104305,"line_start":127,"line_end":127,"column_start":12,"column_end":17},"name":"radii","qualname":"<Ellipse>::radii","value":"pub fn radii(&Self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Returns the two radii of this ellipse.","sig":null,"attributes":[{"value":"/ Returns the two radii of this ellipse.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":104124,"byte_end":104166,"line_start":123,"line_end":123,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":104171,"byte_end":104174,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ The first number is the horizontal radius and the second is the vertical","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":104179,"byte_end":104255,"line_start":125,"line_end":125,"column_start":5,"column_end":81}},{"value":"/ radius, before rotation.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":104260,"byte_end":104288,"line_start":126,"line_end":126,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":104557,"byte_end":104565,"line_start":135,"line_end":135,"column_start":12,"column_end":20},"name":"rotation","qualname":"<Ellipse>::rotation","value":"pub fn rotation(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The ellipse's rotation, in radians.","sig":null,"attributes":[{"value":"/ The ellipse's rotation, in radians.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":104361,"byte_end":104400,"line_start":131,"line_end":131,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":104405,"byte_end":104408,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ This allows all possible ellipses to be drawn by always starting with","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":104413,"byte_end":104486,"line_start":133,"line_end":133,"column_start":5,"column_end":78}},{"value":"/ an ellipse with the two radii on the x and y axes.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":104491,"byte_end":104545,"line_start":134,"line_end":134,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":104714,"byte_end":104724,"line_start":141,"line_end":141,"column_start":12,"column_end":22},"name":"x_rotation","qualname":"<Ellipse>::x_rotation","value":"pub fn x_rotation(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.7.0\", note = \"use rotation() instead\")","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":104639,"byte_end":104702,"line_start":140,"line_end":140,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":1361},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":112832,"byte_end":112838,"line_start":107,"line_end":107,"column_start":12,"column_end":18},"name":"Insets","qualname":"::insets::Insets","value":"Insets { x0, y0, x1, y1 }","parent":null,"children":[{"krate":0,"index":1362},{"krate":0,"index":1363},{"krate":0,"index":1364},{"krate":0,"index":1365}],"decl_id":null,"docs":" Insets from the edges of a rectangle.","sig":null,"attributes":[{"value":"/ Insets from the edges of a rectangle.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":110021,"byte_end":110062,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":110063,"byte_end":110066,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":110067,"byte_end":110070,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ The inset value for each edge can be thought of as a delta computed from","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":110071,"byte_end":110147,"line_start":24,"line_end":24,"column_start":1,"column_end":77}},{"value":"/ the center of the rect to that edge. For instance, with an inset of `2.0` on","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":110148,"byte_end":110228,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ the x-axis, a rectange with the origin `(0.0, 0.0)` with that inset added","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":110229,"byte_end":110306,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/ will have the new origin at `(-2.0, 0.0)`.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":110307,"byte_end":110353,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":110354,"byte_end":110357,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Put alternatively, a positive inset represents increased distance from center,","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":110358,"byte_end":110440,"line_start":29,"line_end":29,"column_start":1,"column_end":83}},{"value":"/ and a negative inset represents decreased distance from center.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":110441,"byte_end":110508,"line_start":30,"line_end":30,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":110509,"byte_end":110512,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":110513,"byte_end":110527,"line_start":32,"line_end":32,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":110528,"byte_end":110531,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Positive insets added to a [`Rect`] produce a larger [`Rect`]:","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":110532,"byte_end":110598,"line_start":34,"line_end":34,"column_start":1,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":110599,"byte_end":110606,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ # use kurbo::{Insets, Rect};","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":110607,"byte_end":110639,"line_start":36,"line_end":36,"column_start":1,"column_end":33}},{"value":"/ let rect = Rect::from_origin_size((0., 0.,), (10., 10.,));","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":110640,"byte_end":110702,"line_start":37,"line_end":37,"column_start":1,"column_end":63}},{"value":"/ let insets = Insets::uniform_xy(3., 0.,);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":110703,"byte_end":110748,"line_start":38,"line_end":38,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":110749,"byte_end":110752,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ let inset_rect = rect + insets;","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":110753,"byte_end":110788,"line_start":40,"line_end":40,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(inset_rect.width(), 16.0, \"10.0 + 3.0 × 2\");","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":110789,"byte_end":110849,"line_start":41,"line_end":41,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(inset_rect.x0, -3.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":110850,"byte_end":110886,"line_start":42,"line_end":42,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":110887,"byte_end":110894,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":110895,"byte_end":110898,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Negative insets added to a [`Rect`] produce a smaller [`Rect`]:","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":110899,"byte_end":110966,"line_start":45,"line_end":45,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":110967,"byte_end":110970,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":110971,"byte_end":110978,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/ # use kurbo::{Insets, Rect};","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":110979,"byte_end":111011,"line_start":48,"line_end":48,"column_start":1,"column_end":33}},{"value":"/ let rect = Rect::from_origin_size((0., 0.,), (10., 10.,));","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":111012,"byte_end":111074,"line_start":49,"line_end":49,"column_start":1,"column_end":63}},{"value":"/ let insets = Insets::uniform_xy(-3., 0.,);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":111075,"byte_end":111121,"line_start":50,"line_end":50,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":111122,"byte_end":111125,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ let inset_rect = rect + insets;","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":111126,"byte_end":111161,"line_start":52,"line_end":52,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(inset_rect.width(), 4.0, \"10.0 - 3.0 × 2\");","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":111162,"byte_end":111221,"line_start":53,"line_end":53,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(inset_rect.x0, 3.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":111222,"byte_end":111257,"line_start":54,"line_end":54,"column_start":1,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":111258,"byte_end":111265,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":111266,"byte_end":111269,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`Insets`] operate on the absolute rectangle [`Rect::abs`], and so ignore","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":111270,"byte_end":111347,"line_start":57,"line_end":57,"column_start":1,"column_end":78}},{"value":"/ existing negative widths and heights.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":111348,"byte_end":111389,"line_start":58,"line_end":58,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":111390,"byte_end":111393,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":111394,"byte_end":111401,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"/ # use kurbo::{Insets, Rect};","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":111402,"byte_end":111434,"line_start":61,"line_end":61,"column_start":1,"column_end":33}},{"value":"/ let rect = Rect::new(7., 11., 0., 0.,);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":111435,"byte_end":111478,"line_start":62,"line_end":62,"column_start":1,"column_end":44}},{"value":"/ let insets = Insets::uniform_xy(0., 1.,);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":111479,"byte_end":111524,"line_start":63,"line_end":63,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":111525,"byte_end":111528,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(rect.width(), -7.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":111529,"byte_end":111564,"line_start":65,"line_end":65,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":111565,"byte_end":111568,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ let inset_rect = rect + insets;","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":111569,"byte_end":111604,"line_start":67,"line_end":67,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(inset_rect.width(), 7.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":111605,"byte_end":111645,"line_start":68,"line_end":68,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(inset_rect.x0, 0.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":111646,"byte_end":111681,"line_start":69,"line_end":69,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(inset_rect.height(), 13.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":111682,"byte_end":111724,"line_start":70,"line_end":70,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":111725,"byte_end":111732,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":111733,"byte_end":111736,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ The width and height of an inset operation can still be negative if the","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":111737,"byte_end":111812,"line_start":73,"line_end":73,"column_start":1,"column_end":76}},{"value":"/ [`Insets`]' dimensions are greater than the dimensions of the original [`Rect`].","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":111813,"byte_end":111897,"line_start":74,"line_end":74,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":111898,"byte_end":111901,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":111902,"byte_end":111909,"line_start":76,"line_end":76,"column_start":1,"column_end":8}},{"value":"/ # use kurbo::{Insets, Rect};","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":111910,"byte_end":111942,"line_start":77,"line_end":77,"column_start":1,"column_end":33}},{"value":"/ let rect = Rect::new(0., 0., 3., 5.);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":111943,"byte_end":111984,"line_start":78,"line_end":78,"column_start":1,"column_end":42}},{"value":"/ let insets = Insets::uniform_xy(0., 7.,);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":111985,"byte_end":112030,"line_start":79,"line_end":79,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":112031,"byte_end":112034,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ let inset_rect = rect - insets;","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":112035,"byte_end":112070,"line_start":81,"line_end":81,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(inset_rect.height(), -9., \"5 - 7 × 2\")","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":112071,"byte_end":112125,"line_start":82,"line_end":82,"column_start":1,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":112126,"byte_end":112133,"line_start":83,"line_end":83,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":112134,"byte_end":112137,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ `Rect - Rect = Insets`:","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":112138,"byte_end":112165,"line_start":85,"line_end":85,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":112166,"byte_end":112169,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":112170,"byte_end":112173,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":112174,"byte_end":112181,"line_start":88,"line_end":88,"column_start":1,"column_end":8}},{"value":"/ # use kurbo::{Insets, Rect};","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":112182,"byte_end":112214,"line_start":89,"line_end":89,"column_start":1,"column_end":33}},{"value":"/ let rect = Rect::new(0., 0., 5., 11.);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":112215,"byte_end":112257,"line_start":90,"line_end":90,"column_start":1,"column_end":43}},{"value":"/ let insets = Insets::uniform_xy(1., 7.,);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":112258,"byte_end":112303,"line_start":91,"line_end":91,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":112304,"byte_end":112307,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ let inset_rect = rect + insets;","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":112308,"byte_end":112343,"line_start":93,"line_end":93,"column_start":1,"column_end":36}},{"value":"/ let insets2 = inset_rect - rect;","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":112344,"byte_end":112380,"line_start":94,"line_end":94,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":112381,"byte_end":112384,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(insets2.x0, insets.x0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":112385,"byte_end":112423,"line_start":96,"line_end":96,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(insets2.y1, insets.y1);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":112424,"byte_end":112462,"line_start":97,"line_end":97,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(insets2.x_value(), insets.x_value());","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":112463,"byte_end":112515,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(insets2.y_value(), insets.y_value());","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":112516,"byte_end":112568,"line_start":99,"line_end":99,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":112569,"byte_end":112576,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":112577,"byte_end":112580,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ [`Rect`]: struct.Rect.html","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":112581,"byte_end":112611,"line_start":102,"line_end":102,"column_start":1,"column_end":31}},{"value":"/ [`Insets`]: struct.Insets.html","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":112612,"byte_end":112646,"line_start":103,"line_end":103,"column_start":1,"column_end":35}},{"value":"/ [`Rect::abs`]: struct.Rect.html#method.abs","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":112647,"byte_end":112693,"line_start":104,"line_end":104,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":1362},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":112895,"byte_end":112897,"line_start":109,"line_end":109,"column_start":9,"column_end":11},"name":"x0","qualname":"::insets::Insets::x0","value":"f64","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" The minimum x coordinate (left edge).\n","sig":null,"attributes":[{"value":"/ The minimum x coordinate (left edge).","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":112845,"byte_end":112886,"line_start":108,"line_end":108,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":1363},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":112974,"byte_end":112976,"line_start":111,"line_end":111,"column_start":9,"column_end":11},"name":"y0","qualname":"::insets::Insets::y0","value":"f64","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" The minimum y coordinate (top edge in y-down spaces).\n","sig":null,"attributes":[{"value":"/ The minimum y coordinate (top edge in y-down spaces).","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":112908,"byte_end":112965,"line_start":110,"line_end":110,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":1364},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":113038,"byte_end":113040,"line_start":113,"line_end":113,"column_start":9,"column_end":11},"name":"x1","qualname":"::insets::Insets::x1","value":"f64","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" The maximum x coordinate (right edge).\n","sig":null,"attributes":[{"value":"/ The maximum x coordinate (right edge).","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":112987,"byte_end":113029,"line_start":112,"line_end":112,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":1365},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":113120,"byte_end":113122,"line_start":115,"line_end":115,"column_start":9,"column_end":11},"name":"y1","qualname":"::insets::Insets::y1","value":"f64","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" The maximum y coordinate (bottom edge in y-down spaces).\n","sig":null,"attributes":[{"value":"/ The maximum y coordinate (bottom edge in y-down spaces).","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":113051,"byte_end":113111,"line_start":114,"line_end":114,"column_start":5,"column_end":65}}]},{"kind":"Const","id":{"krate":0,"index":498},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":113183,"byte_end":113187,"line_start":120,"line_end":120,"column_start":15,"column_end":19},"name":"ZERO","qualname":"::insets::Insets::ZERO","value":"Insets","parent":{"krate":0,"index":497},"children":[],"decl_id":null,"docs":" Zero'd insets.\n","sig":null,"attributes":[{"value":"/ Zero'd insets.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":113150,"byte_end":113168,"line_start":119,"line_end":119,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":113279,"byte_end":113286,"line_start":124,"line_end":124,"column_start":18,"column_end":25},"name":"uniform","qualname":"<Insets>::uniform","value":"pub const fn uniform(f64) -> Insets","parent":null,"children":[],"decl_id":null,"docs":" New uniform insets.\n","sig":null,"attributes":[{"value":"/ New uniform insets.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":113224,"byte_end":113247,"line_start":122,"line_end":122,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":113252,"byte_end":113261,"line_start":123,"line_end":123,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":113504,"byte_end":113514,"line_start":135,"line_end":135,"column_start":18,"column_end":28},"name":"uniform_xy","qualname":"<Insets>::uniform_xy","value":"pub const fn uniform_xy(f64, f64) -> Insets","parent":null,"children":[],"decl_id":null,"docs":" New insets with uniform values along each axis.\n","sig":null,"attributes":[{"value":"/ New insets with uniform values along each axis.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":113421,"byte_end":113472,"line_start":133,"line_end":133,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":113477,"byte_end":113486,"line_start":134,"line_end":134,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":113809,"byte_end":113812,"line_start":147,"line_end":147,"column_start":18,"column_end":21},"name":"new","qualname":"<Insets>::new","value":"pub const fn new(f64, f64, f64, f64) -> Insets","parent":null,"children":[],"decl_id":null,"docs":" New insets. The ordering of the arguments is \"left, top, right, bottom\",\n assuming a y-down coordinate space.\n","sig":null,"attributes":[{"value":"/ New insets. The ordering of the arguments is \"left, top, right, bottom\",","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":113657,"byte_end":113733,"line_start":144,"line_end":144,"column_start":5,"column_end":81}},{"value":"/ assuming a y-down coordinate space.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":113738,"byte_end":113777,"line_start":145,"line_end":145,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":113782,"byte_end":113791,"line_start":146,"line_end":146,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":114283,"byte_end":114290,"line_start":165,"line_end":165,"column_start":12,"column_end":19},"name":"x_value","qualname":"<Insets>::x_value","value":"pub fn x_value(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The total delta on the x-axis represented by these insets.","sig":null,"attributes":[{"value":"/ The total delta on the x-axis represented by these insets.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":113906,"byte_end":113968,"line_start":151,"line_end":151,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":113973,"byte_end":113976,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":113981,"byte_end":113995,"line_start":153,"line_end":153,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":114000,"byte_end":114003,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":114008,"byte_end":114015,"line_start":155,"line_end":155,"column_start":5,"column_end":12}},{"value":"/ use kurbo::Insets;","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":114020,"byte_end":114042,"line_start":156,"line_end":156,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":114047,"byte_end":114050,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ let insets = Insets::uniform_xy(3., 8.);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":114055,"byte_end":114099,"line_start":158,"line_end":158,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(insets.x_value(), 6.);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":114104,"byte_end":114141,"line_start":159,"line_end":159,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":114146,"byte_end":114149,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ let insets = Insets::new(5., 0., -12., 0.,);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":114154,"byte_end":114202,"line_start":161,"line_end":161,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(insets.x_value(), -7.);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":114207,"byte_end":114245,"line_start":162,"line_end":162,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":114250,"byte_end":114257,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":114262,"byte_end":114271,"line_start":164,"line_end":164,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":114722,"byte_end":114729,"line_start":183,"line_end":183,"column_start":12,"column_end":19},"name":"y_value","qualname":"<Insets>::y_value","value":"pub fn y_value(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The total delta on the y-axis represented by these insets.","sig":null,"attributes":[{"value":"/ The total delta on the y-axis represented by these insets.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":114343,"byte_end":114405,"line_start":169,"line_end":169,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":114410,"byte_end":114413,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":114418,"byte_end":114432,"line_start":171,"line_end":171,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":114437,"byte_end":114440,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":114445,"byte_end":114452,"line_start":173,"line_end":173,"column_start":5,"column_end":12}},{"value":"/ use kurbo::Insets;","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":114457,"byte_end":114479,"line_start":174,"line_end":174,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":114484,"byte_end":114487,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ let insets = Insets::uniform_xy(3., 7.);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":114492,"byte_end":114536,"line_start":176,"line_end":176,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(insets.y_value(), 14.);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":114541,"byte_end":114579,"line_start":177,"line_end":177,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":114584,"byte_end":114587,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ let insets = Insets::new(5., 10., -12., 4.,);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":114592,"byte_end":114641,"line_start":179,"line_end":179,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(insets.y_value(), 14.);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":114646,"byte_end":114684,"line_start":180,"line_end":180,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":114689,"byte_end":114696,"line_start":181,"line_end":181,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":114701,"byte_end":114710,"line_start":182,"line_end":182,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":115420,"byte_end":115424,"line_start":206,"line_end":206,"column_start":12,"column_end":16},"name":"size","qualname":"<Insets>::size","value":"pub fn size(Self) -> Size","parent":null,"children":[],"decl_id":null,"docs":" Returns the total delta represented by these insets as a [`Size`].","sig":null,"attributes":[{"value":"/ Returns the total delta represented by these insets as a [`Size`].","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":114782,"byte_end":114852,"line_start":187,"line_end":187,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":114857,"byte_end":114860,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to creating a [`Size`] from the values returned by","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":114865,"byte_end":114938,"line_start":189,"line_end":189,"column_start":5,"column_end":78}},{"value":"/ [`x_value`] and [`y_value`].","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":114943,"byte_end":114975,"line_start":190,"line_end":190,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":114980,"byte_end":114983,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ This function may return a a size with negative values.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":114988,"byte_end":115047,"line_start":192,"line_end":192,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":115052,"byte_end":115055,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":115060,"byte_end":115074,"line_start":194,"line_end":194,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":115079,"byte_end":115082,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":115087,"byte_end":115094,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/ use kurbo::{Insets, Size};","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":115099,"byte_end":115129,"line_start":197,"line_end":197,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":115134,"byte_end":115137,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ let insets = Insets::new(11.1, -43.3, 3.333, -0.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":115142,"byte_end":115197,"line_start":199,"line_end":199,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(insets.size(), Size::new(insets.x_value(), insets.y_value()));","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":115202,"byte_end":115279,"line_start":200,"line_end":200,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":115284,"byte_end":115291,"line_start":201,"line_end":201,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":115296,"byte_end":115299,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ [`Size`]: struct.Size.html","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":115304,"byte_end":115334,"line_start":203,"line_end":203,"column_start":5,"column_end":35}},{"value":"/ [`x_value`]: #method.x_value","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":115339,"byte_end":115371,"line_start":204,"line_end":204,"column_start":5,"column_end":37}},{"value":"/ [`y_value`]: #method.y_value","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":115376,"byte_end":115408,"line_start":205,"line_end":205,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":115563,"byte_end":115578,"line_start":211,"line_end":211,"column_start":12,"column_end":27},"name":"are_nonnegative","qualname":"<Insets>::are_nonnegative","value":"pub fn are_nonnegative(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` iff all values are nonnegative.\n","sig":null,"attributes":[{"value":"/ Return `true` iff all values are nonnegative.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":115502,"byte_end":115551,"line_start":210,"line_end":210,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":116199,"byte_end":116210,"line_start":231,"line_end":231,"column_start":12,"column_end":23},"name":"nonnegative","qualname":"<Insets>::nonnegative","value":"pub fn nonnegative(Self) -> Insets","parent":null,"children":[],"decl_id":null,"docs":" Return new `Insets` with all negative values replaced with `0.0`.","sig":null,"attributes":[{"value":"/ Return new `Insets` with all negative values replaced with `0.0`.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":115709,"byte_end":115778,"line_start":216,"line_end":216,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":115783,"byte_end":115786,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ This is provided as a convenience for applications where negative insets","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":115791,"byte_end":115867,"line_start":218,"line_end":218,"column_start":5,"column_end":81}},{"value":"/ are not meaningful.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":115872,"byte_end":115895,"line_start":219,"line_end":219,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":115900,"byte_end":115903,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":115908,"byte_end":115922,"line_start":221,"line_end":221,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":115927,"byte_end":115930,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":115935,"byte_end":115942,"line_start":223,"line_end":223,"column_start":5,"column_end":12}},{"value":"/ use kurbo::Insets;","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":115947,"byte_end":115969,"line_start":224,"line_end":224,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":115974,"byte_end":115977,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ let insets = Insets::new(-10., 3., -0.2, 4.);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":115982,"byte_end":116031,"line_start":226,"line_end":226,"column_start":5,"column_end":54}},{"value":"/ let nonnegative = insets.nonnegative();","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":116036,"byte_end":116079,"line_start":227,"line_end":227,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(nonnegative.x_value(), 0.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":116084,"byte_end":116127,"line_start":228,"line_end":228,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(nonnegative.y_value(), 7.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":116132,"byte_end":116175,"line_start":229,"line_end":229,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":116180,"byte_end":116187,"line_start":230,"line_end":230,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1377},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/line.rs","byte_start":118186,"byte_end":118190,"line_start":16,"line_end":16,"column_start":12,"column_end":16},"name":"Line","qualname":"::line::Line","value":"Line { p0, p1 }","parent":null,"children":[{"krate":0,"index":1378},{"krate":0,"index":1379}],"decl_id":null,"docs":" A single line.\n","sig":null,"attributes":[{"value":"/ A single line.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/line.rs","byte_start":118038,"byte_end":118056,"line_start":13,"line_end":13,"column_start":1,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":1378},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/line.rs","byte_start":118233,"byte_end":118235,"line_start":18,"line_end":18,"column_start":9,"column_end":11},"name":"p0","qualname":"::line::Line::p0","value":"point::Point","parent":{"krate":0,"index":1377},"children":[],"decl_id":null,"docs":" The line's start point.\n","sig":null,"attributes":[{"value":"/ The line's start point.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/line.rs","byte_start":118197,"byte_end":118224,"line_start":17,"line_end":17,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":1379},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/line.rs","byte_start":118282,"byte_end":118284,"line_start":20,"line_end":20,"column_start":9,"column_end":11},"name":"p1","qualname":"::line::Line::p1","value":"point::Point","parent":{"krate":0,"index":1377},"children":[],"decl_id":null,"docs":" The line's end point.\n","sig":null,"attributes":[{"value":"/ The line's end point.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/line.rs","byte_start":118248,"byte_end":118273,"line_start":19,"line_end":19,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":552},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/line.rs","byte_start":118360,"byte_end":118363,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"name":"new","qualname":"<Line>::new","value":"pub fn new<impl Into<Point>: Into<Point>,\n           impl Into<Point>: Into<Point>>(impl Into<Point>, impl Into<Point>)\n-> Line","parent":null,"children":[],"decl_id":null,"docs":" Create a new line.\n","sig":null,"attributes":[{"value":"/ Create a new line.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/line.rs","byte_start":118312,"byte_end":118334,"line_start":24,"line_end":24,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/line.rs","byte_start":118339,"byte_end":118348,"line_start":25,"line_end":25,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":555},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/line.rs","byte_start":118561,"byte_end":118567,"line_start":35,"line_end":35,"column_start":12,"column_end":18},"name":"length","qualname":"<Line>::length","value":"pub fn length(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The length of the line.\n","sig":null,"attributes":[{"value":"/ The length of the line.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/line.rs","byte_start":118508,"byte_end":118535,"line_start":33,"line_end":33,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/line.rs","byte_start":118540,"byte_end":118549,"line_start":34,"line_end":34,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1389},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/line.rs","byte_start":120441,"byte_end":120451,"line_start":122,"line_end":122,"column_start":12,"column_end":22},"name":"ConstPoint","qualname":"::line::ConstPoint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A trivial \"curve\" that is just a constant.\n","sig":null,"attributes":[{"value":"/ A trivial \"curve\" that is just a constant.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/line.rs","byte_start":120276,"byte_end":120322,"line_start":119,"line_end":119,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":592},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/line.rs","byte_start":121555,"byte_end":121567,"line_start":184,"line_end":184,"column_start":12,"column_end":24},"name":"LinePathIter","qualname":"::line::LinePathIter","value":"LinePathIter {  }","parent":null,"children":[{"krate":0,"index":593},{"krate":0,"index":594}],"decl_id":null,"docs":" An iterator yielding the path for a single line.\n","sig":null,"attributes":[{"value":"/ An iterator yielding the path for a single line.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/line.rs","byte_start":121476,"byte_end":121528,"line_start":182,"line_end":182,"column_start":1,"column_end":53}}]},{"kind":"Const","id":{"krate":0,"index":612},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":123455,"byte_end":123471,"line_start":13,"line_end":13,"column_start":11,"column_end":27},"name":"DEFAULT_ACCURACY","qualname":"::param_curve::DEFAULT_ACCURACY","value":"f64","parent":null,"children":[],"decl_id":null,"docs":" A default value for methods that take an 'accuracy' argument.","sig":null,"attributes":[{"value":"/ A default value for methods that take an 'accuracy' argument.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":123283,"byte_end":123348,"line_start":9,"line_end":9,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":123349,"byte_end":123352,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This value is intended to be suitable for general-purpose use, such as","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":123353,"byte_end":123427,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ 2d graphics.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":123428,"byte_end":123444,"line_start":12,"line_end":12,"column_start":1,"column_end":17}}]},{"kind":"Trait","id":{"krate":0,"index":613},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":123667,"byte_end":123677,"line_start":19,"line_end":19,"column_start":11,"column_end":21},"name":"ParamCurve","qualname":"::param_curve::ParamCurve","value":"ParamCurve: Sized","parent":null,"children":[{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618}],"decl_id":null,"docs":" A curve parametrized by a scalar.","sig":null,"attributes":[{"value":"/ A curve parametrized by a scalar.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":123486,"byte_end":123523,"line_start":15,"line_end":15,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":123524,"byte_end":123527,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ If the result is interpreted as a point, this represents a curve.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":123528,"byte_end":123597,"line_start":17,"line_end":17,"column_start":1,"column_end":70}},{"value":"/ But the result can be interpreted as a vector as well.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":123598,"byte_end":123656,"line_start":18,"line_end":18,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":123793,"byte_end":123797,"line_start":23,"line_end":23,"column_start":8,"column_end":12},"name":"eval","qualname":"::param_curve::ParamCurve::eval","value":"pub fn eval(&Self, f64) -> Point","parent":{"krate":0,"index":613},"children":[],"decl_id":null,"docs":" Evaluate the curve at parameter `t`.","sig":null,"attributes":[{"value":"/ Evaluate the curve at parameter `t`.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":123691,"byte_end":123731,"line_start":20,"line_end":20,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":123736,"byte_end":123739,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ Generally `t` is in the range [0..1].","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":123744,"byte_end":123785,"line_start":22,"line_end":22,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":123900,"byte_end":123910,"line_start":26,"line_end":26,"column_start":8,"column_end":18},"name":"subsegment","qualname":"::param_curve::ParamCurve::subsegment","value":"pub fn subsegment(&Self, Range<f64>) -> Self","parent":{"krate":0,"index":613},"children":[],"decl_id":null,"docs":" Get a subsegment of the curve for the given parameter range.\n","sig":null,"attributes":[{"value":"/ Get a subsegment of the curve for the given parameter range.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":123828,"byte_end":123892,"line_start":25,"line_end":25,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":616},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":124009,"byte_end":124018,"line_start":30,"line_end":30,"column_start":8,"column_end":17},"name":"subdivide","qualname":"::param_curve::ParamCurve::subdivide","value":"pub fn subdivide(&Self) -> (Self, Self)","parent":{"krate":0,"index":613},"children":[],"decl_id":null,"docs":" Subdivide into (roughly) halves.\n","sig":null,"attributes":[{"value":"/ Subdivide into (roughly) halves.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":123951,"byte_end":123987,"line_start":28,"line_end":28,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":123992,"byte_end":124001,"line_start":29,"line_end":29,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":617},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":124146,"byte_end":124151,"line_start":35,"line_end":35,"column_start":8,"column_end":13},"name":"start","qualname":"::param_curve::ParamCurve::start","value":"pub fn start(&Self) -> Point","parent":{"krate":0,"index":613},"children":[],"decl_id":null,"docs":" The start point.\n","sig":null,"attributes":[{"value":"/ The start point.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":124118,"byte_end":124138,"line_start":34,"line_end":34,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":124230,"byte_end":124233,"line_start":40,"line_end":40,"column_start":8,"column_end":11},"name":"end","qualname":"::param_curve::ParamCurve::end","value":"pub fn end(&Self) -> Point","parent":{"krate":0,"index":613},"children":[],"decl_id":null,"docs":" The end point.\n","sig":null,"attributes":[{"value":"/ The end point.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":124204,"byte_end":124222,"line_start":39,"line_end":39,"column_start":5,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":619},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":124401,"byte_end":124416,"line_start":48,"line_end":48,"column_start":11,"column_end":26},"name":"ParamCurveDeriv","qualname":"::param_curve::ParamCurveDeriv","value":"ParamCurveDeriv","parent":null,"children":[{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":622}],"decl_id":null,"docs":" A differentiable parametrized curve.\n","sig":null,"attributes":[{"value":"/ A differentiable parametrized curve.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":124350,"byte_end":124390,"line_start":47,"line_end":47,"column_start":1,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":620},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":124504,"byte_end":124515,"line_start":50,"line_end":50,"column_start":10,"column_end":21},"name":"DerivResult","qualname":"::param_curve::ParamCurveDeriv::DerivResult","value":"type DerivResult: ParamCurve;","parent":{"krate":0,"index":619},"children":[],"decl_id":null,"docs":" The parametric curve obtained by taking the derivative of this one.\n","sig":null,"attributes":[{"value":"/ The parametric curve obtained by taking the derivative of this one.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":124423,"byte_end":124494,"line_start":49,"line_end":49,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":621},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":124837,"byte_end":124842,"line_start":58,"line_end":58,"column_start":8,"column_end":13},"name":"deriv","qualname":"::param_curve::ParamCurveDeriv::deriv","value":"pub fn deriv(&Self) -> Self::DerivResult","parent":{"krate":0,"index":619},"children":[],"decl_id":null,"docs":" The derivative of the curve.","sig":null,"attributes":[{"value":"/ The derivative of the curve.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":124534,"byte_end":124566,"line_start":52,"line_end":52,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":124571,"byte_end":124574,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Note that the type of the return value is somewhat inaccurate, as","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":124579,"byte_end":124648,"line_start":54,"line_end":54,"column_start":5,"column_end":74}},{"value":"/ the derivative of a curve (mapping of param to point) is a mapping","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":124653,"byte_end":124723,"line_start":55,"line_end":55,"column_start":5,"column_end":75}},{"value":"/ of param to vector. We choose to accept this rather than have a","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":124728,"byte_end":124795,"line_start":56,"line_end":56,"column_start":5,"column_end":72}},{"value":"/ more complex type scheme.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":124800,"byte_end":124829,"line_start":57,"line_end":57,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":622},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":125051,"byte_end":125063,"line_start":65,"line_end":65,"column_start":8,"column_end":20},"name":"gauss_arclen","qualname":"::param_curve::ParamCurveDeriv::gauss_arclen","value":"pub fn gauss_arclen(&Self, &[(f64, f64)]) -> f64","parent":{"krate":0,"index":619},"children":[],"decl_id":null,"docs":" Estimate arclength using Gaussian quadrature.","sig":null,"attributes":[{"value":"/ Estimate arclength using Gaussian quadrature.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":124877,"byte_end":124926,"line_start":60,"line_end":60,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":124931,"byte_end":124934,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ The coefficients are assumed to cover the range (-1..1), which is","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":124939,"byte_end":125008,"line_start":62,"line_end":62,"column_start":5,"column_end":74}},{"value":"/ traditional.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":125013,"byte_end":125029,"line_start":63,"line_end":63,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":125034,"byte_end":125043,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":624},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":125372,"byte_end":125388,"line_start":76,"line_end":76,"column_start":11,"column_end":27},"name":"ParamCurveArclen","qualname":"::param_curve::ParamCurveArclen","value":"ParamCurveArclen: ParamCurve","parent":null,"children":[{"krate":0,"index":625},{"krate":0,"index":626}],"decl_id":null,"docs":" A parametrized curve that can have its arc length measured.\n","sig":null,"attributes":[{"value":"/ A parametrized curve that can have its arc length measured.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":125298,"byte_end":125361,"line_start":75,"line_end":75,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":625},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":125656,"byte_end":125662,"line_start":82,"line_end":82,"column_start":8,"column_end":14},"name":"arclen","qualname":"::param_curve::ParamCurveArclen::arclen","value":"pub fn arclen(&Self, f64) -> f64","parent":{"krate":0,"index":624},"children":[],"decl_id":null,"docs":" The arc length of the curve.","sig":null,"attributes":[{"value":"/ The arc length of the curve.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":125407,"byte_end":125439,"line_start":77,"line_end":77,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":125444,"byte_end":125447,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ The result is accurate to the given accuracy (subject to","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":125452,"byte_end":125512,"line_start":79,"line_end":79,"column_start":5,"column_end":65}},{"value":"/ roundoff errors for ridiculously low values). Compute time","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":125517,"byte_end":125579,"line_start":80,"line_end":80,"column_start":5,"column_end":67}},{"value":"/ may vary with accuracy, if the curve needs to be subdivided.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":125584,"byte_end":125648,"line_start":81,"line_end":81,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":126000,"byte_end":126010,"line_start":89,"line_end":89,"column_start":8,"column_end":18},"name":"inv_arclen","qualname":"::param_curve::ParamCurveArclen::inv_arclen","value":"pub fn inv_arclen(&Self, f64, f64) -> f64","parent":{"krate":0,"index":624},"children":[],"decl_id":null,"docs":" Solve for the parameter that has the given arclength from the start.","sig":null,"attributes":[{"value":"/ Solve for the parameter that has the given arclength from the start.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":125698,"byte_end":125770,"line_start":84,"line_end":84,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":125775,"byte_end":125778,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ This implementation is bisection, which is very robust but not","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":125783,"byte_end":125849,"line_start":86,"line_end":86,"column_start":5,"column_end":71}},{"value":"/ necessarily the fastest. It does measure increasingly short","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":125854,"byte_end":125917,"line_start":87,"line_end":87,"column_start":5,"column_end":68}},{"value":"/ segments, though, which should be good for subdivision algorithms.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":125922,"byte_end":125992,"line_start":88,"line_end":88,"column_start":5,"column_end":75}}]},{"kind":"Trait","id":{"krate":0,"index":627},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":127213,"byte_end":127227,"line_start":124,"line_end":124,"column_start":11,"column_end":25},"name":"ParamCurveArea","qualname":"::param_curve::ParamCurveArea","value":"ParamCurveArea","parent":null,"children":[{"krate":0,"index":628}],"decl_id":null,"docs":" A parametrized curve that can have its signed area measured.\n","sig":null,"attributes":[{"value":"/ A parametrized curve that can have its signed area measured.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":127138,"byte_end":127202,"line_start":123,"line_end":123,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":127897,"byte_end":127908,"line_start":137,"line_end":137,"column_start":8,"column_end":19},"name":"signed_area","qualname":"::param_curve::ParamCurveArea::signed_area","value":"pub fn signed_area(&Self) -> f64","parent":{"krate":0,"index":627},"children":[],"decl_id":null,"docs":" Compute the signed area under the curve.","sig":null,"attributes":[{"value":"/ Compute the signed area under the curve.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":127234,"byte_end":127278,"line_start":125,"line_end":125,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":127283,"byte_end":127286,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ For a closed path, the signed area of the path is the sum of signed","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":127291,"byte_end":127362,"line_start":127,"line_end":127,"column_start":5,"column_end":76}},{"value":"/ areas of the segments. This is a variant of the \"shoelace formula.\"","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":127367,"byte_end":127438,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ See:","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":127443,"byte_end":127451,"line_start":129,"line_end":129,"column_start":5,"column_end":13}},{"value":"/ <https://github.com/Pomax/bezierinfo/issues/44> and","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":127456,"byte_end":127511,"line_start":130,"line_end":130,"column_start":5,"column_end":60}},{"value":"/ <http://ich.deanmcnamee.com/graphics/2016/03/30/CurveArea.html>","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":127516,"byte_end":127583,"line_start":131,"line_end":131,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":127588,"byte_end":127591,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ This can be computed exactly for Béziers thanks to Green's theorem,","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":127596,"byte_end":127668,"line_start":133,"line_end":133,"column_start":5,"column_end":76}},{"value":"/ and also for simple curves such as circular arcs. For more exotic","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":127673,"byte_end":127742,"line_start":134,"line_end":134,"column_start":5,"column_end":74}},{"value":"/ curves, it's probably best to subdivide to cubics. We leave that","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":127747,"byte_end":127815,"line_start":135,"line_end":135,"column_start":5,"column_end":73}},{"value":"/ to the caller, which is why we don't give an accuracy param here.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":127820,"byte_end":127889,"line_start":136,"line_end":136,"column_start":5,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":629},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":127994,"byte_end":128011,"line_start":141,"line_end":141,"column_start":11,"column_end":28},"name":"ParamCurveNearest","qualname":"::param_curve::ParamCurveNearest","value":"ParamCurveNearest","parent":null,"children":[{"krate":0,"index":630}],"decl_id":null,"docs":" A parametrized curve that reports the nearest point.\n","sig":null,"attributes":[{"value":"/ A parametrized curve that reports the nearest point.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":127927,"byte_end":127983,"line_start":140,"line_end":140,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":128152,"byte_end":128159,"line_start":145,"line_end":145,"column_start":8,"column_end":15},"name":"nearest","qualname":"::param_curve::ParamCurveNearest::nearest","value":"pub fn nearest(&Self, Point, f64) -> (f64, f64)","parent":{"krate":0,"index":629},"children":[],"decl_id":null,"docs":" Find the point on the curve nearest the given point.","sig":null,"attributes":[{"value":"/ Find the point on the curve nearest the given point.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":128018,"byte_end":128074,"line_start":142,"line_end":142,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":128079,"byte_end":128082,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ Returns the parameter and the square of the distance.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":128087,"byte_end":128144,"line_start":144,"line_end":144,"column_start":5,"column_end":62}}]},{"kind":"Trait","id":{"krate":0,"index":631},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":128273,"byte_end":128292,"line_start":149,"line_end":149,"column_start":11,"column_end":30},"name":"ParamCurveCurvature","qualname":"::param_curve::ParamCurveCurvature","value":"ParamCurveCurvature: ParamCurveDeriv","parent":null,"children":[{"krate":0,"index":632}],"decl_id":null,"docs":" A parametrized curve that reports its curvature.\n","sig":null,"attributes":[{"value":"/ A parametrized curve that reports its curvature.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":128210,"byte_end":128262,"line_start":148,"line_end":148,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":128434,"byte_end":128443,"line_start":155,"line_end":155,"column_start":8,"column_end":17},"name":"curvature","qualname":"::param_curve::ParamCurveCurvature::curvature","value":"pub fn curvature(&Self, f64) -> f64","parent":{"krate":0,"index":631},"children":[],"decl_id":null,"docs":" Compute the signed curvature at parameter `t`.\n","sig":null,"attributes":[{"value":"/ Compute the signed curvature at parameter `t`.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":128362,"byte_end":128412,"line_start":153,"line_end":153,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":128417,"byte_end":128426,"line_start":154,"line_end":154,"column_start":5,"column_end":14}}]},{"kind":"Const","id":{"krate":0,"index":633},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":129059,"byte_end":129070,"line_start":170,"line_end":170,"column_start":11,"column_end":22},"name":"MAX_EXTREMA","qualname":"::param_curve::MAX_EXTREMA","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The maximum number of extrema that can be reported in the `ParamCurveExtrema` trait.","sig":null,"attributes":[{"value":"/ The maximum number of extrema that can be reported in the `ParamCurveExtrema` trait.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":128827,"byte_end":128915,"line_start":166,"line_end":166,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":128916,"byte_end":128919,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ This is 4 to support cubic Béziers. If other curves are used, they should be","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":128920,"byte_end":129001,"line_start":168,"line_end":168,"column_start":1,"column_end":81}},{"value":"/ subdivided to limit the number of extrema.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":129002,"byte_end":129048,"line_start":169,"line_end":169,"column_start":1,"column_end":47}}]},{"kind":"Trait","id":{"krate":0,"index":634},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":129145,"byte_end":129162,"line_start":173,"line_end":173,"column_start":11,"column_end":28},"name":"ParamCurveExtrema","qualname":"::param_curve::ParamCurveExtrema","value":"ParamCurveExtrema: ParamCurve","parent":null,"children":[{"krate":0,"index":635},{"krate":0,"index":637},{"krate":0,"index":639}],"decl_id":null,"docs":" A parametrized curve that reports its extrema.\n","sig":null,"attributes":[{"value":"/ A parametrized curve that reports its extrema.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":129084,"byte_end":129134,"line_start":172,"line_end":172,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":635},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":129467,"byte_end":129474,"line_start":181,"line_end":181,"column_start":8,"column_end":15},"name":"extrema","qualname":"::param_curve::ParamCurveExtrema::extrema","value":"pub fn extrema(&Self) -> ArrayVec<[f64; ]>","parent":{"krate":0,"index":634},"children":[],"decl_id":null,"docs":" Compute the extrema of the curve.","sig":null,"attributes":[{"value":"/ Compute the extrema of the curve.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":129181,"byte_end":129218,"line_start":174,"line_end":174,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":129223,"byte_end":129226,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ Only extrema within the interior of the curve count.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":129231,"byte_end":129287,"line_start":176,"line_end":176,"column_start":5,"column_end":61}},{"value":"/ At most four extrema can be reported, which is sufficient for","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":129292,"byte_end":129357,"line_start":177,"line_end":177,"column_start":5,"column_end":70}},{"value":"/ cubic Béziers.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":129362,"byte_end":129381,"line_start":178,"line_end":178,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":129386,"byte_end":129389,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ The extrema should be reported in increasing parameter order.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":129394,"byte_end":129459,"line_start":180,"line_end":180,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":637},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":129601,"byte_end":129615,"line_start":184,"line_end":184,"column_start":8,"column_end":22},"name":"extrema_ranges","qualname":"::param_curve::ParamCurveExtrema::extrema_ranges","value":"pub fn extrema_ranges(&Self) -> ArrayVec<[Range<f64>; ]>","parent":{"krate":0,"index":634},"children":[],"decl_id":null,"docs":" Return parameter ranges, each of which is monotonic within the range.\n","sig":null,"attributes":[{"value":"/ Return parameter ranges, each of which is monotonic within the range.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":129520,"byte_end":129593,"line_start":183,"line_end":183,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":129967,"byte_end":129979,"line_start":196,"line_end":196,"column_start":8,"column_end":20},"name":"bounding_box","qualname":"::param_curve::ParamCurveExtrema::bounding_box","value":"pub fn bounding_box(&Self) -> Rect","parent":{"krate":0,"index":634},"children":[],"decl_id":null,"docs":" The smallest rectangle that encloses the curve in the range (0..1).\n","sig":null,"attributes":[{"value":"/ The smallest rectangle that encloses the curve in the range (0..1).","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":129888,"byte_end":129959,"line_start":195,"line_end":195,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":1397},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":130452,"byte_end":130457,"line_start":12,"line_end":12,"column_start":12,"column_end":17},"name":"Point","qualname":"::point::Point","value":"Point { x, y }","parent":null,"children":[{"krate":0,"index":1398},{"krate":0,"index":1399}],"decl_id":null,"docs":" A 2D point.\n","sig":null,"attributes":[{"value":"/ A 2D point.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":130305,"byte_end":130320,"line_start":9,"line_end":9,"column_start":1,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":1398},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":130494,"byte_end":130495,"line_start":14,"line_end":14,"column_start":9,"column_end":10},"name":"x","qualname":"::point::Point::x","value":"f64","parent":{"krate":0,"index":1397},"children":[],"decl_id":null,"docs":" The x coordinate.\n","sig":null,"attributes":[{"value":"/ The x coordinate.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":130464,"byte_end":130485,"line_start":13,"line_end":13,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":1399},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":130536,"byte_end":130537,"line_start":16,"line_end":16,"column_start":9,"column_end":10},"name":"y","qualname":"::point::Point::y","value":"f64","parent":{"krate":0,"index":1397},"children":[],"decl_id":null,"docs":" The y coordinate.\n","sig":null,"attributes":[{"value":"/ The y coordinate.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":130506,"byte_end":130527,"line_start":15,"line_end":15,"column_start":5,"column_end":26}}]},{"kind":"Const","id":{"krate":0,"index":650},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":130600,"byte_end":130604,"line_start":21,"line_end":21,"column_start":15,"column_end":19},"name":"ZERO","qualname":"::point::Point::ZERO","value":"Point","parent":{"krate":0,"index":649},"children":[],"decl_id":null,"docs":" The point (0, 0).\n","sig":null,"attributes":[{"value":"/ The point (0, 0).","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":130564,"byte_end":130585,"line_start":20,"line_end":20,"column_start":5,"column_end":26}}]},{"kind":"Const","id":{"krate":0,"index":651},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":130690,"byte_end":130696,"line_start":24,"line_end":24,"column_start":15,"column_end":21},"name":"ORIGIN","qualname":"::point::Point::ORIGIN","value":"Point","parent":{"krate":0,"index":649},"children":[],"decl_id":null,"docs":" The point at the origin; (0, 0).\n","sig":null,"attributes":[{"value":"/ The point at the origin; (0, 0).","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":130639,"byte_end":130675,"line_start":23,"line_end":23,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":130830,"byte_end":130833,"line_start":28,"line_end":28,"column_start":18,"column_end":21},"name":"new","qualname":"<Point>::new","value":"pub const fn new(f64, f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Point` with the provided `x` and `y` coordinates.\n","sig":null,"attributes":[{"value":"/ Create a new `Point` with the provided `x` and `y` coordinates.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":130731,"byte_end":130798,"line_start":26,"line_end":26,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":130803,"byte_end":130812,"line_start":27,"line_end":27,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":653},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":130963,"byte_end":130970,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"name":"to_vec2","qualname":"<Point>::to_vec2","value":"pub const fn to_vec2(Self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Convert this point into a `Vec2`.\n","sig":null,"attributes":[{"value":"/ Convert this point into a `Vec2`.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":130894,"byte_end":130931,"line_start":32,"line_end":32,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":130936,"byte_end":130945,"line_start":33,"line_end":33,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":654},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":131102,"byte_end":131106,"line_start":40,"line_end":40,"column_start":12,"column_end":16},"name":"lerp","qualname":"<Point>::lerp","value":"pub fn lerp(Self, Point, f64) -> Point","parent":null,"children":[],"decl_id":null,"docs":" Linearly interpolate between two points.\n","sig":null,"attributes":[{"value":"/ Linearly interpolate between two points.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":131032,"byte_end":131076,"line_start":38,"line_end":38,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":131081,"byte_end":131090,"line_start":39,"line_end":39,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":655},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":131283,"byte_end":131291,"line_start":46,"line_end":46,"column_start":12,"column_end":20},"name":"midpoint","qualname":"<Point>::midpoint","value":"pub fn midpoint(Self, Point) -> Point","parent":null,"children":[],"decl_id":null,"docs":" Determine the midpoint of two points.\n","sig":null,"attributes":[{"value":"/ Determine the midpoint of two points.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":131216,"byte_end":131257,"line_start":44,"line_end":44,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":131262,"byte_end":131271,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":656},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":131454,"byte_end":131462,"line_start":52,"line_end":52,"column_start":12,"column_end":20},"name":"distance","qualname":"<Point>::distance","value":"pub fn distance(Self, Point) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Euclidean distance.\n","sig":null,"attributes":[{"value":"/ Euclidean distance.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":131405,"byte_end":131428,"line_start":50,"line_end":50,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":131433,"byte_end":131442,"line_start":51,"line_end":51,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":657},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":131942,"byte_end":131947,"line_start":71,"line_end":71,"column_start":12,"column_end":17},"name":"round","qualname":"<Point>::round","value":"pub fn round(Self) -> Point","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Point`,\n with `x` and `y` rounded to the nearest integer.","sig":null,"attributes":[{"value":"/ Returns a new `Point`,","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":131534,"byte_end":131560,"line_start":56,"line_end":56,"column_start":5,"column_end":31}},{"value":"/ with `x` and `y` rounded to the nearest integer.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":131565,"byte_end":131617,"line_start":57,"line_end":57,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":131622,"byte_end":131625,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":131630,"byte_end":131644,"line_start":59,"line_end":59,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":131649,"byte_end":131652,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":131657,"byte_end":131664,"line_start":61,"line_end":61,"column_start":5,"column_end":12}},{"value":"/ use kurbo::Point;","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":131669,"byte_end":131690,"line_start":62,"line_end":62,"column_start":5,"column_end":26}},{"value":"/ let a = Point::new(3.3, 3.6).round();","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":131695,"byte_end":131736,"line_start":63,"line_end":63,"column_start":5,"column_end":46}},{"value":"/ let b = Point::new(3.0, -3.1).round();","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":131741,"byte_end":131783,"line_start":64,"line_end":64,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(a.x, 3.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":131788,"byte_end":131813,"line_start":65,"line_end":65,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(a.y, 4.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":131818,"byte_end":131843,"line_start":66,"line_end":66,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(b.x, 3.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":131848,"byte_end":131873,"line_start":67,"line_end":67,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(b.y, -3.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":131878,"byte_end":131904,"line_start":68,"line_end":68,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":131909,"byte_end":131916,"line_start":69,"line_end":69,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":131921,"byte_end":131930,"line_start":70,"line_end":70,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":658},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":132480,"byte_end":132484,"line_start":91,"line_end":91,"column_start":12,"column_end":16},"name":"ceil","qualname":"<Point>::ceil","value":"pub fn ceil(Self) -> Point","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Point`,\n with `x` and `y` rounded up to the nearest integer,\n unless they are already an integer.","sig":null,"attributes":[{"value":"/ Returns a new `Point`,","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":132027,"byte_end":132053,"line_start":75,"line_end":75,"column_start":5,"column_end":31}},{"value":"/ with `x` and `y` rounded up to the nearest integer,","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":132058,"byte_end":132113,"line_start":76,"line_end":76,"column_start":5,"column_end":60}},{"value":"/ unless they are already an integer.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":132118,"byte_end":132157,"line_start":77,"line_end":77,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":132162,"byte_end":132165,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":132170,"byte_end":132184,"line_start":79,"line_end":79,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":132189,"byte_end":132192,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":132197,"byte_end":132204,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ use kurbo::Point;","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":132209,"byte_end":132230,"line_start":82,"line_end":82,"column_start":5,"column_end":26}},{"value":"/ let a = Point::new(3.3, 3.6).ceil();","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":132235,"byte_end":132275,"line_start":83,"line_end":83,"column_start":5,"column_end":45}},{"value":"/ let b = Point::new(3.0, -3.1).ceil();","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":132280,"byte_end":132321,"line_start":84,"line_end":84,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(a.x, 4.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":132326,"byte_end":132351,"line_start":85,"line_end":85,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(a.y, 4.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":132356,"byte_end":132381,"line_start":86,"line_end":86,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(b.x, 3.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":132386,"byte_end":132411,"line_start":87,"line_end":87,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(b.y, -3.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":132416,"byte_end":132442,"line_start":88,"line_end":88,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":132447,"byte_end":132454,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":132459,"byte_end":132468,"line_start":90,"line_end":90,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":659},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":133019,"byte_end":133024,"line_start":111,"line_end":111,"column_start":12,"column_end":17},"name":"floor","qualname":"<Point>::floor","value":"pub fn floor(Self) -> Point","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Point`,\n with `x` and `y` rounded down to the nearest integer,\n unless they are already an integer.","sig":null,"attributes":[{"value":"/ Returns a new `Point`,","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":132562,"byte_end":132588,"line_start":95,"line_end":95,"column_start":5,"column_end":31}},{"value":"/ with `x` and `y` rounded down to the nearest integer,","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":132593,"byte_end":132650,"line_start":96,"line_end":96,"column_start":5,"column_end":62}},{"value":"/ unless they are already an integer.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":132655,"byte_end":132694,"line_start":97,"line_end":97,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":132699,"byte_end":132702,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":132707,"byte_end":132721,"line_start":99,"line_end":99,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":132726,"byte_end":132729,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":132734,"byte_end":132741,"line_start":101,"line_end":101,"column_start":5,"column_end":12}},{"value":"/ use kurbo::Point;","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":132746,"byte_end":132767,"line_start":102,"line_end":102,"column_start":5,"column_end":26}},{"value":"/ let a = Point::new(3.3, 3.6).floor();","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":132772,"byte_end":132813,"line_start":103,"line_end":103,"column_start":5,"column_end":46}},{"value":"/ let b = Point::new(3.0, -3.1).floor();","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":132818,"byte_end":132860,"line_start":104,"line_end":104,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(a.x, 3.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":132865,"byte_end":132890,"line_start":105,"line_end":105,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(a.y, 3.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":132895,"byte_end":132920,"line_start":106,"line_end":106,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(b.x, 3.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":132925,"byte_end":132950,"line_start":107,"line_end":107,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(b.y, -4.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":132955,"byte_end":132981,"line_start":108,"line_end":108,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":132986,"byte_end":132993,"line_start":109,"line_end":109,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":132998,"byte_end":133007,"line_start":110,"line_end":110,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":660},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":133573,"byte_end":133579,"line_start":131,"line_end":131,"column_start":12,"column_end":18},"name":"expand","qualname":"<Point>::expand","value":"pub fn expand(Self) -> Point","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Point`,\n with `x` and `y` rounded away from zero to the nearest integer,\n unless they are already an integer.","sig":null,"attributes":[{"value":"/ Returns a new `Point`,","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":133104,"byte_end":133130,"line_start":115,"line_end":115,"column_start":5,"column_end":31}},{"value":"/ with `x` and `y` rounded away from zero to the nearest integer,","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":133135,"byte_end":133202,"line_start":116,"line_end":116,"column_start":5,"column_end":72}},{"value":"/ unless they are already an integer.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":133207,"byte_end":133246,"line_start":117,"line_end":117,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":133251,"byte_end":133254,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":133259,"byte_end":133273,"line_start":119,"line_end":119,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":133278,"byte_end":133281,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":133286,"byte_end":133293,"line_start":121,"line_end":121,"column_start":5,"column_end":12}},{"value":"/ use kurbo::Point;","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":133298,"byte_end":133319,"line_start":122,"line_end":122,"column_start":5,"column_end":26}},{"value":"/ let a = Point::new(3.3, 3.6).expand();","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":133324,"byte_end":133366,"line_start":123,"line_end":123,"column_start":5,"column_end":47}},{"value":"/ let b = Point::new(3.0, -3.1).expand();","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":133371,"byte_end":133414,"line_start":124,"line_end":124,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(a.x, 4.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":133419,"byte_end":133444,"line_start":125,"line_end":125,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(a.y, 4.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":133449,"byte_end":133474,"line_start":126,"line_end":126,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(b.x, 3.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":133479,"byte_end":133504,"line_start":127,"line_end":127,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(b.y, -4.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":133509,"byte_end":133535,"line_start":128,"line_end":128,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":133540,"byte_end":133547,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":133552,"byte_end":133561,"line_start":130,"line_end":130,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":661},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":134126,"byte_end":134131,"line_start":151,"line_end":151,"column_start":12,"column_end":17},"name":"trunc","qualname":"<Point>::trunc","value":"pub fn trunc(Self) -> Point","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Point`,\n with `x` and `y` rounded towards zero to the nearest integer,\n unless they are already an integer.","sig":null,"attributes":[{"value":"/ Returns a new `Point`,","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":133661,"byte_end":133687,"line_start":135,"line_end":135,"column_start":5,"column_end":31}},{"value":"/ with `x` and `y` rounded towards zero to the nearest integer,","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":133692,"byte_end":133757,"line_start":136,"line_end":136,"column_start":5,"column_end":70}},{"value":"/ unless they are already an integer.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":133762,"byte_end":133801,"line_start":137,"line_end":137,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":133806,"byte_end":133809,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":133814,"byte_end":133828,"line_start":139,"line_end":139,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":133833,"byte_end":133836,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":133841,"byte_end":133848,"line_start":141,"line_end":141,"column_start":5,"column_end":12}},{"value":"/ use kurbo::Point;","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":133853,"byte_end":133874,"line_start":142,"line_end":142,"column_start":5,"column_end":26}},{"value":"/ let a = Point::new(3.3, 3.6).trunc();","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":133879,"byte_end":133920,"line_start":143,"line_end":143,"column_start":5,"column_end":46}},{"value":"/ let b = Point::new(3.0, -3.1).trunc();","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":133925,"byte_end":133967,"line_start":144,"line_end":144,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(a.x, 3.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":133972,"byte_end":133997,"line_start":145,"line_end":145,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(a.y, 3.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":134002,"byte_end":134027,"line_start":146,"line_end":146,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(b.x, 3.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":134032,"byte_end":134057,"line_start":147,"line_end":147,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(b.y, -3.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":134062,"byte_end":134088,"line_start":148,"line_end":148,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":134093,"byte_end":134100,"line_start":149,"line_end":149,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":134105,"byte_end":134114,"line_start":150,"line_end":150,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1409},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/quadbez.rs","byte_start":138167,"byte_end":138174,"line_start":18,"line_end":18,"column_start":12,"column_end":19},"name":"QuadBez","qualname":"::quadbez::QuadBez","value":"QuadBez { p0, p1, p2 }","parent":null,"children":[{"krate":0,"index":1410},{"krate":0,"index":1411},{"krate":0,"index":1412}],"decl_id":null,"docs":" A single quadratic Bézier segment.\n","sig":null,"attributes":[{"value":"/ A single quadratic Bézier segment.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/quadbez.rs","byte_start":137975,"byte_end":138014,"line_start":14,"line_end":14,"column_start":1,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/quadbez.rs","byte_start":138133,"byte_end":138155,"line_start":17,"line_end":17,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":1410},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/quadbez.rs","byte_start":138185,"byte_end":138187,"line_start":19,"line_end":19,"column_start":9,"column_end":11},"name":"p0","qualname":"::quadbez::QuadBez::p0","value":"point::Point","parent":{"krate":0,"index":1409},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1411},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/quadbez.rs","byte_start":138204,"byte_end":138206,"line_start":20,"line_end":20,"column_start":9,"column_end":11},"name":"p1","qualname":"::quadbez::QuadBez::p1","value":"point::Point","parent":{"krate":0,"index":1409},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1412},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/quadbez.rs","byte_start":138223,"byte_end":138225,"line_start":21,"line_end":21,"column_start":9,"column_end":11},"name":"p2","qualname":"::quadbez::QuadBez::p2","value":"point::Point","parent":{"krate":0,"index":1409},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":716},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/quadbez.rs","byte_start":138325,"byte_end":138328,"line_start":27,"line_end":27,"column_start":12,"column_end":15},"name":"new","qualname":"<QuadBez>::new","value":"pub fn new<V: Into<Point>>(V, V, V) -> QuadBez","parent":null,"children":[],"decl_id":null,"docs":" Create a new quadratic Bézier segment.\n","sig":null,"attributes":[{"value":"/ Create a new quadratic Bézier segment.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/quadbez.rs","byte_start":138256,"byte_end":138299,"line_start":25,"line_end":25,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/quadbez.rs","byte_start":138304,"byte_end":138313,"line_start":26,"line_end":26,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/quadbez.rs","byte_start":138638,"byte_end":138643,"line_start":39,"line_end":39,"column_start":12,"column_end":17},"name":"raise","qualname":"<QuadBez>::raise","value":"pub fn raise(&Self) -> CubicBez","parent":null,"children":[],"decl_id":null,"docs":" Raise the order by 1.","sig":null,"attributes":[{"value":"/ Raise the order by 1.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/quadbez.rs","byte_start":138499,"byte_end":138524,"line_start":35,"line_end":35,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/quadbez.rs","byte_start":138529,"byte_end":138532,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ Returns a cubic Bézier segment that exactly represents this quadratic.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/quadbez.rs","byte_start":138537,"byte_end":138612,"line_start":37,"line_end":37,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/quadbez.rs","byte_start":138617,"byte_end":138626,"line_start":38,"line_end":38,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":721},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/quadbez.rs","byte_start":140567,"byte_end":140578,"line_start":96,"line_end":96,"column_start":12,"column_end":23},"name":"QuadBezIter","qualname":"::quadbez::QuadBezIter","value":"QuadBezIter {  }","parent":null,"children":[{"krate":0,"index":722},{"krate":0,"index":723}],"decl_id":null,"docs":" An iterator for quadratic beziers.\n","sig":null,"attributes":[{"value":"/ An iterator for quadratic beziers.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/quadbez.rs","byte_start":140517,"byte_end":140555,"line_start":95,"line_end":95,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1422},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":153878,"byte_end":153882,"line_start":11,"line_end":11,"column_start":12,"column_end":16},"name":"Rect","qualname":"::rect::Rect","value":"Rect { x0, y0, x1, y1 }","parent":null,"children":[{"krate":0,"index":1423},{"krate":0,"index":1424},{"krate":0,"index":1425},{"krate":0,"index":1426}],"decl_id":null,"docs":" A rectangle.\n","sig":null,"attributes":[{"value":"/ A rectangle.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":153730,"byte_end":153746,"line_start":8,"line_end":8,"column_start":1,"column_end":17}}]},{"kind":"Field","id":{"krate":0,"index":1423},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":153939,"byte_end":153941,"line_start":13,"line_end":13,"column_start":9,"column_end":11},"name":"x0","qualname":"::rect::Rect::x0","value":"f64","parent":{"krate":0,"index":1422},"children":[],"decl_id":null,"docs":" The minimum x coordinate (left edge).\n","sig":null,"attributes":[{"value":"/ The minimum x coordinate (left edge).","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":153889,"byte_end":153930,"line_start":12,"line_end":12,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":1424},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":154018,"byte_end":154020,"line_start":15,"line_end":15,"column_start":9,"column_end":11},"name":"y0","qualname":"::rect::Rect::y0","value":"f64","parent":{"krate":0,"index":1422},"children":[],"decl_id":null,"docs":" The minimum y coordinate (top edge in y-down spaces).\n","sig":null,"attributes":[{"value":"/ The minimum y coordinate (top edge in y-down spaces).","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":153952,"byte_end":154009,"line_start":14,"line_end":14,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":1425},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":154082,"byte_end":154084,"line_start":17,"line_end":17,"column_start":9,"column_end":11},"name":"x1","qualname":"::rect::Rect::x1","value":"f64","parent":{"krate":0,"index":1422},"children":[],"decl_id":null,"docs":" The maximum x coordinate (right edge).\n","sig":null,"attributes":[{"value":"/ The maximum x coordinate (right edge).","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":154031,"byte_end":154073,"line_start":16,"line_end":16,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":1426},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":154164,"byte_end":154166,"line_start":19,"line_end":19,"column_start":9,"column_end":11},"name":"y1","qualname":"::rect::Rect::y1","value":"f64","parent":{"krate":0,"index":1422},"children":[],"decl_id":null,"docs":" The maximum y coordinate (bottom edge in y-down spaces).\n","sig":null,"attributes":[{"value":"/ The maximum y coordinate (bottom edge in y-down spaces).","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":154095,"byte_end":154155,"line_start":18,"line_end":18,"column_start":5,"column_end":65}}]},{"kind":"Const","id":{"krate":0,"index":784},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":154245,"byte_end":154249,"line_start":24,"line_end":24,"column_start":15,"column_end":19},"name":"ZERO","qualname":"::rect::Rect::ZERO","value":"Rect","parent":{"krate":0,"index":783},"children":[],"decl_id":null,"docs":" The empty rectangle at the origin.\n","sig":null,"attributes":[{"value":"/ The empty rectangle at the origin.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":154192,"byte_end":154230,"line_start":23,"line_end":23,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":785},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":154379,"byte_end":154382,"line_start":28,"line_end":28,"column_start":18,"column_end":21},"name":"new","qualname":"<Rect>::new","value":"pub const fn new(f64, f64, f64, f64) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" A new rectangle from minimum and maximum coordinates.\n","sig":null,"attributes":[{"value":"/ A new rectangle from minimum and maximum coordinates.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":154290,"byte_end":154347,"line_start":26,"line_end":26,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":154352,"byte_end":154361,"line_start":27,"line_end":27,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":786},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":154602,"byte_end":154613,"line_start":36,"line_end":36,"column_start":12,"column_end":23},"name":"from_points","qualname":"<Rect>::from_points","value":"pub fn from_points<impl Into<Point>: Into<Point>,\n                   impl Into<Point>: Into<Point>>(impl Into<Point>,\n                                                  impl Into<Point>) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" A new rectangle from two points.","sig":null,"attributes":[{"value":"/ A new rectangle from two points.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":154472,"byte_end":154508,"line_start":32,"line_end":32,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":154513,"byte_end":154516,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ The result will have non-negative width and height.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":154521,"byte_end":154576,"line_start":34,"line_end":34,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":154581,"byte_end":154590,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":789},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":154918,"byte_end":154934,"line_start":46,"line_end":46,"column_start":12,"column_end":28},"name":"from_origin_size","qualname":"<Rect>::from_origin_size","value":"pub fn from_origin_size<impl Into<Point>: Into<Point>,\n                        impl Into<Size>: Into<Size>>(impl Into<Point>,\n                                                     impl Into<Size>) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" A new rectangle from origin and size.","sig":null,"attributes":[{"value":"/ A new rectangle from origin and size.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":154783,"byte_end":154824,"line_start":42,"line_end":42,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":154829,"byte_end":154832,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ The result will have non-negative width and height.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":154837,"byte_end":154892,"line_start":44,"line_end":44,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":154897,"byte_end":154906,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":792},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":155174,"byte_end":155190,"line_start":53,"line_end":53,"column_start":12,"column_end":28},"name":"from_center_size","qualname":"<Rect>::from_center_size","value":"pub fn from_center_size<impl Into<Point>: Into<Point>,\n                        impl Into<Size>: Into<Size>>(impl Into<Point>,\n                                                     impl Into<Size>) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" A new rectangle from center and size.\n","sig":null,"attributes":[{"value":"/ A new rectangle from center and size.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":155107,"byte_end":155148,"line_start":51,"line_end":51,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":155153,"byte_end":155162,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":795},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":155602,"byte_end":155613,"line_start":66,"line_end":66,"column_start":12,"column_end":23},"name":"with_origin","qualname":"<Rect>::with_origin","value":"pub fn with_origin<impl Into<Point>: Into<Point>>(Self, impl Into<Point>)\n-> Rect","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Rect` with the same size as `self` and a new origin.\n","sig":null,"attributes":[{"value":"/ Create a new `Rect` with the same size as `self` and a new origin.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":155506,"byte_end":155576,"line_start":64,"line_end":64,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":155581,"byte_end":155590,"line_start":65,"line_end":65,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":797},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":155815,"byte_end":155824,"line_start":72,"line_end":72,"column_start":12,"column_end":21},"name":"with_size","qualname":"<Rect>::with_size","value":"pub fn with_size<impl Into<Size>: Into<Size>>(Self, impl Into<Size>) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Rect` with the same origin as `self` and a new size.\n","sig":null,"attributes":[{"value":"/ Create a new `Rect` with the same origin as `self` and a new size.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":155719,"byte_end":155789,"line_start":70,"line_end":70,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":155794,"byte_end":155803,"line_start":71,"line_end":71,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":799},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":156394,"byte_end":156399,"line_start":92,"line_end":92,"column_start":12,"column_end":17},"name":"inset","qualname":"<Rect>::inset","value":"pub fn inset<impl Into<Insets>: Into<Insets>>(Self, impl Into<Insets>) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Rect` by applying the [`Insets`].","sig":null,"attributes":[{"value":"/ Create a new `Rect` by applying the [`Insets`].","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":155927,"byte_end":155978,"line_start":76,"line_end":76,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":155983,"byte_end":155986,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This will not preserve negative width and height.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":155991,"byte_end":156044,"line_start":78,"line_end":78,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":156049,"byte_end":156052,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":156057,"byte_end":156071,"line_start":80,"line_end":80,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":156076,"byte_end":156079,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":156084,"byte_end":156091,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ use kurbo::Rect;","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":156096,"byte_end":156116,"line_start":83,"line_end":83,"column_start":5,"column_end":25}},{"value":"/ let inset_rect = Rect::new(0., 0., 10., 10.,).inset(2.);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":156121,"byte_end":156181,"line_start":84,"line_end":84,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(inset_rect.width(), 14.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":156186,"byte_end":156227,"line_start":85,"line_end":85,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(inset_rect.x0, -2.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":156232,"byte_end":156268,"line_start":86,"line_end":86,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(inset_rect.x1, 12.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":156273,"byte_end":156309,"line_start":87,"line_end":87,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":156314,"byte_end":156321,"line_start":88,"line_end":88,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":156326,"byte_end":156329,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ [`Insets`]: struct.Insets.html","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":156334,"byte_end":156368,"line_start":90,"line_end":90,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":156373,"byte_end":156382,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":801},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":156594,"byte_end":156599,"line_start":100,"line_end":100,"column_start":12,"column_end":17},"name":"width","qualname":"<Rect>::width","value":"pub fn width(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The width of the rectangle.","sig":null,"attributes":[{"value":"/ The width of the rectangle.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":156483,"byte_end":156514,"line_start":96,"line_end":96,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":156519,"byte_end":156522,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ Note: nothing forbids negative width.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":156527,"byte_end":156568,"line_start":98,"line_end":98,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":156573,"byte_end":156582,"line_start":99,"line_end":99,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":802},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":156766,"byte_end":156772,"line_start":108,"line_end":108,"column_start":12,"column_end":18},"name":"height","qualname":"<Rect>::height","value":"pub fn height(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The height of the rectangle.","sig":null,"attributes":[{"value":"/ The height of the rectangle.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":156653,"byte_end":156685,"line_start":104,"line_end":104,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":156690,"byte_end":156693,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ Note: nothing forbids negative height.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":156698,"byte_end":156740,"line_start":106,"line_end":106,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":156745,"byte_end":156754,"line_start":107,"line_end":107,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":803},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":156920,"byte_end":156925,"line_start":114,"line_end":114,"column_start":12,"column_end":17},"name":"min_x","qualname":"<Rect>::min_x","value":"pub fn min_x(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Returns the minimum value for the x-coordinate of the rectangle.\n","sig":null,"attributes":[{"value":"/ Returns the minimum value for the x-coordinate of the rectangle.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":156826,"byte_end":156894,"line_start":112,"line_end":112,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":156899,"byte_end":156908,"line_start":113,"line_end":113,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":804},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":157076,"byte_end":157081,"line_start":120,"line_end":120,"column_start":12,"column_end":17},"name":"max_x","qualname":"<Rect>::max_x","value":"pub fn max_x(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum value for the x-coordinate of the rectangle.\n","sig":null,"attributes":[{"value":"/ Returns the maximum value for the x-coordinate of the rectangle.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":156982,"byte_end":157050,"line_start":118,"line_end":118,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":157055,"byte_end":157064,"line_start":119,"line_end":119,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":805},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":157232,"byte_end":157237,"line_start":126,"line_end":126,"column_start":12,"column_end":17},"name":"min_y","qualname":"<Rect>::min_y","value":"pub fn min_y(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Returns the minimum value for the y-coordinate of the rectangle.\n","sig":null,"attributes":[{"value":"/ Returns the minimum value for the y-coordinate of the rectangle.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":157138,"byte_end":157206,"line_start":124,"line_end":124,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":157211,"byte_end":157220,"line_start":125,"line_end":125,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":806},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":157388,"byte_end":157393,"line_start":132,"line_end":132,"column_start":12,"column_end":17},"name":"max_y","qualname":"<Rect>::max_y","value":"pub fn max_y(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum value for the y-coordinate of the rectangle.\n","sig":null,"attributes":[{"value":"/ Returns the maximum value for the y-coordinate of the rectangle.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":157294,"byte_end":157362,"line_start":130,"line_end":130,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":157367,"byte_end":157376,"line_start":131,"line_end":131,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":157618,"byte_end":157624,"line_start":141,"line_end":141,"column_start":12,"column_end":18},"name":"origin","qualname":"<Rect>::origin","value":"pub fn origin(&Self) -> Point","parent":null,"children":[],"decl_id":null,"docs":" The origin of the rectangle.","sig":null,"attributes":[{"value":"/ The origin of the rectangle.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":157450,"byte_end":157482,"line_start":136,"line_end":136,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":157487,"byte_end":157490,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ This is the top left corner in a y-down space and with","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":157495,"byte_end":157553,"line_start":138,"line_end":138,"column_start":5,"column_end":63}},{"value":"/ non-negative width and height.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":157558,"byte_end":157592,"line_start":139,"line_end":139,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":157597,"byte_end":157606,"line_start":140,"line_end":140,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":808},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":157747,"byte_end":157751,"line_start":147,"line_end":147,"column_start":12,"column_end":16},"name":"size","qualname":"<Rect>::size","value":"pub fn size(&Self) -> Size","parent":null,"children":[],"decl_id":null,"docs":" The size of the rectangle.\n","sig":null,"attributes":[{"value":"/ The size of the rectangle.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":157691,"byte_end":157721,"line_start":145,"line_end":145,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":157726,"byte_end":157735,"line_start":146,"line_end":146,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":809},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":157883,"byte_end":157887,"line_start":153,"line_end":153,"column_start":12,"column_end":16},"name":"area","qualname":"<Rect>::area","value":"pub fn area(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The area of the rectangle.\n","sig":null,"attributes":[{"value":"/ The area of the rectangle.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":157827,"byte_end":157857,"line_start":151,"line_end":151,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":157862,"byte_end":157871,"line_start":152,"line_end":152,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":810},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":158097,"byte_end":158105,"line_start":161,"line_end":161,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Rect>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether this rectangle has zero area.","sig":null,"attributes":[{"value":"/ Whether this rectangle has zero area.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":157952,"byte_end":157993,"line_start":157,"line_end":157,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":157998,"byte_end":158001,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ Note: a rectangle with negative area is not considered empty.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":158006,"byte_end":158071,"line_start":159,"line_end":159,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":158076,"byte_end":158085,"line_start":160,"line_end":160,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":811},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":158225,"byte_end":158231,"line_start":167,"line_end":167,"column_start":12,"column_end":18},"name":"center","qualname":"<Rect>::center","value":"pub fn center(&Self) -> Point","parent":null,"children":[],"decl_id":null,"docs":" The center point of the rectangle.\n","sig":null,"attributes":[{"value":"/ The center point of the rectangle.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":158161,"byte_end":158199,"line_start":165,"line_end":165,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":158204,"byte_end":158213,"line_start":166,"line_end":166,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":812},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":158409,"byte_end":158417,"line_start":173,"line_end":173,"column_start":12,"column_end":20},"name":"contains","qualname":"<Rect>::contains","value":"pub fn contains(&Self, Point) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `point` lies within `self`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `point` lies within `self`.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":158334,"byte_end":158383,"line_start":171,"line_end":171,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":158388,"byte_end":158397,"line_start":172,"line_end":172,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":813},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":158759,"byte_end":158762,"line_start":182,"line_end":182,"column_start":12,"column_end":15},"name":"abs","qualname":"<Rect>::abs","value":"pub fn abs(&Self) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" Take absolute value of width and height.","sig":null,"attributes":[{"value":"/ Take absolute value of width and height.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":158551,"byte_end":158595,"line_start":177,"line_end":177,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":158600,"byte_end":158603,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ The resulting rect has the same extents as the original, but is","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":158608,"byte_end":158675,"line_start":179,"line_end":179,"column_start":5,"column_end":72}},{"value":"/ guaranteed to have non-negative width and height.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":158680,"byte_end":158733,"line_start":180,"line_end":180,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":158738,"byte_end":158747,"line_start":181,"line_end":181,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":814},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":159057,"byte_end":159062,"line_start":191,"line_end":191,"column_start":12,"column_end":17},"name":"union","qualname":"<Rect>::union","value":"pub fn union(&Self, Rect) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" The smallest rectangle enclosing two rectangles.","sig":null,"attributes":[{"value":"/ The smallest rectangle enclosing two rectangles.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":158902,"byte_end":158954,"line_start":187,"line_end":187,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":158959,"byte_end":158962,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ Results are valid only if width and height are non-negative.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":158967,"byte_end":159031,"line_start":189,"line_end":189,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":159036,"byte_end":159045,"line_start":190,"line_end":190,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":815},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":159591,"byte_end":159599,"line_start":207,"line_end":207,"column_start":12,"column_end":20},"name":"union_pt","qualname":"<Rect>::union_pt","value":"pub fn union_pt(&Self, Point) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" Compute the union with one point.","sig":null,"attributes":[{"value":"/ Compute the union with one point.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":159273,"byte_end":159310,"line_start":200,"line_end":200,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":159315,"byte_end":159318,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ This method includes the perimeter of zero-area rectangles.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":159323,"byte_end":159386,"line_start":202,"line_end":202,"column_start":5,"column_end":68}},{"value":"/ Thus, a succession of `union_pt` operations on a series of","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":159391,"byte_end":159453,"line_start":203,"line_end":203,"column_start":5,"column_end":67}},{"value":"/ points yields their enclosing rectangle.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":159458,"byte_end":159502,"line_start":204,"line_end":204,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":159507,"byte_end":159510,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ Results are valid only if width and height are non-negative.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":159515,"byte_end":159579,"line_start":206,"line_end":206,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":816},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":160004,"byte_end":160013,"line_start":221,"line_end":221,"column_start":12,"column_end":21},"name":"intersect","qualname":"<Rect>::intersect","value":"pub fn intersect(&Self, Rect) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" The intersection of two rectangles.","sig":null,"attributes":[{"value":"/ The intersection of two rectangles.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":159792,"byte_end":159831,"line_start":216,"line_end":216,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":159836,"byte_end":159839,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ The result is zero-area if either input has negative width or","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":159844,"byte_end":159909,"line_start":218,"line_end":218,"column_start":5,"column_end":70}},{"value":"/ height. The result always has non-negative width and height.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":159914,"byte_end":159978,"line_start":219,"line_end":219,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":159983,"byte_end":159992,"line_start":220,"line_end":220,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":817},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":160500,"byte_end":160507,"line_start":233,"line_end":233,"column_start":12,"column_end":19},"name":"inflate","qualname":"<Rect>::inflate","value":"pub fn inflate(&Self, f64, f64) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" Expand a rectangle by a constant amount in both directions.","sig":null,"attributes":[{"value":"/ Expand a rectangle by a constant amount in both directions.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":160265,"byte_end":160328,"line_start":229,"line_end":229,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":160333,"byte_end":160336,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ The logic simply applies the amount in each direction. If rectangle","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":160341,"byte_end":160412,"line_start":231,"line_end":231,"column_start":5,"column_end":76}},{"value":"/ area or added dimensions are negative, this could give odd results.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":160417,"byte_end":160488,"line_start":232,"line_end":232,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":818},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":161106,"byte_end":161111,"line_start":256,"line_end":256,"column_start":12,"column_end":17},"name":"round","qualname":"<Rect>::round","value":"pub fn round(Self) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Rect`,\n with each coordinate value rounded to the nearest integer.","sig":null,"attributes":[{"value":"/ Returns a new `Rect`,","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":160708,"byte_end":160733,"line_start":242,"line_end":242,"column_start":5,"column_end":30}},{"value":"/ with each coordinate value rounded to the nearest integer.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":160738,"byte_end":160800,"line_start":243,"line_end":243,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":160805,"byte_end":160808,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":160813,"byte_end":160827,"line_start":245,"line_end":245,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":160832,"byte_end":160835,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":160840,"byte_end":160847,"line_start":247,"line_end":247,"column_start":5,"column_end":12}},{"value":"/ use kurbo::Rect;","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":160852,"byte_end":160872,"line_start":248,"line_end":248,"column_start":5,"column_end":25}},{"value":"/ let rect = Rect::new(3.3, 3.6, 3.0, -3.1).round();","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":160877,"byte_end":160931,"line_start":249,"line_end":249,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(rect.x0, 3.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":160936,"byte_end":160965,"line_start":250,"line_end":250,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(rect.y0, 4.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":160970,"byte_end":160999,"line_start":251,"line_end":251,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(rect.x1, 3.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":161004,"byte_end":161033,"line_start":252,"line_end":252,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(rect.y1, -3.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":161038,"byte_end":161068,"line_start":253,"line_end":253,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":161073,"byte_end":161080,"line_start":254,"line_end":254,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":161085,"byte_end":161094,"line_start":255,"line_end":255,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":819},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":161728,"byte_end":161732,"line_start":280,"line_end":280,"column_start":12,"column_end":16},"name":"ceil","qualname":"<Rect>::ceil","value":"pub fn ceil(Self) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Rect`,\n with each coordinate value rounded up to the nearest integer,\n unless they are already an integer.","sig":null,"attributes":[{"value":"/ Returns a new `Rect`,","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":161284,"byte_end":161309,"line_start":265,"line_end":265,"column_start":5,"column_end":30}},{"value":"/ with each coordinate value rounded up to the nearest integer,","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":161314,"byte_end":161379,"line_start":266,"line_end":266,"column_start":5,"column_end":70}},{"value":"/ unless they are already an integer.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":161384,"byte_end":161423,"line_start":267,"line_end":267,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":161428,"byte_end":161431,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":161436,"byte_end":161450,"line_start":269,"line_end":269,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":161455,"byte_end":161458,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":161463,"byte_end":161470,"line_start":271,"line_end":271,"column_start":5,"column_end":12}},{"value":"/ use kurbo::Rect;","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":161475,"byte_end":161495,"line_start":272,"line_end":272,"column_start":5,"column_end":25}},{"value":"/ let rect = Rect::new(3.3, 3.6, 3.0, -3.1).ceil();","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":161500,"byte_end":161553,"line_start":273,"line_end":273,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(rect.x0, 4.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":161558,"byte_end":161587,"line_start":274,"line_end":274,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(rect.y0, 4.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":161592,"byte_end":161621,"line_start":275,"line_end":275,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(rect.x1, 3.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":161626,"byte_end":161655,"line_start":276,"line_end":276,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(rect.y1, -3.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":161660,"byte_end":161690,"line_start":277,"line_end":277,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":161695,"byte_end":161702,"line_start":278,"line_end":278,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":161707,"byte_end":161716,"line_start":279,"line_end":279,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":820},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":162348,"byte_end":162353,"line_start":304,"line_end":304,"column_start":12,"column_end":17},"name":"floor","qualname":"<Rect>::floor","value":"pub fn floor(Self) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Rect`,\n with each coordinate value rounded down to the nearest integer,\n unless they are already an integer.","sig":null,"attributes":[{"value":"/ Returns a new `Rect`,","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":161901,"byte_end":161926,"line_start":289,"line_end":289,"column_start":5,"column_end":30}},{"value":"/ with each coordinate value rounded down to the nearest integer,","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":161931,"byte_end":161998,"line_start":290,"line_end":290,"column_start":5,"column_end":72}},{"value":"/ unless they are already an integer.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":162003,"byte_end":162042,"line_start":291,"line_end":291,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":162047,"byte_end":162050,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":162055,"byte_end":162069,"line_start":293,"line_end":293,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":162074,"byte_end":162077,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":162082,"byte_end":162089,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ use kurbo::Rect;","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":162094,"byte_end":162114,"line_start":296,"line_end":296,"column_start":5,"column_end":25}},{"value":"/ let rect = Rect::new(3.3, 3.6, 3.0, -3.1).floor();","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":162119,"byte_end":162173,"line_start":297,"line_end":297,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(rect.x0, 3.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":162178,"byte_end":162207,"line_start":298,"line_end":298,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(rect.y0, 3.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":162212,"byte_end":162241,"line_start":299,"line_end":299,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(rect.x1, 3.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":162246,"byte_end":162275,"line_start":300,"line_end":300,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(rect.y1, -4.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":162280,"byte_end":162310,"line_start":301,"line_end":301,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":162315,"byte_end":162322,"line_start":302,"line_end":302,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":162327,"byte_end":162336,"line_start":303,"line_end":303,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":821},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":163912,"byte_end":163918,"line_start":353,"line_end":353,"column_start":12,"column_end":18},"name":"expand","qualname":"<Rect>::expand","value":"pub fn expand(Self) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Rect`,\n with each coordinate value rounded away from the center of the `Rect`\n to the nearest integer, unless they are already an integer.\n That is to say this function will return the smallest possible `Rect`\n with integer coordinates that is a superset of `self`.","sig":null,"attributes":[{"value":"/ Returns a new `Rect`,","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":162526,"byte_end":162551,"line_start":313,"line_end":313,"column_start":5,"column_end":30}},{"value":"/ with each coordinate value rounded away from the center of the `Rect`","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":162556,"byte_end":162629,"line_start":314,"line_end":314,"column_start":5,"column_end":78}},{"value":"/ to the nearest integer, unless they are already an integer.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":162634,"byte_end":162697,"line_start":315,"line_end":315,"column_start":5,"column_end":68}},{"value":"/ That is to say this function will return the smallest possible `Rect`","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":162702,"byte_end":162775,"line_start":316,"line_end":316,"column_start":5,"column_end":78}},{"value":"/ with integer coordinates that is a superset of `self`.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":162780,"byte_end":162838,"line_start":317,"line_end":317,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":162843,"byte_end":162846,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":162851,"byte_end":162865,"line_start":319,"line_end":319,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":162870,"byte_end":162873,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":162878,"byte_end":162885,"line_start":321,"line_end":321,"column_start":5,"column_end":12}},{"value":"/ use kurbo::Rect;","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":162890,"byte_end":162910,"line_start":322,"line_end":322,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":162915,"byte_end":162918,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ // In positive space","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":162923,"byte_end":162947,"line_start":324,"line_end":324,"column_start":5,"column_end":29}},{"value":"/ let rect = Rect::new(3.3, 3.6, 5.6, 4.1).expand();","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":162952,"byte_end":163006,"line_start":325,"line_end":325,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(rect.x0, 3.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":163011,"byte_end":163040,"line_start":326,"line_end":326,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(rect.y0, 3.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":163045,"byte_end":163074,"line_start":327,"line_end":327,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(rect.x1, 6.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":163079,"byte_end":163108,"line_start":328,"line_end":328,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(rect.y1, 5.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":163113,"byte_end":163142,"line_start":329,"line_end":329,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":163147,"byte_end":163150,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ // In both positive and negative space","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":163155,"byte_end":163197,"line_start":331,"line_end":331,"column_start":5,"column_end":47}},{"value":"/ let rect = Rect::new(-3.3, -3.6, 5.6, 4.1).expand();","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":163202,"byte_end":163258,"line_start":332,"line_end":332,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(rect.x0, -4.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":163263,"byte_end":163293,"line_start":333,"line_end":333,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(rect.y0, -4.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":163298,"byte_end":163328,"line_start":334,"line_end":334,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(rect.x1, 6.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":163333,"byte_end":163362,"line_start":335,"line_end":335,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(rect.y1, 5.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":163367,"byte_end":163396,"line_start":336,"line_end":336,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":163401,"byte_end":163404,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ // In negative space","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":163409,"byte_end":163433,"line_start":338,"line_end":338,"column_start":5,"column_end":29}},{"value":"/ let rect = Rect::new(-5.6, -4.1, -3.3, -3.6).expand();","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":163438,"byte_end":163496,"line_start":339,"line_end":339,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(rect.x0, -6.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":163501,"byte_end":163531,"line_start":340,"line_end":340,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(rect.y0, -5.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":163536,"byte_end":163566,"line_start":341,"line_end":341,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(rect.x1, -3.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":163571,"byte_end":163601,"line_start":342,"line_end":342,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(rect.y1, -3.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":163606,"byte_end":163636,"line_start":343,"line_end":343,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":163641,"byte_end":163644,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ // Inverse orientation","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":163649,"byte_end":163675,"line_start":345,"line_end":345,"column_start":5,"column_end":31}},{"value":"/ let rect = Rect::new(5.6, -3.6, 3.3, -4.1).expand();","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":163680,"byte_end":163736,"line_start":346,"line_end":346,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(rect.x0, 6.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":163741,"byte_end":163770,"line_start":347,"line_end":347,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(rect.y0, -3.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":163775,"byte_end":163805,"line_start":348,"line_end":348,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(rect.x1, 3.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":163810,"byte_end":163839,"line_start":349,"line_end":349,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(rect.y1, -5.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":163844,"byte_end":163874,"line_start":350,"line_end":350,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":163879,"byte_end":163886,"line_start":351,"line_end":351,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":163891,"byte_end":163900,"line_start":352,"line_end":352,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":822},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":165753,"byte_end":165758,"line_start":408,"line_end":408,"column_start":12,"column_end":17},"name":"trunc","qualname":"<Rect>::trunc","value":"pub fn trunc(Self) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Rect`,\n with each coordinate value rounded towards the center of the `Rect`\n to the nearest integer, unless they are already an integer.\n That is to say this function will return the biggest possible `Rect`\n with integer coordinates that is a subset of `self`.","sig":null,"attributes":[{"value":"/ Returns a new `Rect`,","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":164376,"byte_end":164401,"line_start":368,"line_end":368,"column_start":5,"column_end":30}},{"value":"/ with each coordinate value rounded towards the center of the `Rect`","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":164406,"byte_end":164477,"line_start":369,"line_end":369,"column_start":5,"column_end":76}},{"value":"/ to the nearest integer, unless they are already an integer.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":164482,"byte_end":164545,"line_start":370,"line_end":370,"column_start":5,"column_end":68}},{"value":"/ That is to say this function will return the biggest possible `Rect`","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":164550,"byte_end":164622,"line_start":371,"line_end":371,"column_start":5,"column_end":77}},{"value":"/ with integer coordinates that is a subset of `self`.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":164627,"byte_end":164683,"line_start":372,"line_end":372,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":164688,"byte_end":164691,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":164696,"byte_end":164710,"line_start":374,"line_end":374,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":164715,"byte_end":164718,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":164723,"byte_end":164730,"line_start":376,"line_end":376,"column_start":5,"column_end":12}},{"value":"/ use kurbo::Rect;","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":164735,"byte_end":164755,"line_start":377,"line_end":377,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":164760,"byte_end":164763,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ // In positive space","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":164768,"byte_end":164792,"line_start":379,"line_end":379,"column_start":5,"column_end":29}},{"value":"/ let rect = Rect::new(3.3, 3.6, 5.6, 4.1).trunc();","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":164797,"byte_end":164850,"line_start":380,"line_end":380,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(rect.x0, 4.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":164855,"byte_end":164884,"line_start":381,"line_end":381,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(rect.y0, 4.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":164889,"byte_end":164918,"line_start":382,"line_end":382,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(rect.x1, 5.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":164923,"byte_end":164952,"line_start":383,"line_end":383,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(rect.y1, 4.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":164957,"byte_end":164986,"line_start":384,"line_end":384,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":164991,"byte_end":164994,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ // In both positive and negative space","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":164999,"byte_end":165041,"line_start":386,"line_end":386,"column_start":5,"column_end":47}},{"value":"/ let rect = Rect::new(-3.3, -3.6, 5.6, 4.1).trunc();","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":165046,"byte_end":165101,"line_start":387,"line_end":387,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(rect.x0, -3.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":165106,"byte_end":165136,"line_start":388,"line_end":388,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(rect.y0, -3.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":165141,"byte_end":165171,"line_start":389,"line_end":389,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(rect.x1, 5.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":165176,"byte_end":165205,"line_start":390,"line_end":390,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(rect.y1, 4.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":165210,"byte_end":165239,"line_start":391,"line_end":391,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":165244,"byte_end":165247,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ // In negative space","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":165252,"byte_end":165276,"line_start":393,"line_end":393,"column_start":5,"column_end":29}},{"value":"/ let rect = Rect::new(-5.6, -4.1, -3.3, -3.6).trunc();","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":165281,"byte_end":165338,"line_start":394,"line_end":394,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(rect.x0, -5.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":165343,"byte_end":165373,"line_start":395,"line_end":395,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(rect.y0, -4.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":165378,"byte_end":165408,"line_start":396,"line_end":396,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(rect.x1, -4.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":165413,"byte_end":165443,"line_start":397,"line_end":397,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(rect.y1, -4.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":165448,"byte_end":165478,"line_start":398,"line_end":398,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":165483,"byte_end":165486,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ // Inverse orientation","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":165491,"byte_end":165517,"line_start":400,"line_end":400,"column_start":5,"column_end":31}},{"value":"/ let rect = Rect::new(5.6, -3.6, 3.3, -4.1).trunc();","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":165522,"byte_end":165577,"line_start":401,"line_end":401,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(rect.x0, 5.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":165582,"byte_end":165611,"line_start":402,"line_end":402,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(rect.y0, -4.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":165616,"byte_end":165646,"line_start":403,"line_end":403,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(rect.x1, 4.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":165651,"byte_end":165680,"line_start":404,"line_end":404,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(rect.y1, -4.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":165685,"byte_end":165715,"line_start":405,"line_end":405,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":165720,"byte_end":165727,"line_start":406,"line_end":406,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":165732,"byte_end":165741,"line_start":407,"line_end":407,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":823},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":166389,"byte_end":166404,"line_start":428,"line_end":428,"column_start":12,"column_end":27},"name":"to_rounded_rect","qualname":"<Rect>::to_rounded_rect","value":"pub fn to_rounded_rect(Self, f64) -> RoundedRect","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`RoundedRect`] from this `Rect` and the provided\n corner radius.","sig":null,"attributes":[{"value":"/ Creates a new [`RoundedRect`] from this `Rect` and the provided","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":166216,"byte_end":166283,"line_start":423,"line_end":423,"column_start":5,"column_end":72}},{"value":"/ corner radius.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":166288,"byte_end":166306,"line_start":424,"line_end":424,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":166311,"byte_end":166314,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ [`RoundedRect`]: struct.RoundedRect.html","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":166319,"byte_end":166363,"line_start":426,"line_end":426,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":166368,"byte_end":166377,"line_start":427,"line_end":427,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":824},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":166631,"byte_end":166641,"line_start":436,"line_end":436,"column_start":12,"column_end":22},"name":"to_ellipse","qualname":"<Rect>::to_ellipse","value":"pub fn to_ellipse(Self) -> Ellipse","parent":null,"children":[],"decl_id":null,"docs":" Returns the [`Ellipse`] that is bounded by this `Rect`.","sig":null,"attributes":[{"value":"/ Returns the [`Ellipse`] that is bounded by this `Rect`.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":166497,"byte_end":166556,"line_start":432,"line_end":432,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":166561,"byte_end":166564,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ [`Ellipse`]: struct.Ellipse.html","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":166569,"byte_end":166605,"line_start":434,"line_end":434,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":166610,"byte_end":166619,"line_start":435,"line_end":435,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":825},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":167074,"byte_end":167086,"line_start":449,"line_end":449,"column_start":12,"column_end":24},"name":"aspect_ratio","qualname":"<Rect>::aspect_ratio","value":"pub fn aspect_ratio(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The aspect ratio of the `Rect`.","sig":null,"attributes":[{"value":"/ The aspect ratio of the `Rect`.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":166705,"byte_end":166740,"line_start":440,"line_end":440,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":166745,"byte_end":166748,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ This is defined as the height divided by the width. It measures the","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":166753,"byte_end":166824,"line_start":442,"line_end":442,"column_start":5,"column_end":76}},{"value":"/ \"squareness\" of the rectangle (a value of `1` is square).","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":166829,"byte_end":166890,"line_start":443,"line_end":443,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":166895,"byte_end":166898,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ If the width is `0` the output will be `sign(y1 - y0) * infinity`.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":166903,"byte_end":166973,"line_start":445,"line_end":445,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":166978,"byte_end":166981,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ If The width and height are `0`, the result will be `NaN`.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":166986,"byte_end":167048,"line_start":447,"line_end":447,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":167053,"byte_end":167062,"line_start":448,"line_end":448,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":826},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":167922,"byte_end":167954,"line_start":474,"line_end":474,"column_start":12,"column_end":44},"name":"contained_rect_with_aspect_ratio","qualname":"<Rect>::contained_rect_with_aspect_ratio","value":"pub fn contained_rect_with_aspect_ratio(&Self, f64) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" Returns the largest possible `Rect` that is fully contained in `self`\n with the given `aspect_ratio`.","sig":null,"attributes":[{"value":"/ Returns the largest possible `Rect` that is fully contained in `self`","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":167149,"byte_end":167222,"line_start":453,"line_end":453,"column_start":5,"column_end":78}},{"value":"/ with the given `aspect_ratio`.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":167227,"byte_end":167261,"line_start":454,"line_end":454,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":167266,"byte_end":167269,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ The aspect ratio is specified fractionally, as `height / width`.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":167274,"byte_end":167342,"line_start":456,"line_end":456,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":167347,"byte_end":167350,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ The resulting rectangle will be centered if it is smaller than the","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":167355,"byte_end":167425,"line_start":458,"line_end":458,"column_start":5,"column_end":75}},{"value":"/ input rectangle.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":167430,"byte_end":167450,"line_start":459,"line_end":459,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":167455,"byte_end":167458,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ For the special case where the aspect ratio is `1.0`, the resulting","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":167463,"byte_end":167534,"line_start":461,"line_end":461,"column_start":5,"column_end":76}},{"value":"/ `Rect` will be square.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":167539,"byte_end":167565,"line_start":462,"line_end":462,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":167570,"byte_end":167573,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":167578,"byte_end":167592,"line_start":464,"line_end":464,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":167597,"byte_end":167600,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":167605,"byte_end":167612,"line_start":466,"line_end":466,"column_start":5,"column_end":12}},{"value":"/ # use kurbo::Rect;","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":167617,"byte_end":167639,"line_start":467,"line_end":467,"column_start":5,"column_end":27}},{"value":"/ let outer = Rect::new(0.0, 0.0, 10.0, 20.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":167644,"byte_end":167692,"line_start":468,"line_end":468,"column_start":5,"column_end":53}},{"value":"/ let inner = outer.contained_rect_with_aspect_ratio(1.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":167697,"byte_end":167757,"line_start":469,"line_end":469,"column_start":5,"column_end":65}},{"value":"/ // The new `Rect` is a square centered at the center of `outer`.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":167762,"byte_end":167830,"line_start":470,"line_end":470,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(inner, Rect::new(0.0, 5.0, 10.0, 15.0));","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":167835,"byte_end":167890,"line_start":471,"line_end":471,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":167895,"byte_end":167902,"line_start":472,"line_end":472,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":167907,"byte_end":167910,"line_start":473,"line_end":473,"column_start":5,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":840},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":169859,"byte_end":169871,"line_start":544,"line_end":544,"column_start":12,"column_end":24},"name":"RectPathIter","qualname":"::rect::RectPathIter","value":"RectPathIter {  }","parent":null,"children":[{"krate":0,"index":841},{"krate":0,"index":842}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1436},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":176459,"byte_end":176470,"line_start":18,"line_end":18,"column_start":12,"column_end":23},"name":"RoundedRect","qualname":"::rounded_rect::RoundedRect","value":"RoundedRect {  }","parent":null,"children":[{"krate":0,"index":1437},{"krate":0,"index":1438}],"decl_id":null,"docs":" A rectangle with equally rounded corners.","sig":null,"attributes":[{"value":"/ A rectangle with equally rounded corners.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":175926,"byte_end":175971,"line_start":6,"line_end":6,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":175972,"byte_end":175975,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ By construction the rounded rectangle will have","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":175976,"byte_end":176027,"line_start":8,"line_end":8,"column_start":1,"column_end":52}},{"value":"/ non-negative dimensions and radius clamped to half size of the rect.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":176028,"byte_end":176100,"line_start":9,"line_end":9,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":176101,"byte_end":176104,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The easiest way to create a `RoundedRect` is often to create a [`Rect`],","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":176105,"byte_end":176181,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/ and then call [`to_rounded_rect`].","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":176182,"byte_end":176220,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":176221,"byte_end":176224,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Rect`]: struct.Rect.html","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":176225,"byte_end":176255,"line_start":14,"line_end":14,"column_start":1,"column_end":31}},{"value":"/ [`to_rounded_rect`]: struct.Rect.html#method.to_rounded_rect","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":176256,"byte_end":176320,"line_start":15,"line_end":15,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":872},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":176765,"byte_end":176768,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<RoundedRect>::new","value":"pub fn new(f64, f64, f64, f64, f64) -> RoundedRect","parent":null,"children":[],"decl_id":null,"docs":" A new rectangle from minimum and maximum coordinates.","sig":null,"attributes":[{"value":"/ A new rectangle from minimum and maximum coordinates.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":176606,"byte_end":176663,"line_start":26,"line_end":26,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":176668,"byte_end":176671,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ The result will have non-negative width, height and radius.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":176676,"byte_end":176739,"line_start":28,"line_end":28,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":176744,"byte_end":176753,"line_start":29,"line_end":29,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":873},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":177243,"byte_end":177252,"line_start":42,"line_end":42,"column_start":12,"column_end":21},"name":"from_rect","qualname":"<RoundedRect>::from_rect","value":"pub fn from_rect(Rect, f64) -> RoundedRect","parent":null,"children":[],"decl_id":null,"docs":" A new rounded rectangle from a rectangle and corner radius.","sig":null,"attributes":[{"value":"/ A new rounded rectangle from a rectangle and corner radius.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":176912,"byte_end":176975,"line_start":34,"line_end":34,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":176980,"byte_end":176983,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ The result will have non-negative width, height and radius.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":176988,"byte_end":177051,"line_start":36,"line_end":36,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":177056,"byte_end":177059,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ See also [`Rect::to_rounded_rect`], which offers the same utility.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":177064,"byte_end":177134,"line_start":38,"line_end":38,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":177139,"byte_end":177142,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ [`Rect::to_rounded_rect`]: struct.Rect.html#method.to_rounded_rect","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":177147,"byte_end":177217,"line_start":40,"line_end":40,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":177222,"byte_end":177231,"line_start":41,"line_end":41,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":874},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":177685,"byte_end":177696,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"from_points","qualname":"<RoundedRect>::from_points","value":"pub fn from_points<impl Into<Point>: Into<Point>,\n                   impl Into<Point>: Into<Point>>(impl Into<Point>,\n                                                  impl Into<Point>, f64)\n-> RoundedRect","parent":null,"children":[],"decl_id":null,"docs":" A new rectangle from two [`Point`]s.","sig":null,"attributes":[{"value":"/ A new rectangle from two [`Point`]s.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":177498,"byte_end":177538,"line_start":52,"line_end":52,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":177543,"byte_end":177546,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ The result will have non-negative width, height and radius.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":177551,"byte_end":177614,"line_start":54,"line_end":54,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":177619,"byte_end":177622,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ [`Point`]: struct.Point.html","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":177627,"byte_end":177659,"line_start":56,"line_end":56,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":177664,"byte_end":177673,"line_start":57,"line_end":57,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":877},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":177983,"byte_end":177999,"line_start":66,"line_end":66,"column_start":12,"column_end":28},"name":"from_origin_size","qualname":"<RoundedRect>::from_origin_size","value":"pub fn from_origin_size<impl Into<Point>: Into<Point>,\n                        impl Into<Size>: Into<Size>>(impl Into<Point>,\n                                                     impl Into<Size>, f64)\n-> RoundedRect","parent":null,"children":[],"decl_id":null,"docs":" A new rectangle from origin and size.","sig":null,"attributes":[{"value":"/ A new rectangle from origin and size.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":177840,"byte_end":177881,"line_start":62,"line_end":62,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":177886,"byte_end":177889,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ The result will have non-negative width, height and radius.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":177894,"byte_end":177957,"line_start":64,"line_end":64,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":177962,"byte_end":177971,"line_start":65,"line_end":65,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":880},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":178247,"byte_end":178252,"line_start":76,"line_end":76,"column_start":12,"column_end":17},"name":"width","qualname":"<RoundedRect>::width","value":"pub fn width(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The width of the rectangle.\n","sig":null,"attributes":[{"value":"/ The width of the rectangle.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":178190,"byte_end":178221,"line_start":74,"line_end":74,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":178226,"byte_end":178235,"line_start":75,"line_end":75,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":881},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":178364,"byte_end":178370,"line_start":82,"line_end":82,"column_start":12,"column_end":18},"name":"height","qualname":"<RoundedRect>::height","value":"pub fn height(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The height of the rectangle.\n","sig":null,"attributes":[{"value":"/ The height of the rectangle.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":178306,"byte_end":178338,"line_start":80,"line_end":80,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":178343,"byte_end":178352,"line_start":81,"line_end":81,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":882},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":178485,"byte_end":178491,"line_start":88,"line_end":88,"column_start":12,"column_end":18},"name":"radius","qualname":"<RoundedRect>::radius","value":"pub fn radius(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Radius of the rounded corners.\n","sig":null,"attributes":[{"value":"/ Radius of the rounded corners.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":178425,"byte_end":178459,"line_start":86,"line_end":86,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":178464,"byte_end":178473,"line_start":87,"line_end":87,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":883},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":178583,"byte_end":178587,"line_start":93,"line_end":93,"column_start":12,"column_end":16},"name":"rect","qualname":"<RoundedRect>::rect","value":"pub fn rect(&Self) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" The (non-rounded) rectangle.\n","sig":null,"attributes":[{"value":"/ The (non-rounded) rectangle.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":178539,"byte_end":178571,"line_start":92,"line_end":92,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":178755,"byte_end":178761,"line_start":101,"line_end":101,"column_start":12,"column_end":18},"name":"origin","qualname":"<RoundedRect>::origin","value":"pub fn origin(&Self) -> Point","parent":null,"children":[],"decl_id":null,"docs":" The origin of the rectangle.","sig":null,"attributes":[{"value":"/ The origin of the rectangle.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":178634,"byte_end":178666,"line_start":97,"line_end":97,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":178671,"byte_end":178674,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ This is the top left corner in a y-down space.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":178679,"byte_end":178729,"line_start":99,"line_end":99,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":178734,"byte_end":178743,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":885},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":178882,"byte_end":178888,"line_start":107,"line_end":107,"column_start":12,"column_end":18},"name":"center","qualname":"<RoundedRect>::center","value":"pub fn center(&Self) -> Point","parent":null,"children":[],"decl_id":null,"docs":" The center point of the rectangle.\n","sig":null,"attributes":[{"value":"/ The center point of the rectangle.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":178818,"byte_end":178856,"line_start":105,"line_end":105,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":178861,"byte_end":178870,"line_start":106,"line_end":106,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":886},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":178969,"byte_end":178988,"line_start":113,"line_end":113,"column_start":12,"column_end":31},"name":"RoundedRectPathIter","qualname":"::rounded_rect::RoundedRectPathIter","value":"RoundedRectPathIter {  }","parent":null,"children":[{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":889}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":921},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":186189,"byte_end":186194,"line_start":15,"line_end":15,"column_start":11,"column_end":16},"name":"Shape","qualname":"::shape::Shape","value":"Shape: Sized","parent":null,"children":[{"krate":0,"index":922},{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":931},{"krate":0,"index":932},{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":935},{"krate":0,"index":936},{"krate":0,"index":937},{"krate":0,"index":938}],"decl_id":null,"docs":" A generic trait for open and closed shapes.","sig":null,"attributes":[{"value":"/ A generic trait for open and closed shapes.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":185794,"byte_end":185841,"line_start":5,"line_end":5,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":185842,"byte_end":185845,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This trait provides conversion from shapes to [`BezPath`]s, as well as","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":185846,"byte_end":185920,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/ general geometry functionality like computing [`area`], [`bounding_box`]es,","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":185921,"byte_end":186000,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/ and [`winding`] number.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":186001,"byte_end":186028,"line_start":9,"line_end":9,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":186029,"byte_end":186032,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`BezPath`]: struct.BezPath.html","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":186033,"byte_end":186069,"line_start":11,"line_end":11,"column_start":1,"column_end":37}},{"value":"/ [`area`]: #tymethod.area","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":186070,"byte_end":186098,"line_start":12,"line_end":12,"column_start":1,"column_end":29}},{"value":"/ [`bounding_box`]: #tymethod.bounding_box","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":186099,"byte_end":186143,"line_start":13,"line_end":13,"column_start":1,"column_end":45}},{"value":"/ [`winding`]: #tymethod.winding","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":186144,"byte_end":186178,"line_start":14,"line_end":14,"column_start":1,"column_end":35}}]},{"kind":"Type","id":{"krate":0,"index":922},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":186335,"byte_end":186351,"line_start":19,"line_end":19,"column_start":10,"column_end":26},"name":"PathElementsIter","qualname":"::shape::Shape::PathElementsIter","value":"type PathElementsIter: Iterator<Item = PathEl>;","parent":{"krate":0,"index":921},"children":[],"decl_id":null,"docs":" The iterator returned by the [`path_elements`] method.","sig":null,"attributes":[{"value":"/ The iterator returned by the [`path_elements`] method.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":186208,"byte_end":186266,"line_start":16,"line_end":16,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":186271,"byte_end":186274,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ [`path_elements`]: #tymethod.path_elements","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":186279,"byte_end":186325,"line_start":18,"line_end":18,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":923},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":188076,"byte_end":188089,"line_start":54,"line_end":54,"column_start":8,"column_end":21},"name":"path_elements","qualname":"::shape::Shape::path_elements","value":"pub fn path_elements(&Self, f64) -> Self::PathElementsIter","parent":{"krate":0,"index":921},"children":[],"decl_id":null,"docs":" Returns an iterator over this shape expressed as [`PathEl`]s;\n that is, as Bézier path _elements_.","sig":null,"attributes":[{"value":"/ Returns an iterator over this shape expressed as [`PathEl`]s;","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":186383,"byte_end":186448,"line_start":21,"line_end":21,"column_start":5,"column_end":70}},{"value":"/ that is, as Bézier path _elements_.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":186453,"byte_end":186493,"line_start":22,"line_end":22,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":186498,"byte_end":186501,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ All shapes can be represented as Béziers, but in many situations","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":186506,"byte_end":186575,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/ (such as when interfacing with a platform drawing API) there are more","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":186580,"byte_end":186653,"line_start":25,"line_end":25,"column_start":5,"column_end":78}},{"value":"/ efficient native types for specific concrete shapes. In this case,","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":186658,"byte_end":186728,"line_start":26,"line_end":26,"column_start":5,"column_end":75}},{"value":"/ the user should exhaust the `as_` methods ([`as_rect`], [`as_line`], etc)","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":186733,"byte_end":186810,"line_start":27,"line_end":27,"column_start":5,"column_end":82}},{"value":"/ before converting to a [`BezPath`], as those are likely to be more","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":186815,"byte_end":186885,"line_start":28,"line_end":28,"column_start":5,"column_end":75}},{"value":"/ efficient.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":186890,"byte_end":186904,"line_start":29,"line_end":29,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":186909,"byte_end":186912,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ In many cases, shapes are able to iterate their elements without","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":186917,"byte_end":186985,"line_start":31,"line_end":31,"column_start":5,"column_end":73}},{"value":"/ allocating; however creating a a [`BezPath`] object always allocates.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":186990,"byte_end":187063,"line_start":32,"line_end":32,"column_start":5,"column_end":78}},{"value":"/ If you need an owned [`BezPath`] you can use [`to_path`] instead.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":187068,"byte_end":187137,"line_start":33,"line_end":33,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":187142,"byte_end":187145,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ # Tolerance","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":187150,"byte_end":187165,"line_start":35,"line_end":35,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":187170,"byte_end":187173,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ The `tolerance` parameter controls the accuracy of","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":187178,"byte_end":187232,"line_start":37,"line_end":37,"column_start":5,"column_end":59}},{"value":"/ conversion of geometric primitives to Bézier curves, as","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":187237,"byte_end":187297,"line_start":38,"line_end":38,"column_start":5,"column_end":64}},{"value":"/ curves such as circles cannot be represented exactly but","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":187302,"byte_end":187362,"line_start":39,"line_end":39,"column_start":5,"column_end":65}},{"value":"/ only approximated. For drawing as in UI elements, a value","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":187367,"byte_end":187428,"line_start":40,"line_end":40,"column_start":5,"column_end":66}},{"value":"/ of 0.1 is appropriate, as it is unlikely to be visible to","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":187433,"byte_end":187494,"line_start":41,"line_end":41,"column_start":5,"column_end":66}},{"value":"/ the eye. For scientific applications, a smaller value","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":187499,"byte_end":187556,"line_start":42,"line_end":42,"column_start":5,"column_end":62}},{"value":"/ might be appropriate. Note that in general the number of","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":187561,"byte_end":187621,"line_start":43,"line_end":43,"column_start":5,"column_end":65}},{"value":"/ cubic Bézier segments scales as `tolerance ^ (-1/6)`.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":187626,"byte_end":187684,"line_start":44,"line_end":44,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":187689,"byte_end":187692,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ TODO: When [GAT's] land, the type of this can be changed to","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":187697,"byte_end":187760,"line_start":46,"line_end":46,"column_start":5,"column_end":68}},{"value":"/ contain a `&'a self` reference, which would let us take","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":187765,"byte_end":187824,"line_start":47,"line_end":47,"column_start":5,"column_end":64}},{"value":"/ iterators from complex shapes without cloning.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":187829,"byte_end":187879,"line_start":48,"line_end":48,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":187884,"byte_end":187887,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ [GAT's]: https://github.com/rust-lang/rust/issues/44265","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":187892,"byte_end":187951,"line_start":50,"line_end":50,"column_start":5,"column_end":64}},{"value":"/ [`as_rect`]: #tymethod.as_rect","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":187956,"byte_end":187990,"line_start":51,"line_end":51,"column_start":5,"column_end":39}},{"value":"/ [`as_line`]: #tymethod.as_line","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":187995,"byte_end":188029,"line_start":52,"line_end":52,"column_start":5,"column_end":39}},{"value":"/ [`to_path`]: #tymethod.to_path","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":188034,"byte_end":188068,"line_start":53,"line_end":53,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":924},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":188684,"byte_end":188691,"line_start":68,"line_end":68,"column_start":8,"column_end":15},"name":"to_path","qualname":"::shape::Shape::to_path","value":"pub fn to_path(&Self, f64) -> BezPath","parent":{"krate":0,"index":921},"children":[],"decl_id":null,"docs":" Convert to a Bézier path.","sig":null,"attributes":[{"value":"/ Convert to a Bézier path.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":188145,"byte_end":188175,"line_start":56,"line_end":56,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":188180,"byte_end":188183,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This always allocates. It is appropriate when both the source","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":188188,"byte_end":188253,"line_start":58,"line_end":58,"column_start":5,"column_end":70}},{"value":"/ shape and the resulting path are to be retained.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":188258,"byte_end":188310,"line_start":59,"line_end":59,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":188315,"byte_end":188318,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ If you only need to iterate the elements (such as to convert them to","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":188323,"byte_end":188395,"line_start":61,"line_end":61,"column_start":5,"column_end":77}},{"value":"/ drawing commands for a given 2D graphics API) you should prefer","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":188400,"byte_end":188467,"line_start":62,"line_end":62,"column_start":5,"column_end":72}},{"value":"/ [`path_elements`], which can avoid allocating where possible.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":188472,"byte_end":188537,"line_start":63,"line_end":63,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":188542,"byte_end":188545,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ The `tolerance` parameter is the same as for [`path_elements`].","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":188550,"byte_end":188617,"line_start":65,"line_end":65,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":188622,"byte_end":188625,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ [`path_elements`]: #tymethod.path_elements","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":188630,"byte_end":188676,"line_start":67,"line_end":67,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":925},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":188880,"byte_end":188891,"line_start":74,"line_end":74,"column_start":8,"column_end":19},"name":"to_bez_path","qualname":"::shape::Shape::to_bez_path","value":"pub fn to_bez_path(&Self, f64) -> Self::PathElementsIter","parent":{"krate":0,"index":921},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.7.0\", note = \"Use path_elements instead\")","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":188787,"byte_end":188853,"line_start":72,"line_end":72,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":926},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":189283,"byte_end":189292,"line_start":84,"line_end":84,"column_start":8,"column_end":17},"name":"into_path","qualname":"::shape::Shape::into_path","value":"pub fn into_path(Self, f64) -> BezPath","parent":{"krate":0,"index":921},"children":[],"decl_id":null,"docs":" Convert into a Bézier path.","sig":null,"attributes":[{"value":"/ Convert into a Bézier path.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":188991,"byte_end":189023,"line_start":77,"line_end":77,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":189028,"byte_end":189031,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ This allocates in the general case, but is zero-cost if the","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":189036,"byte_end":189099,"line_start":79,"line_end":79,"column_start":5,"column_end":68}},{"value":"/ shape is already a [`BezPath`](struct.BezPath.html).","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":189104,"byte_end":189160,"line_start":80,"line_end":80,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":189165,"byte_end":189168,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ The `tolerance` parameter is the same as for","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":189173,"byte_end":189221,"line_start":82,"line_end":82,"column_start":5,"column_end":53}},{"value":"/ [`path_elements()`](#tymethod.path_elements).","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":189226,"byte_end":189275,"line_start":83,"line_end":83,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":927},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":189460,"byte_end":189473,"line_start":90,"line_end":90,"column_start":8,"column_end":21},"name":"into_bez_path","qualname":"::shape::Shape::into_bez_path","value":"pub fn into_bez_path(Self, f64) -> BezPath","parent":{"krate":0,"index":921},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.7.0\", note = \"Use into_path instead\")","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":189371,"byte_end":189433,"line_start":88,"line_end":88,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":189850,"byte_end":189863,"line_start":101,"line_end":101,"column_start":8,"column_end":21},"name":"path_segments","qualname":"::shape::Shape::path_segments","value":"pub fn path_segments(&Self, f64) -> Segments<Self::PathElementsIter>","parent":{"krate":0,"index":921},"children":[],"decl_id":null,"docs":" Returns an iterator over this shape expressed as Bézier path\n _segments_ ([`PathSeg`]s).","sig":null,"attributes":[{"value":"/ Returns an iterator over this shape expressed as Bézier path","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":189554,"byte_end":189619,"line_start":94,"line_end":94,"column_start":5,"column_end":69}},{"value":"/ _segments_ ([`PathSeg`]s).","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":189624,"byte_end":189654,"line_start":95,"line_end":95,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":189659,"byte_end":189662,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ The allocation behaviour and `tolerance` parameter are the","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":189667,"byte_end":189729,"line_start":97,"line_end":97,"column_start":5,"column_end":67}},{"value":"/ same as for [`path_elements()`](#tymethod.path_elements).","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":189734,"byte_end":189795,"line_start":98,"line_end":98,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":189800,"byte_end":189803,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ [`PathSeg`]: enum.PathSeg.html","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":189808,"byte_end":189842,"line_start":100,"line_end":100,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":929},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":190362,"byte_end":190366,"line_start":113,"line_end":113,"column_start":8,"column_end":12},"name":"area","qualname":"::shape::Shape::area","value":"pub fn area(&Self) -> f64","parent":{"krate":0,"index":921},"children":[],"decl_id":null,"docs":" Signed area.","sig":null,"attributes":[{"value":"/ Signed area.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":189984,"byte_end":190000,"line_start":105,"line_end":105,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":190005,"byte_end":190008,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ This method only produces meaningful results with closed shapes.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":190013,"byte_end":190081,"line_start":107,"line_end":107,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":190086,"byte_end":190089,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ The convention for positive area is that y increases when x is","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":190094,"byte_end":190160,"line_start":109,"line_end":109,"column_start":5,"column_end":71}},{"value":"/ positive. Thus, it is clockwise when down is increasing y (the","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":190165,"byte_end":190231,"line_start":110,"line_end":110,"column_start":5,"column_end":71}},{"value":"/ usual convention for graphics), and anticlockwise when","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":190236,"byte_end":190294,"line_start":111,"line_end":111,"column_start":5,"column_end":63}},{"value":"/ up is increasing y (the usual convention for math).","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":190299,"byte_end":190354,"line_start":112,"line_end":112,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":930},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":190466,"byte_end":190475,"line_start":117,"line_end":117,"column_start":8,"column_end":17},"name":"perimeter","qualname":"::shape::Shape::perimeter","value":"pub fn perimeter(&Self, f64) -> f64","parent":{"krate":0,"index":921},"children":[],"decl_id":null,"docs":" Total length of perimeter.\n","sig":null,"attributes":[{"value":"/ Total length of perimeter.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":190387,"byte_end":190417,"line_start":115,"line_end":115,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":931},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":191065,"byte_end":191072,"line_start":130,"line_end":130,"column_start":8,"column_end":15},"name":"winding","qualname":"::shape::Shape::winding","value":"pub fn winding(&Self, Point) -> i32","parent":{"krate":0,"index":921},"children":[],"decl_id":null,"docs":" The [winding number] of a point.","sig":null,"attributes":[{"value":"/ The [winding number] of a point.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":190511,"byte_end":190547,"line_start":119,"line_end":119,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":190552,"byte_end":190555,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ This method only produces meaningful results with closed shapes.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":190560,"byte_end":190628,"line_start":121,"line_end":121,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":190633,"byte_end":190636,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ The sign of the winding number is consistent with that of [`area`],","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":190641,"byte_end":190712,"line_start":123,"line_end":123,"column_start":5,"column_end":76}},{"value":"/ meaning it is +1 when the point is inside a positive area shape","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":190717,"byte_end":190784,"line_start":124,"line_end":124,"column_start":5,"column_end":72}},{"value":"/ and -1 when it is inside a negative area shape. Of course, greater","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":190789,"byte_end":190859,"line_start":125,"line_end":125,"column_start":5,"column_end":75}},{"value":"/ magnitude values are also possible when the shape is more complex.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":190864,"byte_end":190934,"line_start":126,"line_end":126,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":190939,"byte_end":190942,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ [`area`]: #tymethod.area","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":190947,"byte_end":190975,"line_start":128,"line_end":128,"column_start":5,"column_end":33}},{"value":"/ [winding number]: https://mathworld.wolfram.com/ContourWindingNumber.html","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":190980,"byte_end":191057,"line_start":129,"line_end":129,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":932},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":191273,"byte_end":191281,"line_start":137,"line_end":137,"column_start":8,"column_end":16},"name":"contains","qualname":"::shape::Shape::contains","value":"pub fn contains(&Self, Point) -> bool","parent":{"krate":0,"index":921},"children":[],"decl_id":null,"docs":" Returns `true` if the [`Point`] is inside this shape.","sig":null,"attributes":[{"value":"/ Returns `true` if the [`Point`] is inside this shape.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":191104,"byte_end":191161,"line_start":132,"line_end":132,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":191166,"byte_end":191169,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This is only meaningful for closed shapes.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":191174,"byte_end":191220,"line_start":134,"line_end":134,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":191225,"byte_end":191228,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ [`Point`]: struct.Point.html","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":191233,"byte_end":191265,"line_start":136,"line_end":136,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":933},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":191410,"byte_end":191422,"line_start":142,"line_end":142,"column_start":8,"column_end":20},"name":"bounding_box","qualname":"::shape::Shape::bounding_box","value":"pub fn bounding_box(&Self) -> Rect","parent":{"krate":0,"index":921},"children":[],"decl_id":null,"docs":" The smallest rectangle that encloses the shape.\n","sig":null,"attributes":[{"value":"/ The smallest rectangle that encloses the shape.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":191351,"byte_end":191402,"line_start":141,"line_end":141,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":934},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":191498,"byte_end":191505,"line_start":145,"line_end":145,"column_start":8,"column_end":15},"name":"as_line","qualname":"::shape::Shape::as_line","value":"pub fn as_line(&Self) -> Option<Line>","parent":{"krate":0,"index":921},"children":[],"decl_id":null,"docs":" If the shape is a line, make it available.\n","sig":null,"attributes":[{"value":"/ If the shape is a line, make it available.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":191444,"byte_end":191490,"line_start":144,"line_end":144,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":935},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":191614,"byte_end":191621,"line_start":150,"line_end":150,"column_start":8,"column_end":15},"name":"as_rect","qualname":"::shape::Shape::as_rect","value":"pub fn as_rect(&Self) -> Option<Rect>","parent":{"krate":0,"index":921},"children":[],"decl_id":null,"docs":" If the shape is a rectangle, make it available.\n","sig":null,"attributes":[{"value":"/ If the shape is a rectangle, make it available.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":191555,"byte_end":191606,"line_start":149,"line_end":149,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":936},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":191738,"byte_end":191753,"line_start":155,"line_end":155,"column_start":8,"column_end":23},"name":"as_rounded_rect","qualname":"::shape::Shape::as_rounded_rect","value":"pub fn as_rounded_rect(&Self) -> Option<RoundedRect>","parent":{"krate":0,"index":921},"children":[],"decl_id":null,"docs":" If the shape is a rounded rectangle, make it available.\n","sig":null,"attributes":[{"value":"/ If the shape is a rounded rectangle, make it available.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":191671,"byte_end":191730,"line_start":154,"line_end":154,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":937},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":191866,"byte_end":191875,"line_start":160,"line_end":160,"column_start":8,"column_end":17},"name":"as_circle","qualname":"::shape::Shape::as_circle","value":"pub fn as_circle(&Self) -> Option<Circle>","parent":{"krate":0,"index":921},"children":[],"decl_id":null,"docs":" If the shape is a circle, make it available.\n","sig":null,"attributes":[{"value":"/ If the shape is a circle, make it available.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":191810,"byte_end":191858,"line_start":159,"line_end":159,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":938},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":192231,"byte_end":192244,"line_start":170,"line_end":170,"column_start":8,"column_end":21},"name":"as_path_slice","qualname":"::shape::Shape::as_path_slice","value":"pub fn as_path_slice(&Self) -> Option<&[PathEl]>","parent":{"krate":0,"index":921},"children":[],"decl_id":null,"docs":" If the shape is stored as a slice of path elements, make\n that available.","sig":null,"attributes":[{"value":"/ If the shape is stored as a slice of path elements, make","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":191927,"byte_end":191987,"line_start":164,"line_end":164,"column_start":5,"column_end":65}},{"value":"/ that available.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":191992,"byte_end":192011,"line_start":165,"line_end":165,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":192016,"byte_end":192019,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ Note: when GAT's land, a method like `path_elements` would be","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":192024,"byte_end":192089,"line_start":167,"line_end":167,"column_start":5,"column_end":70}},{"value":"/ able to iterate through the slice with no extra allocation,","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":192094,"byte_end":192157,"line_start":168,"line_end":168,"column_start":5,"column_end":68}},{"value":"/ without making any assumption that storage is contiguous.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":192162,"byte_end":192223,"line_start":169,"line_end":169,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":1450},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":193841,"byte_end":193845,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Size","qualname":"::size::Size","value":"Size { width, height }","parent":null,"children":[{"krate":0,"index":1451},{"krate":0,"index":1452}],"decl_id":null,"docs":" A 2D size.\n","sig":null,"attributes":[{"value":"/ A 2D size.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":193695,"byte_end":193709,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":1451},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":193875,"byte_end":193880,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"width","qualname":"::size::Size::width","value":"f64","parent":{"krate":0,"index":1450},"children":[],"decl_id":null,"docs":" The width.\n","sig":null,"attributes":[{"value":"/ The width.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":193852,"byte_end":193866,"line_start":13,"line_end":13,"column_start":5,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":1452},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":193915,"byte_end":193921,"line_start":16,"line_end":16,"column_start":9,"column_end":15},"name":"height","qualname":"::size::Size::height","value":"f64","parent":{"krate":0,"index":1450},"children":[],"decl_id":null,"docs":" The height.\n","sig":null,"attributes":[{"value":"/ The height.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":193891,"byte_end":193906,"line_start":15,"line_end":15,"column_start":5,"column_end":20}}]},{"kind":"Const","id":{"krate":0,"index":972},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":193999,"byte_end":194003,"line_start":21,"line_end":21,"column_start":15,"column_end":19},"name":"ZERO","qualname":"::size::Size::ZERO","value":"Size","parent":{"krate":0,"index":971},"children":[],"decl_id":null,"docs":" A size with zero width or height.\n","sig":null,"attributes":[{"value":"/ A size with zero width or height.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":193947,"byte_end":193984,"line_start":20,"line_end":20,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":973},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":194131,"byte_end":194134,"line_start":25,"line_end":25,"column_start":18,"column_end":21},"name":"new","qualname":"<Size>::new","value":"pub const fn new(f64, f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Size` with the provided `width` and `height`.\n","sig":null,"attributes":[{"value":"/ Create a new `Size` with the provided `width` and `height`.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":194036,"byte_end":194099,"line_start":23,"line_end":23,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":194104,"byte_end":194113,"line_start":24,"line_end":24,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":974},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":194438,"byte_end":194446,"line_start":38,"line_end":38,"column_start":12,"column_end":20},"name":"max_side","qualname":"<Size>::max_side","value":"pub fn max_side(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Returns the max of `width` and `height`.","sig":null,"attributes":[{"value":"/ Returns the max of `width` and `height`.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":194212,"byte_end":194256,"line_start":29,"line_end":29,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":194261,"byte_end":194264,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":194269,"byte_end":194283,"line_start":31,"line_end":31,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":194288,"byte_end":194291,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":194296,"byte_end":194303,"line_start":33,"line_end":33,"column_start":5,"column_end":12}},{"value":"/ use kurbo::Size;","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":194308,"byte_end":194328,"line_start":34,"line_end":34,"column_start":5,"column_end":25}},{"value":"/ let size = Size::new(-10.5, 42.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":194333,"byte_end":194371,"line_start":35,"line_end":35,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(size.max_side(), 42.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":194376,"byte_end":194414,"line_start":36,"line_end":36,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":194419,"byte_end":194426,"line_start":37,"line_end":37,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":975},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":194736,"byte_end":194744,"line_start":51,"line_end":51,"column_start":12,"column_end":20},"name":"min_side","qualname":"<Size>::min_side","value":"pub fn min_side(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Returns the min of `width` and `height`.","sig":null,"attributes":[{"value":"/ Returns the min of `width` and `height`.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":194509,"byte_end":194553,"line_start":42,"line_end":42,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":194558,"byte_end":194561,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":194566,"byte_end":194580,"line_start":44,"line_end":44,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":194585,"byte_end":194588,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":194593,"byte_end":194600,"line_start":46,"line_end":46,"column_start":5,"column_end":12}},{"value":"/ use kurbo::Size;","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":194605,"byte_end":194625,"line_start":47,"line_end":47,"column_start":5,"column_end":25}},{"value":"/ let size = Size::new(-10.5, 42.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":194630,"byte_end":194668,"line_start":48,"line_end":48,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(size.min_side(), -10.5);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":194673,"byte_end":194712,"line_start":49,"line_end":49,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":194717,"byte_end":194724,"line_start":50,"line_end":50,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":976},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":194867,"byte_end":194871,"line_start":57,"line_end":57,"column_start":12,"column_end":16},"name":"area","qualname":"<Size>::area","value":"pub fn area(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The area covered by this size.\n","sig":null,"attributes":[{"value":"/ The area covered by this size.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":194807,"byte_end":194841,"line_start":55,"line_end":55,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":194846,"byte_end":194855,"line_start":56,"line_end":56,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":977},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":195066,"byte_end":195074,"line_start":65,"line_end":65,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Size>::is_empty","value":"pub fn is_empty(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether this size has zero area.","sig":null,"attributes":[{"value":"/ Whether this size has zero area.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":194931,"byte_end":194967,"line_start":61,"line_end":61,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":194972,"byte_end":194975,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ Note: a size with negative area is not considered empty.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":194980,"byte_end":195040,"line_start":63,"line_end":63,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":195045,"byte_end":195054,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":978},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":195464,"byte_end":195469,"line_start":81,"line_end":81,"column_start":12,"column_end":17},"name":"clamp","qualname":"<Size>::clamp","value":"pub fn clamp(Self, Size, Size) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new size bounded by `min` and `max.`","sig":null,"attributes":[{"value":"/ Returns a new size bounded by `min` and `max.`","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":195129,"byte_end":195179,"line_start":69,"line_end":69,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":195184,"byte_end":195187,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":195192,"byte_end":195206,"line_start":71,"line_end":71,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":195211,"byte_end":195214,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":195219,"byte_end":195226,"line_start":73,"line_end":73,"column_start":5,"column_end":12}},{"value":"/ use kurbo::Size;","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":195231,"byte_end":195251,"line_start":74,"line_end":74,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":195256,"byte_end":195259,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ let this = Size::new(0., 100.);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":195264,"byte_end":195299,"line_start":76,"line_end":76,"column_start":5,"column_end":40}},{"value":"/ let min = Size::new(10., 10.,);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":195304,"byte_end":195339,"line_start":77,"line_end":77,"column_start":5,"column_end":40}},{"value":"/ let max = Size::new(50., 50.);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":195344,"byte_end":195378,"line_start":78,"line_end":78,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(this.clamp(min, max), Size::new(10., 50.))","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":195383,"byte_end":195440,"line_start":79,"line_end":79,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":195445,"byte_end":195452,"line_start":80,"line_end":80,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":979},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":195854,"byte_end":195861,"line_start":92,"line_end":92,"column_start":18,"column_end":25},"name":"to_vec2","qualname":"<Size>::to_vec2","value":"pub const fn to_vec2(Self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Convert this size into a [`Vec2`], with `width` mapped to `x` and `height`\n mapped to `y`.","sig":null,"attributes":[{"value":"/ Convert this size into a [`Vec2`], with `width` mapped to `x` and `height`","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":195678,"byte_end":195756,"line_start":87,"line_end":87,"column_start":5,"column_end":83}},{"value":"/ mapped to `y`.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":195761,"byte_end":195779,"line_start":88,"line_end":88,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":195784,"byte_end":195787,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ [`Vec2`]: struct.Vec2.html","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":195792,"byte_end":195822,"line_start":90,"line_end":90,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":195827,"byte_end":195836,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":980},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":196407,"byte_end":196412,"line_start":111,"line_end":111,"column_start":12,"column_end":17},"name":"round","qualname":"<Size>::round","value":"pub fn round(Self) -> Size","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Size`,\n with `width` and `height` rounded to the nearest integer.","sig":null,"attributes":[{"value":"/ Returns a new `Size`,","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":195932,"byte_end":195957,"line_start":96,"line_end":96,"column_start":5,"column_end":30}},{"value":"/ with `width` and `height` rounded to the nearest integer.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":195962,"byte_end":196023,"line_start":97,"line_end":97,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":196028,"byte_end":196031,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":196036,"byte_end":196050,"line_start":99,"line_end":99,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":196055,"byte_end":196058,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":196063,"byte_end":196070,"line_start":101,"line_end":101,"column_start":5,"column_end":12}},{"value":"/ use kurbo::Size;","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":196075,"byte_end":196095,"line_start":102,"line_end":102,"column_start":5,"column_end":25}},{"value":"/ let size_pos = Size::new(3.3, 3.6).round();","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":196100,"byte_end":196147,"line_start":103,"line_end":103,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(size_pos.width, 3.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":196152,"byte_end":196188,"line_start":104,"line_end":104,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(size_pos.height, 4.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":196193,"byte_end":196230,"line_start":105,"line_end":105,"column_start":5,"column_end":42}},{"value":"/ let size_neg = Size::new(-3.3, -3.6).round();","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":196235,"byte_end":196284,"line_start":106,"line_end":106,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(size_neg.width, -3.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":196289,"byte_end":196326,"line_start":107,"line_end":107,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(size_neg.height, -4.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":196331,"byte_end":196369,"line_start":108,"line_end":108,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":196374,"byte_end":196381,"line_start":109,"line_end":109,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":196386,"byte_end":196395,"line_start":110,"line_end":110,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":981},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":197019,"byte_end":197023,"line_start":131,"line_end":131,"column_start":12,"column_end":16},"name":"ceil","qualname":"<Size>::ceil","value":"pub fn ceil(Self) -> Size","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Size`,\n with `width` and `height` rounded up to the nearest integer,\n unless they are already an integer.","sig":null,"attributes":[{"value":"/ Returns a new `Size`,","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":196499,"byte_end":196524,"line_start":115,"line_end":115,"column_start":5,"column_end":30}},{"value":"/ with `width` and `height` rounded up to the nearest integer,","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":196529,"byte_end":196593,"line_start":116,"line_end":116,"column_start":5,"column_end":69}},{"value":"/ unless they are already an integer.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":196598,"byte_end":196637,"line_start":117,"line_end":117,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":196642,"byte_end":196645,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":196650,"byte_end":196664,"line_start":119,"line_end":119,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":196669,"byte_end":196672,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":196677,"byte_end":196684,"line_start":121,"line_end":121,"column_start":5,"column_end":12}},{"value":"/ use kurbo::Size;","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":196689,"byte_end":196709,"line_start":122,"line_end":122,"column_start":5,"column_end":25}},{"value":"/ let size_pos = Size::new(3.3, 3.6).ceil();","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":196714,"byte_end":196760,"line_start":123,"line_end":123,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(size_pos.width, 4.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":196765,"byte_end":196801,"line_start":124,"line_end":124,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(size_pos.height, 4.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":196806,"byte_end":196843,"line_start":125,"line_end":125,"column_start":5,"column_end":42}},{"value":"/ let size_neg = Size::new(-3.3, -3.6).ceil();","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":196848,"byte_end":196896,"line_start":126,"line_end":126,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(size_neg.width, -3.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":196901,"byte_end":196938,"line_start":127,"line_end":127,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(size_neg.height, -3.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":196943,"byte_end":196981,"line_start":128,"line_end":128,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":196986,"byte_end":196993,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":196998,"byte_end":197007,"line_start":130,"line_end":130,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":982},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":197632,"byte_end":197637,"line_start":151,"line_end":151,"column_start":12,"column_end":17},"name":"floor","qualname":"<Size>::floor","value":"pub fn floor(Self) -> Size","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Size`,\n with `width` and `height` rounded down to the nearest integer,\n unless they are already an integer.","sig":null,"attributes":[{"value":"/ Returns a new `Size`,","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":197108,"byte_end":197133,"line_start":135,"line_end":135,"column_start":5,"column_end":30}},{"value":"/ with `width` and `height` rounded down to the nearest integer,","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":197138,"byte_end":197204,"line_start":136,"line_end":136,"column_start":5,"column_end":71}},{"value":"/ unless they are already an integer.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":197209,"byte_end":197248,"line_start":137,"line_end":137,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":197253,"byte_end":197256,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":197261,"byte_end":197275,"line_start":139,"line_end":139,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":197280,"byte_end":197283,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":197288,"byte_end":197295,"line_start":141,"line_end":141,"column_start":5,"column_end":12}},{"value":"/ use kurbo::Size;","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":197300,"byte_end":197320,"line_start":142,"line_end":142,"column_start":5,"column_end":25}},{"value":"/ let size_pos = Size::new(3.3, 3.6).floor();","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":197325,"byte_end":197372,"line_start":143,"line_end":143,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(size_pos.width, 3.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":197377,"byte_end":197413,"line_start":144,"line_end":144,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(size_pos.height, 3.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":197418,"byte_end":197455,"line_start":145,"line_end":145,"column_start":5,"column_end":42}},{"value":"/ let size_neg = Size::new(-3.3, -3.6).floor();","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":197460,"byte_end":197509,"line_start":146,"line_end":146,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(size_neg.width, -4.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":197514,"byte_end":197551,"line_start":147,"line_end":147,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(size_neg.height, -4.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":197556,"byte_end":197594,"line_start":148,"line_end":148,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":197599,"byte_end":197606,"line_start":149,"line_end":149,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":197611,"byte_end":197620,"line_start":150,"line_end":150,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":983},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":198260,"byte_end":198266,"line_start":171,"line_end":171,"column_start":12,"column_end":18},"name":"expand","qualname":"<Size>::expand","value":"pub fn expand(Self) -> Size","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Size`,\n with `width` and `height` rounded away from zero to the nearest integer,\n unless they are already an integer.","sig":null,"attributes":[{"value":"/ Returns a new `Size`,","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":197724,"byte_end":197749,"line_start":155,"line_end":155,"column_start":5,"column_end":30}},{"value":"/ with `width` and `height` rounded away from zero to the nearest integer,","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":197754,"byte_end":197830,"line_start":156,"line_end":156,"column_start":5,"column_end":81}},{"value":"/ unless they are already an integer.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":197835,"byte_end":197874,"line_start":157,"line_end":157,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":197879,"byte_end":197882,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":197887,"byte_end":197901,"line_start":159,"line_end":159,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":197906,"byte_end":197909,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":197914,"byte_end":197921,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"/ use kurbo::Size;","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":197926,"byte_end":197946,"line_start":162,"line_end":162,"column_start":5,"column_end":25}},{"value":"/ let size_pos = Size::new(3.3, 3.6).expand();","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":197951,"byte_end":197999,"line_start":163,"line_end":163,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(size_pos.width, 4.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":198004,"byte_end":198040,"line_start":164,"line_end":164,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(size_pos.height, 4.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":198045,"byte_end":198082,"line_start":165,"line_end":165,"column_start":5,"column_end":42}},{"value":"/ let size_neg = Size::new(-3.3, -3.6).expand();","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":198087,"byte_end":198137,"line_start":166,"line_end":166,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(size_neg.width, -4.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":198142,"byte_end":198179,"line_start":167,"line_end":167,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(size_neg.height, -4.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":198184,"byte_end":198222,"line_start":168,"line_end":168,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":198227,"byte_end":198234,"line_start":169,"line_end":169,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":198239,"byte_end":198248,"line_start":170,"line_end":170,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":984},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":198889,"byte_end":198894,"line_start":191,"line_end":191,"column_start":12,"column_end":17},"name":"trunc","qualname":"<Size>::trunc","value":"pub fn trunc(Self) -> Size","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Size`,\n with `width` and `height` rounded down towards zero the nearest integer,\n unless they are already an integer.","sig":null,"attributes":[{"value":"/ Returns a new `Size`,","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":198355,"byte_end":198380,"line_start":175,"line_end":175,"column_start":5,"column_end":30}},{"value":"/ with `width` and `height` rounded down towards zero the nearest integer,","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":198385,"byte_end":198461,"line_start":176,"line_end":176,"column_start":5,"column_end":81}},{"value":"/ unless they are already an integer.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":198466,"byte_end":198505,"line_start":177,"line_end":177,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":198510,"byte_end":198513,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":198518,"byte_end":198532,"line_start":179,"line_end":179,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":198537,"byte_end":198540,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":198545,"byte_end":198552,"line_start":181,"line_end":181,"column_start":5,"column_end":12}},{"value":"/ use kurbo::Size;","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":198557,"byte_end":198577,"line_start":182,"line_end":182,"column_start":5,"column_end":25}},{"value":"/ let size_pos = Size::new(3.3, 3.6).trunc();","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":198582,"byte_end":198629,"line_start":183,"line_end":183,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(size_pos.width, 3.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":198634,"byte_end":198670,"line_start":184,"line_end":184,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(size_pos.height, 3.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":198675,"byte_end":198712,"line_start":185,"line_end":185,"column_start":5,"column_end":42}},{"value":"/ let size_neg = Size::new(-3.3, -3.6).trunc();","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":198717,"byte_end":198766,"line_start":186,"line_end":186,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(size_neg.width, -3.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":198771,"byte_end":198808,"line_start":187,"line_end":187,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(size_neg.height, -3.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":198813,"byte_end":198851,"line_start":188,"line_end":188,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":198856,"byte_end":198863,"line_start":189,"line_end":189,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":198868,"byte_end":198877,"line_start":190,"line_end":190,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":985},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":199217,"byte_end":199229,"line_start":199,"line_end":199,"column_start":12,"column_end":24},"name":"aspect_ratio","qualname":"<Size>::aspect_ratio","value":"pub fn aspect_ratio(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Returns the aspect ratio of a rectangle with the given size.","sig":null,"attributes":[{"value":"/ Returns the aspect ratio of a rectangle with the given size.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":198981,"byte_end":199045,"line_start":195,"line_end":195,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":199050,"byte_end":199053,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ If the width is `0`, the output will be `sign(self.height) * infinity`. If The width and","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":199058,"byte_end":199150,"line_start":197,"line_end":197,"column_start":5,"column_end":97}},{"value":"/ height are `0`, then the output will be `NaN`.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":199155,"byte_end":199205,"line_start":198,"line_end":198,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":986},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":199429,"byte_end":199436,"line_start":207,"line_end":207,"column_start":18,"column_end":25},"name":"to_rect","qualname":"<Size>::to_rect","value":"pub const fn to_rect(Self) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" Convert this `Size` into a [`Rect`] with origin `(0.0, 0.0)`.","sig":null,"attributes":[{"value":"/ Convert this `Size` into a [`Rect`] with origin `(0.0, 0.0)`.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":199289,"byte_end":199354,"line_start":203,"line_end":203,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":199359,"byte_end":199362,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ [`Rect`]: struct.Rect.html","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":199367,"byte_end":199397,"line_start":205,"line_end":205,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":199402,"byte_end":199411,"line_start":206,"line_end":206,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":987},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":199709,"byte_end":199724,"line_start":216,"line_end":216,"column_start":12,"column_end":27},"name":"to_rounded_rect","qualname":"<Size>::to_rounded_rect","value":"pub fn to_rounded_rect(Self, f64) -> RoundedRect","parent":null,"children":[],"decl_id":null,"docs":" Convert this `Size` into a [`RoundedRect`] with origin `(0.0, 0.0)` and\n the provided corner radius.","sig":null,"attributes":[{"value":"/ Convert this `Size` into a [`RoundedRect`] with origin `(0.0, 0.0)` and","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":199515,"byte_end":199590,"line_start":211,"line_end":211,"column_start":5,"column_end":80}},{"value":"/ the provided corner radius.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":199595,"byte_end":199626,"line_start":212,"line_end":212,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":199631,"byte_end":199634,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ [`RoundedRect`]: struct.RoundedRect.html","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":199639,"byte_end":199683,"line_start":214,"line_end":214,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":199688,"byte_end":199697,"line_start":215,"line_end":215,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1462},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/svg.rs","byte_start":203339,"byte_end":203345,"line_start":15,"line_end":15,"column_start":12,"column_end":18},"name":"SvgArc","qualname":"::svg::SvgArc","value":"SvgArc { from, to, radii, x_rotation, large_arc, sweep }","parent":null,"children":[{"krate":0,"index":1463},{"krate":0,"index":1464},{"krate":0,"index":1465},{"krate":0,"index":1466},{"krate":0,"index":1467},{"krate":0,"index":1468}],"decl_id":null,"docs":" A single SVG arc segment.\n","sig":null,"attributes":[{"value":"/ A single SVG arc segment.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/svg.rs","byte_start":203191,"byte_end":203220,"line_start":12,"line_end":12,"column_start":1,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":1463},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/svg.rs","byte_start":203387,"byte_end":203391,"line_start":17,"line_end":17,"column_start":9,"column_end":13},"name":"from","qualname":"::svg::SvgArc::from","value":"point::Point","parent":{"krate":0,"index":1462},"children":[],"decl_id":null,"docs":" The arc's start point.\n","sig":null,"attributes":[{"value":"/ The arc's start point.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/svg.rs","byte_start":203352,"byte_end":203378,"line_start":16,"line_end":16,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":1464},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/svg.rs","byte_start":203437,"byte_end":203439,"line_start":19,"line_end":19,"column_start":9,"column_end":11},"name":"to","qualname":"::svg::SvgArc::to","value":"point::Point","parent":{"krate":0,"index":1462},"children":[],"decl_id":null,"docs":" The arc's end point.\n","sig":null,"attributes":[{"value":"/ The arc's end point.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/svg.rs","byte_start":203404,"byte_end":203428,"line_start":18,"line_end":18,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":1465},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/svg.rs","byte_start":203591,"byte_end":203596,"line_start":22,"line_end":22,"column_start":9,"column_end":14},"name":"radii","qualname":"::svg::SvgArc::radii","value":"vec2::Vec2","parent":{"krate":0,"index":1462},"children":[],"decl_id":null,"docs":" The arc's radii, where the vector's x-component is the radius in the\n positive x direction after applying `x_rotation`.\n","sig":null,"attributes":[{"value":"/ The arc's radii, where the vector's x-component is the radius in the","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/svg.rs","byte_start":203452,"byte_end":203524,"line_start":20,"line_end":20,"column_start":5,"column_end":77}},{"value":"/ positive x direction after applying `x_rotation`.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/svg.rs","byte_start":203529,"byte_end":203582,"line_start":21,"line_end":21,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":1466},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/svg.rs","byte_start":203661,"byte_end":203671,"line_start":24,"line_end":24,"column_start":9,"column_end":19},"name":"x_rotation","qualname":"::svg::SvgArc::x_rotation","value":"f64","parent":{"krate":0,"index":1462},"children":[],"decl_id":null,"docs":" How much the arc is rotated, in radians.\n","sig":null,"attributes":[{"value":"/ How much the arc is rotated, in radians.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/svg.rs","byte_start":203608,"byte_end":203652,"line_start":23,"line_end":23,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":1467},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/svg.rs","byte_start":203744,"byte_end":203753,"line_start":26,"line_end":26,"column_start":9,"column_end":18},"name":"large_arc","qualname":"::svg::SvgArc::large_arc","value":"bool","parent":{"krate":0,"index":1462},"children":[],"decl_id":null,"docs":" Does this arc sweep through more than π radians?\n","sig":null,"attributes":[{"value":"/ Does this arc sweep through more than π radians?","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/svg.rs","byte_start":203682,"byte_end":203735,"line_start":25,"line_end":25,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":1468},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/svg.rs","byte_start":203839,"byte_end":203844,"line_start":28,"line_end":28,"column_start":9,"column_end":14},"name":"sweep","qualname":"::svg::SvgArc::sweep","value":"bool","parent":{"krate":0,"index":1462},"children":[],"decl_id":null,"docs":" Determines if the arc should begin moving at positive angles.\n","sig":null,"attributes":[{"value":"/ Determines if the arc should begin moving at positive angles.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/svg.rs","byte_start":203765,"byte_end":203830,"line_start":27,"line_end":27,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1040},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/svg.rs","byte_start":203972,"byte_end":203990,"line_start":34,"line_end":34,"column_start":12,"column_end":30},"name":"from_path_segments","qualname":"<BezPath>::from_path_segments","value":"pub fn from_path_segments<impl Iterator<Item = PathSeg>: Iterator<Item =\n                          PathSeg>>(impl Iterator<Item = PathSeg>) -> BezPath","parent":null,"children":[],"decl_id":null,"docs":" Create a BezPath with segments corresponding to the sequence of\n `PathSeg`s\n","sig":null,"attributes":[{"value":"/ Create a BezPath with segments corresponding to the sequence of","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/svg.rs","byte_start":203874,"byte_end":203941,"line_start":32,"line_end":32,"column_start":5,"column_end":72}},{"value":"/ `PathSeg`s","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/svg.rs","byte_start":203946,"byte_end":203960,"line_start":33,"line_end":33,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":1042},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/svg.rs","byte_start":204911,"byte_end":204917,"line_start":59,"line_end":59,"column_start":12,"column_end":18},"name":"to_svg","qualname":"<BezPath>::to_svg","value":"pub fn to_svg(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Convert the path to an SVG path string representation.","sig":null,"attributes":[{"value":"/ Convert the path to an SVG path string representation.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/svg.rs","byte_start":204687,"byte_end":204745,"line_start":55,"line_end":55,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/svg.rs","byte_start":204750,"byte_end":204753,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ The current implementation doesn't take any special care to produce a","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/svg.rs","byte_start":204758,"byte_end":204831,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ short string (reducing precision, using relative movement).","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/svg.rs","byte_start":204836,"byte_end":204899,"line_start":58,"line_end":58,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1043},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/svg.rs","byte_start":205154,"byte_end":205162,"line_start":66,"line_end":66,"column_start":12,"column_end":20},"name":"write_to","qualname":"<BezPath>::write_to","value":"pub fn write_to<W: Write>(&Self, W) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Write the SVG representation of this path to the provided buffer.\n","sig":null,"attributes":[{"value":"/ Write the SVG representation of this path to the provided buffer.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/svg.rs","byte_start":205073,"byte_end":205142,"line_start":65,"line_end":65,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1045},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/svg.rs","byte_start":206111,"byte_end":206119,"line_start":89,"line_end":89,"column_start":12,"column_end":20},"name":"from_svg","qualname":"<BezPath>::from_svg","value":"pub fn from_svg(&str) -> Result<BezPath, SvgParseError>","parent":null,"children":[],"decl_id":null,"docs":" Try to parse a bezier path from an SVG path element.","sig":null,"attributes":[{"value":"/ Try to parse a bezier path from an SVG path element.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/svg.rs","byte_start":205832,"byte_end":205888,"line_start":84,"line_end":84,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/svg.rs","byte_start":205893,"byte_end":205896,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ This is implemented on a best-effort basis, intended for cases where the","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/svg.rs","byte_start":205901,"byte_end":205977,"line_start":86,"line_end":86,"column_start":5,"column_end":81}},{"value":"/ user controls the source of paths, and is not intended as a replacement","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/svg.rs","byte_start":205982,"byte_end":206057,"line_start":87,"line_end":87,"column_start":5,"column_end":80}},{"value":"/ for a general, robust SVG parser.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/svg.rs","byte_start":206062,"byte_end":206099,"line_start":88,"line_end":88,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1475},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/svg.rs","byte_start":211739,"byte_end":211744,"line_start":233,"line_end":233,"column_start":5,"column_end":10},"name":"Wrong","qualname":"::svg::SvgParseError::Wrong","value":"SvgParseError::Wrong","parent":{"krate":0,"index":1474},"children":[],"decl_id":null,"docs":" A number was expected.\n","sig":null,"attributes":[{"value":"/ A number was expected.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/svg.rs","byte_start":211708,"byte_end":211734,"line_start":232,"line_end":232,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1477},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/svg.rs","byte_start":211810,"byte_end":211823,"line_start":235,"line_end":235,"column_start":5,"column_end":18},"name":"UnexpectedEof","qualname":"::svg::SvgParseError::UnexpectedEof","value":"SvgParseError::UnexpectedEof","parent":{"krate":0,"index":1474},"children":[],"decl_id":null,"docs":" The input string ended while still expecting input.\n","sig":null,"attributes":[{"value":"/ The input string ended while still expecting input.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/svg.rs","byte_start":211750,"byte_end":211805,"line_start":234,"line_end":234,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1479},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/svg.rs","byte_start":211876,"byte_end":211890,"line_start":237,"line_end":237,"column_start":5,"column_end":19},"name":"UnknownCommand","qualname":"::svg::SvgParseError::UnknownCommand","value":"SvgParseError::UnknownCommand(char)","parent":{"krate":0,"index":1474},"children":[],"decl_id":null,"docs":" Encountered an unknown command letter.\n","sig":null,"attributes":[{"value":"/ Encountered an unknown command letter.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/svg.rs","byte_start":211829,"byte_end":211871,"line_start":236,"line_end":236,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":1474},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/svg.rs","byte_start":211688,"byte_end":211701,"line_start":231,"line_end":231,"column_start":10,"column_end":23},"name":"SvgParseError","qualname":"::svg::SvgParseError","value":"pub enum SvgParseError {\n\n    /// A number was expected.\n    Wrong,\n\n    /// The input string ended while still expecting input.\n    UnexpectedEof,\n\n    /// Encountered an unknown command letter.\n    UnknownCommand(char),\n}","parent":null,"children":[{"krate":0,"index":1475},{"krate":0,"index":1477},{"krate":0,"index":1479}],"decl_id":null,"docs":" An error which can be returned when parsing an SVG.\n","sig":null,"attributes":[{"value":"/ An error which can be returned when parsing an SVG.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/svg.rs","byte_start":211606,"byte_end":211661,"line_start":229,"line_end":229,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1070},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/svg.rs","byte_start":216180,"byte_end":216196,"line_start":390,"line_end":390,"column_start":12,"column_end":28},"name":"is_straight_line","qualname":"<SvgArc>::is_straight_line","value":"pub fn is_straight_line(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks that arc is actually a straight line.","sig":null,"attributes":[{"value":"/ Checks that arc is actually a straight line.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/svg.rs","byte_start":216056,"byte_end":216104,"line_start":387,"line_end":387,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/svg.rs","byte_start":216109,"byte_end":216112,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ In this case, it can be replaced with a LineTo.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/svg.rs","byte_start":216117,"byte_end":216168,"line_start":389,"line_end":389,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1072},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/svg.rs","byte_start":216445,"byte_end":216457,"line_start":399,"line_end":399,"column_start":12,"column_end":24},"name":"from_svg_arc","qualname":"<Arc>::from_svg_arc","value":"pub fn from_svg_arc(&SvgArc) -> Option<Arc>","parent":null,"children":[],"decl_id":null,"docs":" Creates an `Arc` from a `SvgArc`.","sig":null,"attributes":[{"value":"/ Creates an `Arc` from a `SvgArc`.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/svg.rs","byte_start":216327,"byte_end":216364,"line_start":396,"line_end":396,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/svg.rs","byte_start":216369,"byte_end":216372,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if `arc` is actually a straight line.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/svg.rs","byte_start":216377,"byte_end":216433,"line_start":398,"line_end":398,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":1484},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":225161,"byte_end":225175,"line_start":38,"line_end":38,"column_start":12,"column_end":26},"name":"TranslateScale","qualname":"::translate_scale::TranslateScale","value":"TranslateScale {  }","parent":null,"children":[{"krate":0,"index":1485},{"krate":0,"index":1486}],"decl_id":null,"docs":" A transformation including scaling and translation.","sig":null,"attributes":[{"value":"/ A transformation including scaling and translation.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":223851,"byte_end":223906,"line_start":7,"line_end":7,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":223907,"byte_end":223910,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ If the translation is `(x, y)` and the scale is `s`, then this","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":223911,"byte_end":223977,"line_start":9,"line_end":9,"column_start":1,"column_end":67}},{"value":"/ transformation represents this augmented matrix:","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":223978,"byte_end":224030,"line_start":10,"line_end":10,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":224031,"byte_end":224034,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":224035,"byte_end":224046,"line_start":12,"line_end":12,"column_start":1,"column_end":12}},{"value":"/ | s 0 x |","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":224047,"byte_end":224060,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/ | 0 s y |","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":224061,"byte_end":224074,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/ | 0 0 1 |","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":224075,"byte_end":224088,"line_start":15,"line_end":15,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":224089,"byte_end":224096,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":224097,"byte_end":224100,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ See [`Affine`](struct.Affine.html) for more details about the","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":224101,"byte_end":224166,"line_start":18,"line_end":18,"column_start":1,"column_end":66}},{"value":"/ equivalence with augmented matrices.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":224167,"byte_end":224207,"line_start":19,"line_end":19,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":224208,"byte_end":224211,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Various multiplication ops are defined, and these are all defined","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":224212,"byte_end":224281,"line_start":21,"line_end":21,"column_start":1,"column_end":70}},{"value":"/ to be consistent with matrix multiplication. Therefore,","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":224282,"byte_end":224341,"line_start":22,"line_end":22,"column_start":1,"column_end":60}},{"value":"/ `TranslateScale * Point` is defined but not the other way around.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":224342,"byte_end":224411,"line_start":23,"line_end":23,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":224412,"byte_end":224415,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Also note that multiplication is not commutative. Thus,","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":224416,"byte_end":224475,"line_start":25,"line_end":25,"column_start":1,"column_end":60}},{"value":"/ `TranslateScale::scale(2.0) * TranslateScale::translate(Vec2::new(1.0, 0.0))`","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":224476,"byte_end":224557,"line_start":26,"line_end":26,"column_start":1,"column_end":82}},{"value":"/ has a translation of (2, 0), while","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":224558,"byte_end":224596,"line_start":27,"line_end":27,"column_start":1,"column_end":39}},{"value":"/ `TranslateScale::translate(Vec2::new(1.0, 0.0)) * TranslateScale::scale(2.0)`","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":224597,"byte_end":224678,"line_start":28,"line_end":28,"column_start":1,"column_end":82}},{"value":"/ has a translation of (1, 0). (Both have a scale of 2; also note that","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":224679,"byte_end":224751,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ the first case can be written","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":224752,"byte_end":224785,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/ `2.0 * TranslateScale::translate(Vec2::new(1.0, 0.0))` as this case","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":224786,"byte_end":224857,"line_start":31,"line_end":31,"column_start":1,"column_end":72}},{"value":"/ has an implicit conversion).","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":224858,"byte_end":224890,"line_start":32,"line_end":32,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":224891,"byte_end":224894,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ This transformation is less powerful than `Affine`, but can be applied","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":224895,"byte_end":224969,"line_start":34,"line_end":34,"column_start":1,"column_end":75}},{"value":"/ to more primitives, especially including [`Rect`](struct.Rect.html).","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":224970,"byte_end":225042,"line_start":35,"line_end":35,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1092},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":225337,"byte_end":225340,"line_start":46,"line_end":46,"column_start":18,"column_end":21},"name":"new","qualname":"<TranslateScale>::new","value":"pub const fn new(Vec2, f64) -> TranslateScale","parent":null,"children":[],"decl_id":null,"docs":" Create a new transformation from translation and scale.\n","sig":null,"attributes":[{"value":"/ Create a new transformation from translation and scale.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":225246,"byte_end":225305,"line_start":44,"line_end":44,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":225310,"byte_end":225319,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1093},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":225529,"byte_end":225534,"line_start":52,"line_end":52,"column_start":18,"column_end":23},"name":"scale","qualname":"<TranslateScale>::scale","value":"pub const fn scale(f64) -> TranslateScale","parent":null,"children":[],"decl_id":null,"docs":" Create a new transformation with scale only.\n","sig":null,"attributes":[{"value":"/ Create a new transformation with scale only.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":225449,"byte_end":225497,"line_start":50,"line_end":50,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":225502,"byte_end":225511,"line_start":51,"line_end":51,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1094},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":225703,"byte_end":225712,"line_start":58,"line_end":58,"column_start":18,"column_end":27},"name":"translate","qualname":"<TranslateScale>::translate","value":"pub const fn translate(Vec2) -> TranslateScale","parent":null,"children":[],"decl_id":null,"docs":" Create a new transformation with translation only.\n","sig":null,"attributes":[{"value":"/ Create a new transformation with translation only.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":225617,"byte_end":225671,"line_start":56,"line_end":56,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":225676,"byte_end":225685,"line_start":57,"line_end":57,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1095},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":225857,"byte_end":225865,"line_start":63,"line_end":63,"column_start":12,"column_end":20},"name":"as_tuple","qualname":"<TranslateScale>::as_tuple","value":"pub fn as_tuple(Self) -> (Vec2, f64)","parent":null,"children":[],"decl_id":null,"docs":" Decompose transformation into translation and scale.\n","sig":null,"attributes":[{"value":"/ Decompose transformation into translation and scale.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":225789,"byte_end":225845,"line_start":62,"line_end":62,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1096},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":226219,"byte_end":226226,"line_start":74,"line_end":74,"column_start":12,"column_end":19},"name":"inverse","qualname":"<TranslateScale>::inverse","value":"pub fn inverse(Self) -> TranslateScale","parent":null,"children":[],"decl_id":null,"docs":" Compute the inverse transform.","sig":null,"attributes":[{"value":"/ Compute the inverse transform.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":225939,"byte_end":225973,"line_start":67,"line_end":67,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":225978,"byte_end":225981,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ Multiplying a transform with its inverse (either on the","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":225986,"byte_end":226045,"line_start":69,"line_end":69,"column_start":5,"column_end":64}},{"value":"/ left or right) results in the identity transform","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":226050,"byte_end":226102,"line_start":70,"line_end":70,"column_start":5,"column_end":57}},{"value":"/ (modulo floating point rounding errors).","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":226107,"byte_end":226151,"line_start":71,"line_end":71,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":226156,"byte_end":226159,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Produces NaN values when scale is zero.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":226164,"byte_end":226207,"line_start":73,"line_end":73,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":1492},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":231696,"byte_end":231700,"line_start":16,"line_end":16,"column_start":12,"column_end":16},"name":"Vec2","qualname":"::vec2::Vec2","value":"Vec2 { x, y }","parent":null,"children":[{"krate":0,"index":1493},{"krate":0,"index":1494}],"decl_id":null,"docs":" A 2D vector.","sig":null,"attributes":[{"value":"/ A 2D vector.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":231338,"byte_end":231354,"line_start":9,"line_end":9,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":231355,"byte_end":231358,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is intended primarily for a vector in the mathematical sense,","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":231359,"byte_end":231429,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/ but it can be interpreted as a translation, and converted to and","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":231430,"byte_end":231498,"line_start":12,"line_end":12,"column_start":1,"column_end":69}},{"value":"/ from a point (vector relative to the origin) and size.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":231499,"byte_end":231557,"line_start":13,"line_end":13,"column_start":1,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":1493},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":231737,"byte_end":231738,"line_start":18,"line_end":18,"column_start":9,"column_end":10},"name":"x","qualname":"::vec2::Vec2::x","value":"f64","parent":{"krate":0,"index":1492},"children":[],"decl_id":null,"docs":" The x-coordinate.\n","sig":null,"attributes":[{"value":"/ The x-coordinate.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":231707,"byte_end":231728,"line_start":17,"line_end":17,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":1494},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":231779,"byte_end":231780,"line_start":20,"line_end":20,"column_start":9,"column_end":10},"name":"y","qualname":"::vec2::Vec2::y","value":"f64","parent":{"krate":0,"index":1492},"children":[],"decl_id":null,"docs":" The y-coordinate.\n","sig":null,"attributes":[{"value":"/ The y-coordinate.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":231749,"byte_end":231770,"line_start":19,"line_end":19,"column_start":5,"column_end":26}}]},{"kind":"Const","id":{"krate":0,"index":1160},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":231843,"byte_end":231847,"line_start":25,"line_end":25,"column_start":15,"column_end":19},"name":"ZERO","qualname":"::vec2::Vec2::ZERO","value":"Vec2","parent":{"krate":0,"index":1159},"children":[],"decl_id":null,"docs":" The vector (0, 0).\n","sig":null,"attributes":[{"value":"/ The vector (0, 0).","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":231806,"byte_end":231828,"line_start":24,"line_end":24,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1161},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":231936,"byte_end":231939,"line_start":29,"line_end":29,"column_start":18,"column_end":21},"name":"new","qualname":"<Vec2>::new","value":"pub const fn new(f64, f64) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Create a new vector.\n","sig":null,"attributes":[{"value":"/ Create a new vector.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":231880,"byte_end":231904,"line_start":27,"line_end":27,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":231909,"byte_end":231918,"line_start":28,"line_end":28,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1162},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":232070,"byte_end":232078,"line_start":35,"line_end":35,"column_start":18,"column_end":26},"name":"to_point","qualname":"<Vec2>::to_point","value":"pub const fn to_point(Self) -> Point","parent":null,"children":[],"decl_id":null,"docs":" Convert this vector into a `Point`.\n","sig":null,"attributes":[{"value":"/ Convert this vector into a `Point`.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":231999,"byte_end":232038,"line_start":33,"line_end":33,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":232043,"byte_end":232052,"line_start":34,"line_end":34,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1163},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":232212,"byte_end":232219,"line_start":41,"line_end":41,"column_start":18,"column_end":25},"name":"to_size","qualname":"<Vec2>::to_size","value":"pub const fn to_size(Self) -> Size","parent":null,"children":[],"decl_id":null,"docs":" Convert this vector into a `Size`.\n","sig":null,"attributes":[{"value":"/ Convert this vector into a `Size`.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":232142,"byte_end":232180,"line_start":39,"line_end":39,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":232185,"byte_end":232194,"line_start":40,"line_end":40,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1165},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":232477,"byte_end":232480,"line_start":52,"line_end":52,"column_start":12,"column_end":15},"name":"dot","qualname":"<Vec2>::dot","value":"pub fn dot(Self, Vec2) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Dot product of two vectors.\n","sig":null,"attributes":[{"value":"/ Dot product of two vectors.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":232420,"byte_end":232451,"line_start":50,"line_end":50,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":232456,"byte_end":232465,"line_start":51,"line_end":51,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1166},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":232684,"byte_end":232689,"line_start":60,"line_end":60,"column_start":12,"column_end":17},"name":"cross","qualname":"<Vec2>::cross","value":"pub fn cross(Self, Vec2) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Cross product of two vectors.","sig":null,"attributes":[{"value":"/ Cross product of two vectors.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":232564,"byte_end":232597,"line_start":56,"line_end":56,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":232602,"byte_end":232605,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This is signed so that (0, 1) × (1, 0) = 1.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":232610,"byte_end":232658,"line_start":58,"line_end":58,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":232663,"byte_end":232672,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1167},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":232823,"byte_end":232828,"line_start":66,"line_end":66,"column_start":12,"column_end":17},"name":"hypot","qualname":"<Vec2>::hypot","value":"pub fn hypot(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Magnitude of vector.\n","sig":null,"attributes":[{"value":"/ Magnitude of vector.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":232773,"byte_end":232797,"line_start":64,"line_end":64,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":232802,"byte_end":232811,"line_start":65,"line_end":65,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1168},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":232942,"byte_end":232948,"line_start":72,"line_end":72,"column_start":12,"column_end":18},"name":"hypot2","qualname":"<Vec2>::hypot2","value":"pub fn hypot2(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Magnitude squared of vector.\n","sig":null,"attributes":[{"value":"/ Magnitude squared of vector.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":232884,"byte_end":232916,"line_start":70,"line_end":70,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":232921,"byte_end":232930,"line_start":71,"line_end":71,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1169},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":233175,"byte_end":233180,"line_start":81,"line_end":81,"column_start":12,"column_end":17},"name":"atan2","qualname":"<Vec2>::atan2","value":"pub fn atan2(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Angle of vector.","sig":null,"attributes":[{"value":"/ Angle of vector.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":232998,"byte_end":233018,"line_start":76,"line_end":76,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":233023,"byte_end":233026,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ If the vector is interpreted as a complex number, this is the argument.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":233031,"byte_end":233106,"line_start":78,"line_end":78,"column_start":5,"column_end":80}},{"value":"/ The angle is expressed in radians.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":233111,"byte_end":233149,"line_start":79,"line_end":79,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":233154,"byte_end":233163,"line_start":80,"line_end":80,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1170},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":233754,"byte_end":233764,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"from_angle","qualname":"<Vec2>::from_angle","value":"pub fn from_angle(f64) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" A unit vector of the given angle.","sig":null,"attributes":[{"value":"/ A unit vector of the given angle.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":233236,"byte_end":233273,"line_start":85,"line_end":85,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":233278,"byte_end":233281,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ With `th` at zero, the result is the positive X unit vector, and","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":233286,"byte_end":233354,"line_start":87,"line_end":87,"column_start":5,"column_end":73}},{"value":"/ at π/2, it is the positive Y unit vector. The angle is expressed","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":233359,"byte_end":233428,"line_start":88,"line_end":88,"column_start":5,"column_end":73}},{"value":"/ in radians.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":233433,"byte_end":233448,"line_start":89,"line_end":89,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":233453,"byte_end":233456,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Thus, in a Y-down coordinate system (as is common for graphics),","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":233461,"byte_end":233529,"line_start":91,"line_end":91,"column_start":5,"column_end":73}},{"value":"/ it is a clockwise rotation, and in Y-up (traditional for math), it","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":233534,"byte_end":233604,"line_start":92,"line_end":92,"column_start":5,"column_end":75}},{"value":"/ is anti-clockwise. This convention is consistent with","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":233609,"byte_end":233666,"line_start":93,"line_end":93,"column_start":5,"column_end":62}},{"value":"/ [`Affine::rotate`](struct.Affine.html#method.rotate).","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":233671,"byte_end":233728,"line_start":94,"line_end":94,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":233733,"byte_end":233742,"line_start":95,"line_end":95,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1171},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":233941,"byte_end":233945,"line_start":105,"line_end":105,"column_start":12,"column_end":16},"name":"lerp","qualname":"<Vec2>::lerp","value":"pub fn lerp(Self, Vec2, f64) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Linearly interpolate between two vectors.\n","sig":null,"attributes":[{"value":"/ Linearly interpolate between two vectors.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":233870,"byte_end":233915,"line_start":103,"line_end":103,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":233920,"byte_end":233929,"line_start":104,"line_end":104,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1172},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":234231,"byte_end":234240,"line_start":114,"line_end":114,"column_start":12,"column_end":21},"name":"normalize","qualname":"<Vec2>::normalize","value":"pub fn normalize(Self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Returns a vector of magnitude 1.0 with the same angle as `self`; i.e.\n a unit/direction vector.","sig":null,"attributes":[{"value":"/ Returns a vector of magnitude 1.0 with the same angle as `self`; i.e.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":234028,"byte_end":234101,"line_start":109,"line_end":109,"column_start":5,"column_end":78}},{"value":"/ a unit/direction vector.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":234106,"byte_end":234134,"line_start":110,"line_end":110,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":234139,"byte_end":234142,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ This produces `NaN` values when the magnitutde is `0`.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":234147,"byte_end":234205,"line_start":112,"line_end":112,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":234210,"byte_end":234219,"line_start":113,"line_end":113,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1173},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":234700,"byte_end":234705,"line_start":133,"line_end":133,"column_start":12,"column_end":17},"name":"round","qualname":"<Vec2>::round","value":"pub fn round(Self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Vec2`,\n with `x` and `y` rounded to the nearest integer.","sig":null,"attributes":[{"value":"/ Returns a new `Vec2`,","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":234296,"byte_end":234321,"line_start":118,"line_end":118,"column_start":5,"column_end":30}},{"value":"/ with `x` and `y` rounded to the nearest integer.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":234326,"byte_end":234378,"line_start":119,"line_end":119,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":234383,"byte_end":234386,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":234391,"byte_end":234405,"line_start":121,"line_end":121,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":234410,"byte_end":234413,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":234418,"byte_end":234425,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use kurbo::Vec2;","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":234430,"byte_end":234450,"line_start":124,"line_end":124,"column_start":5,"column_end":25}},{"value":"/ let a = Vec2::new(3.3, 3.6).round();","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":234455,"byte_end":234495,"line_start":125,"line_end":125,"column_start":5,"column_end":45}},{"value":"/ let b = Vec2::new(3.0, -3.1).round();","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":234500,"byte_end":234541,"line_start":126,"line_end":126,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(a.x, 3.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":234546,"byte_end":234571,"line_start":127,"line_end":127,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(a.y, 4.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":234576,"byte_end":234601,"line_start":128,"line_end":128,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(b.x, 3.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":234606,"byte_end":234631,"line_start":129,"line_end":129,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(b.y, -3.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":234636,"byte_end":234662,"line_start":130,"line_end":130,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":234667,"byte_end":234674,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":234679,"byte_end":234688,"line_start":132,"line_end":132,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1174},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":235232,"byte_end":235236,"line_start":153,"line_end":153,"column_start":12,"column_end":16},"name":"ceil","qualname":"<Vec2>::ceil","value":"pub fn ceil(Self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Vec2`,\n with `x` and `y` rounded up to the nearest integer,\n unless they are already an integer.","sig":null,"attributes":[{"value":"/ Returns a new `Vec2`,","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":234783,"byte_end":234808,"line_start":137,"line_end":137,"column_start":5,"column_end":30}},{"value":"/ with `x` and `y` rounded up to the nearest integer,","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":234813,"byte_end":234868,"line_start":138,"line_end":138,"column_start":5,"column_end":60}},{"value":"/ unless they are already an integer.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":234873,"byte_end":234912,"line_start":139,"line_end":139,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":234917,"byte_end":234920,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":234925,"byte_end":234939,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":234944,"byte_end":234947,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":234952,"byte_end":234959,"line_start":143,"line_end":143,"column_start":5,"column_end":12}},{"value":"/ use kurbo::Vec2;","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":234964,"byte_end":234984,"line_start":144,"line_end":144,"column_start":5,"column_end":25}},{"value":"/ let a = Vec2::new(3.3, 3.6).ceil();","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":234989,"byte_end":235028,"line_start":145,"line_end":145,"column_start":5,"column_end":44}},{"value":"/ let b = Vec2::new(3.0, -3.1).ceil();","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":235033,"byte_end":235073,"line_start":146,"line_end":146,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(a.x, 4.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":235078,"byte_end":235103,"line_start":147,"line_end":147,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(a.y, 4.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":235108,"byte_end":235133,"line_start":148,"line_end":148,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(b.x, 3.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":235138,"byte_end":235163,"line_start":149,"line_end":149,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(b.y, -3.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":235168,"byte_end":235194,"line_start":150,"line_end":150,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":235199,"byte_end":235206,"line_start":151,"line_end":151,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":235211,"byte_end":235220,"line_start":152,"line_end":152,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1175},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":235765,"byte_end":235770,"line_start":173,"line_end":173,"column_start":12,"column_end":17},"name":"floor","qualname":"<Vec2>::floor","value":"pub fn floor(Self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Vec2`,\n with `x` and `y` rounded down to the nearest integer,\n unless they are already an integer.","sig":null,"attributes":[{"value":"/ Returns a new `Vec2`,","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":235312,"byte_end":235337,"line_start":157,"line_end":157,"column_start":5,"column_end":30}},{"value":"/ with `x` and `y` rounded down to the nearest integer,","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":235342,"byte_end":235399,"line_start":158,"line_end":158,"column_start":5,"column_end":62}},{"value":"/ unless they are already an integer.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":235404,"byte_end":235443,"line_start":159,"line_end":159,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":235448,"byte_end":235451,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":235456,"byte_end":235470,"line_start":161,"line_end":161,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":235475,"byte_end":235478,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":235483,"byte_end":235490,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ use kurbo::Vec2;","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":235495,"byte_end":235515,"line_start":164,"line_end":164,"column_start":5,"column_end":25}},{"value":"/ let a = Vec2::new(3.3, 3.6).floor();","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":235520,"byte_end":235560,"line_start":165,"line_end":165,"column_start":5,"column_end":45}},{"value":"/ let b = Vec2::new(3.0, -3.1).floor();","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":235565,"byte_end":235606,"line_start":166,"line_end":166,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(a.x, 3.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":235611,"byte_end":235636,"line_start":167,"line_end":167,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(a.y, 3.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":235641,"byte_end":235666,"line_start":168,"line_end":168,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(b.x, 3.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":235671,"byte_end":235696,"line_start":169,"line_end":169,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(b.y, -4.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":235701,"byte_end":235727,"line_start":170,"line_end":170,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":235732,"byte_end":235739,"line_start":171,"line_end":171,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":235744,"byte_end":235753,"line_start":172,"line_end":172,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1176},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":236313,"byte_end":236319,"line_start":193,"line_end":193,"column_start":12,"column_end":18},"name":"expand","qualname":"<Vec2>::expand","value":"pub fn expand(Self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Vec2`,\n with `x` and `y` rounded away from zero to the nearest integer,\n unless they are already an integer.","sig":null,"attributes":[{"value":"/ Returns a new `Vec2`,","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":235848,"byte_end":235873,"line_start":177,"line_end":177,"column_start":5,"column_end":30}},{"value":"/ with `x` and `y` rounded away from zero to the nearest integer,","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":235878,"byte_end":235945,"line_start":178,"line_end":178,"column_start":5,"column_end":72}},{"value":"/ unless they are already an integer.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":235950,"byte_end":235989,"line_start":179,"line_end":179,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":235994,"byte_end":235997,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":236002,"byte_end":236016,"line_start":181,"line_end":181,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":236021,"byte_end":236024,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":236029,"byte_end":236036,"line_start":183,"line_end":183,"column_start":5,"column_end":12}},{"value":"/ use kurbo::Vec2;","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":236041,"byte_end":236061,"line_start":184,"line_end":184,"column_start":5,"column_end":25}},{"value":"/ let a = Vec2::new(3.3, 3.6).expand();","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":236066,"byte_end":236107,"line_start":185,"line_end":185,"column_start":5,"column_end":46}},{"value":"/ let b = Vec2::new(3.0, -3.1).expand();","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":236112,"byte_end":236154,"line_start":186,"line_end":186,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(a.x, 4.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":236159,"byte_end":236184,"line_start":187,"line_end":187,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(a.y, 4.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":236189,"byte_end":236214,"line_start":188,"line_end":188,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(b.x, 3.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":236219,"byte_end":236244,"line_start":189,"line_end":189,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(b.y, -4.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":236249,"byte_end":236275,"line_start":190,"line_end":190,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":236280,"byte_end":236287,"line_start":191,"line_end":191,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":236292,"byte_end":236301,"line_start":192,"line_end":192,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1177},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":236860,"byte_end":236865,"line_start":213,"line_end":213,"column_start":12,"column_end":17},"name":"trunc","qualname":"<Vec2>::trunc","value":"pub fn trunc(Self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Vec2`,\n with `x` and `y` rounded towards zero to the nearest integer,\n unless they are already an integer.","sig":null,"attributes":[{"value":"/ Returns a new `Vec2`,","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":236399,"byte_end":236424,"line_start":197,"line_end":197,"column_start":5,"column_end":30}},{"value":"/ with `x` and `y` rounded towards zero to the nearest integer,","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":236429,"byte_end":236494,"line_start":198,"line_end":198,"column_start":5,"column_end":70}},{"value":"/ unless they are already an integer.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":236499,"byte_end":236538,"line_start":199,"line_end":199,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":236543,"byte_end":236546,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":236551,"byte_end":236565,"line_start":201,"line_end":201,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":236570,"byte_end":236573,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":236578,"byte_end":236585,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/ use kurbo::Vec2;","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":236590,"byte_end":236610,"line_start":204,"line_end":204,"column_start":5,"column_end":25}},{"value":"/ let a = Vec2::new(3.3, 3.6).trunc();","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":236615,"byte_end":236655,"line_start":205,"line_end":205,"column_start":5,"column_end":45}},{"value":"/ let b = Vec2::new(3.0, -3.1).trunc();","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":236660,"byte_end":236701,"line_start":206,"line_end":206,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(a.x, 3.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":236706,"byte_end":236731,"line_start":207,"line_end":207,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(a.y, 3.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":236736,"byte_end":236761,"line_start":208,"line_end":208,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(b.x, 3.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":236766,"byte_end":236791,"line_start":209,"line_end":209,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(b.y, -3.0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":236796,"byte_end":236822,"line_start":210,"line_end":210,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":236827,"byte_end":236834,"line_start":211,"line_end":211,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":236839,"byte_end":236848,"line_start":212,"line_end":212,"column_start":5,"column_end":14}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":3994,"byte_end":4000,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":21},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":10077,"byte_end":10083,"line_start":182,"line_end":182,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":10185,"byte_end":10191,"line_start":189,"line_end":189,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":32},{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":10462,"byte_end":10468,"line_start":201,"line_end":201,"column_start":14,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":11002,"byte_end":11008,"line_start":217,"line_end":217,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/arc.rs","byte_start":14490,"byte_end":14493,"line_start":26,"line_end":26,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":55},{"krate":0,"index":56}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/arc.rs","byte_start":16266,"byte_end":16279,"line_start":87,"line_end":87,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/arc.rs","byte_start":17555,"byte_end":17558,"line_start":131,"line_end":131,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":24164,"byte_end":24171,"line_start":151,"line_end":151,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":113},{"krate":0,"index":115},{"krate":0,"index":117},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":123},{"krate":0,"index":125},{"krate":0,"index":127},{"krate":0,"index":129},{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":34896,"byte_end":34903,"line_start":333,"line_end":333,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":35519,"byte_end":35526,"line_start":353,"line_end":353,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":35705,"byte_end":35712,"line_start":362,"line_end":362,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":39836,"byte_end":39842,"line_start":463,"line_end":463,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":152},{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":40318,"byte_end":40324,"line_start":477,"line_end":477,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":155},{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":40657,"byte_end":40663,"line_start":489,"line_end":489,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":158},{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":40842,"byte_end":40848,"line_start":497,"line_end":497,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":41019,"byte_end":41033,"line_start":505,"line_end":505,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":167},{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":41509,"byte_end":41523,"line_start":519,"line_end":519,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":170},{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":41856,"byte_end":41870,"line_start":531,"line_end":531,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":42049,"byte_end":42063,"line_start":539,"line_end":539,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":42971,"byte_end":42979,"line_start":571,"line_end":571,"column_start":47,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":189},{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":44613,"byte_end":44621,"line_start":616,"line_end":616,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":194},{"krate":0,"index":196},{"krate":0,"index":198},{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":45605,"byte_end":45612,"line_start":650,"line_end":650,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":202},{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":46192,"byte_end":46199,"line_start":668,"line_end":668,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":46489,"byte_end":46496,"line_start":678,"line_end":678,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":46770,"byte_end":46777,"line_start":688,"line_end":688,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":47100,"byte_end":47107,"line_start":698,"line_end":698,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":47368,"byte_end":47375,"line_start":708,"line_end":708,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":55938,"byte_end":55954,"line_start":924,"line_end":924,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":56639,"byte_end":56646,"line_start":947,"line_end":947,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":56758,"byte_end":56765,"line_start":953,"line_end":953,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":56865,"byte_end":56872,"line_start":959,"line_end":959,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":56975,"byte_end":56982,"line_start":965,"line_end":965,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":59046,"byte_end":59053,"line_start":1049,"line_end":1049,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":59829,"byte_end":59840,"line_start":1087,"line_end":1087,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":264},{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/circle.rs","byte_start":64311,"byte_end":64317,"line_start":21,"line_end":21,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":287},{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/circle.rs","byte_start":64976,"byte_end":64982,"line_start":45,"line_end":45,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":291},{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/circle.rs","byte_start":65189,"byte_end":65195,"line_start":57,"line_end":57,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":294},{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/circle.rs","byte_start":65404,"byte_end":65410,"line_start":69,"line_end":69,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":297},{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/circle.rs","byte_start":65682,"byte_end":65688,"line_start":85,"line_end":85,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/circle.rs","byte_start":67223,"byte_end":67237,"line_start":140,"line_end":140,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":314},{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/circle.rs","byte_start":68696,"byte_end":68709,"line_start":189,"line_end":189,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/circle.rs","byte_start":69146,"byte_end":69159,"line_start":208,"line_end":208,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":326},{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/circle.rs","byte_start":69355,"byte_end":69368,"line_start":220,"line_end":220,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":329},{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/circle.rs","byte_start":69771,"byte_end":69784,"line_start":240,"line_end":240,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/cubicbez.rs","byte_start":83498,"byte_end":83506,"line_start":33,"line_end":33,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":386},{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/cubicbez.rs","byte_start":85416,"byte_end":85424,"line_start":83,"line_end":83,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/cubicbez.rs","byte_start":85962,"byte_end":85974,"line_start":113,"line_end":113,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":401},{"krate":0,"index":402}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/cubicbez.rs","byte_start":86292,"byte_end":86300,"line_start":126,"line_end":126,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/cubicbez.rs","byte_start":87849,"byte_end":87857,"line_start":181,"line_end":181,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":410},{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/cubicbez.rs","byte_start":88163,"byte_end":88171,"line_start":194,"line_end":194,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/cubicbez.rs","byte_start":90266,"byte_end":90274,"line_start":237,"line_end":237,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/cubicbez.rs","byte_start":90702,"byte_end":90710,"line_start":249,"line_end":249,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/cubicbez.rs","byte_start":91226,"byte_end":91234,"line_start":265,"line_end":265,"column_start":30,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/cubicbez.rs","byte_start":91266,"byte_end":91274,"line_start":267,"line_end":267,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":425}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/cubicbez.rs","byte_start":92081,"byte_end":92087,"line_start":291,"line_end":291,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":431},{"krate":0,"index":432}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/cubicbez.rs","byte_start":92349,"byte_end":92356,"line_start":305,"line_end":305,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":100393,"byte_end":100400,"line_start":22,"line_end":22,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":457},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":104793,"byte_end":104800,"line_start":146,"line_end":146,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":472},{"krate":0,"index":473}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":105137,"byte_end":105144,"line_start":159,"line_end":159,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":475},{"krate":0,"index":476}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":105441,"byte_end":105447,"line_start":171,"line_end":171,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":478},{"krate":0,"index":479}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":105626,"byte_end":105633,"line_start":180,"line_end":180,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":481}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":105767,"byte_end":105774,"line_start":186,"line_end":186,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":113137,"byte_end":113143,"line_start":118,"line_end":118,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":116440,"byte_end":116446,"line_start":242,"line_end":242,"column_start":14,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":508},{"krate":0,"index":509}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":116607,"byte_end":116613,"line_start":251,"line_end":251,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":511},{"krate":0,"index":512}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":116964,"byte_end":116968,"line_start":267,"line_end":267,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":514},{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":117101,"byte_end":117107,"line_start":276,"line_end":276,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":517},{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":117241,"byte_end":117245,"line_start":285,"line_end":285,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":520},{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":117378,"byte_end":117384,"line_start":294,"line_end":294,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":523}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":117485,"byte_end":117491,"line_start":300,"line_end":300,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":525}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":117621,"byte_end":117627,"line_start":306,"line_end":306,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":527}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/line.rs","byte_start":118301,"byte_end":118305,"line_start":23,"line_end":23,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":552},{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/line.rs","byte_start":118650,"byte_end":118654,"line_start":40,"line_end":40,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/line.rs","byte_start":119088,"byte_end":119092,"line_start":65,"line_end":65,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":562},{"krate":0,"index":563}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/line.rs","byte_start":119267,"byte_end":119271,"line_start":74,"line_end":74,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":565}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/line.rs","byte_start":119403,"byte_end":119407,"line_start":81,"line_end":81,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":567}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/line.rs","byte_start":119552,"byte_end":119556,"line_start":88,"line_end":88,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":569}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/line.rs","byte_start":120055,"byte_end":120059,"line_start":105,"line_end":105,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":571}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/line.rs","byte_start":120166,"byte_end":120170,"line_start":112,"line_end":112,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":573}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/line.rs","byte_start":120481,"byte_end":120491,"line_start":124,"line_end":124,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":576},{"krate":0,"index":577}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/line.rs","byte_start":120692,"byte_end":120702,"line_start":136,"line_end":136,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":579},{"krate":0,"index":580}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/line.rs","byte_start":120867,"byte_end":120877,"line_start":145,"line_end":145,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":582}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/line.rs","byte_start":120980,"byte_end":120986,"line_start":152,"line_end":152,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":584},{"krate":0,"index":585}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/line.rs","byte_start":121187,"byte_end":121191,"line_start":164,"line_end":164,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":587},{"krate":0,"index":588}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/line.rs","byte_start":121341,"byte_end":121345,"line_start":173,"line_end":173,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":590},{"krate":0,"index":591}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/line.rs","byte_start":121619,"byte_end":121623,"line_start":189,"line_end":189,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/line.rs","byte_start":122491,"byte_end":122503,"line_start":226,"line_end":226,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":604},{"krate":0,"index":605}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":130552,"byte_end":130557,"line_start":19,"line_end":19,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":661}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":134235,"byte_end":134240,"line_start":156,"line_end":156,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":134470,"byte_end":134475,"line_start":170,"line_end":170,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":667},{"krate":0,"index":668}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":134647,"byte_end":134652,"line_start":179,"line_end":179,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":670}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":134804,"byte_end":134809,"line_start":186,"line_end":186,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":672},{"krate":0,"index":673}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":134981,"byte_end":134986,"line_start":195,"line_end":195,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":675}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":135144,"byte_end":135149,"line_start":202,"line_end":202,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":677},{"krate":0,"index":678}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":135322,"byte_end":135327,"line_start":211,"line_end":211,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":680}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":135480,"byte_end":135485,"line_start":218,"line_end":218,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":682},{"krate":0,"index":683}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":135658,"byte_end":135663,"line_start":227,"line_end":227,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":685}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":135811,"byte_end":135816,"line_start":234,"line_end":234,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":687},{"krate":0,"index":688}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":135982,"byte_end":135987,"line_start":243,"line_end":243,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":690}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":136130,"byte_end":136135,"line_start":249,"line_end":249,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":692}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/quadbez.rs","byte_start":138242,"byte_end":138249,"line_start":24,"line_end":24,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":716},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/quadbez.rs","byte_start":140633,"byte_end":140640,"line_start":101,"line_end":101,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":730}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/quadbez.rs","byte_start":141141,"byte_end":141152,"line_start":128,"line_end":128,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":732},{"krate":0,"index":733}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/quadbez.rs","byte_start":142033,"byte_end":142040,"line_start":164,"line_end":164,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":745},{"krate":0,"index":746},{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":749}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/quadbez.rs","byte_start":143024,"byte_end":143031,"line_start":202,"line_end":202,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":751},{"krate":0,"index":752}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/quadbez.rs","byte_start":143316,"byte_end":143323,"line_start":214,"line_end":214,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":754}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/quadbez.rs","byte_start":145465,"byte_end":145472,"line_start":268,"line_end":268,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":756}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/quadbez.rs","byte_start":145738,"byte_end":145745,"line_start":277,"line_end":277,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":758}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/quadbez.rs","byte_start":147285,"byte_end":147292,"line_start":322,"line_end":322,"column_start":30,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/quadbez.rs","byte_start":147324,"byte_end":147331,"line_start":324,"line_end":324,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":764}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/quadbez.rs","byte_start":147991,"byte_end":147997,"line_start":349,"line_end":349,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":767},{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":154181,"byte_end":154185,"line_start":22,"line_end":22,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":789},{"krate":0,"index":792},{"krate":0,"index":795},{"krate":0,"index":797},{"krate":0,"index":799},{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":817},{"krate":0,"index":818},{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":826}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":168914,"byte_end":168918,"line_start":500,"line_end":500,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":828}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":169051,"byte_end":169055,"line_start":506,"line_end":506,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":830}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":169182,"byte_end":169186,"line_start":512,"line_end":512,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":832},{"krate":0,"index":833}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":169370,"byte_end":169374,"line_start":521,"line_end":521,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":835},{"krate":0,"index":836}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":169552,"byte_end":169556,"line_start":530,"line_end":530,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":838},{"krate":0,"index":839}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":169923,"byte_end":169927,"line_start":549,"line_end":549,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":847},{"krate":0,"index":848},{"krate":0,"index":849},{"krate":0,"index":850}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":171331,"byte_end":171343,"line_start":600,"line_end":600,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":852},{"krate":0,"index":853}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":171880,"byte_end":171884,"line_start":616,"line_end":616,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":855}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":172371,"byte_end":172375,"line_start":635,"line_end":635,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":857}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":176588,"byte_end":176599,"line_start":25,"line_end":25,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":872},{"krate":0,"index":873},{"krate":0,"index":874},{"krate":0,"index":877},{"krate":0,"index":880},{"krate":0,"index":881},{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":885}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":179079,"byte_end":179090,"line_start":119,"line_end":119,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":899}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":182420,"byte_end":182432,"line_start":239,"line_end":239,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":905},{"krate":0,"index":906}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":183281,"byte_end":183300,"line_start":268,"line_end":268,"column_start":19,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":908},{"krate":0,"index":909}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":193936,"byte_end":193940,"line_start":19,"line_end":19,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":975},{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":987}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":199837,"byte_end":199841,"line_start":221,"line_end":221,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":989}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":199993,"byte_end":199997,"line_start":227,"line_end":227,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":991}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":200303,"byte_end":200307,"line_start":237,"line_end":237,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":993}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":200642,"byte_end":200646,"line_start":256,"line_end":256,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":998},{"krate":0,"index":999}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":200865,"byte_end":200869,"line_start":268,"line_end":268,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1001}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":201070,"byte_end":201074,"line_start":278,"line_end":278,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1003},{"krate":0,"index":1004}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":201288,"byte_end":201292,"line_start":290,"line_end":290,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1006},{"krate":0,"index":1007}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":201525,"byte_end":201529,"line_start":301,"line_end":301,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1009}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":201649,"byte_end":201653,"line_start":308,"line_end":308,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1011},{"krate":0,"index":1012}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":201886,"byte_end":201890,"line_start":319,"line_end":319,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1014}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":202017,"byte_end":202021,"line_start":326,"line_end":326,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1016}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":202371,"byte_end":202375,"line_start":344,"line_end":344,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1020}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Inherent","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/svg.rs","byte_start":203860,"byte_end":203867,"line_start":31,"line_end":31,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1040},{"krate":0,"index":1042},{"krate":0,"index":1043},{"krate":0,"index":1045}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/svg.rs","byte_start":211918,"byte_end":211931,"line_start":240,"line_end":240,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1048}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/svg.rs","byte_start":212294,"byte_end":212307,"line_start":250,"line_end":250,"column_start":16,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Inherent","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/svg.rs","byte_start":212404,"byte_end":212412,"line_start":258,"line_end":258,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1057},{"krate":0,"index":1058},{"krate":0,"index":1059},{"krate":0,"index":1060},{"krate":0,"index":1062},{"krate":0,"index":1063},{"krate":0,"index":1065},{"krate":0,"index":1066},{"krate":0,"index":1067},{"krate":0,"index":1068}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/svg.rs","byte_start":216043,"byte_end":216049,"line_start":386,"line_end":386,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1070}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Inherent","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/svg.rs","byte_start":216317,"byte_end":216320,"line_start":395,"line_end":395,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":1072}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":225225,"byte_end":225239,"line_start":43,"line_end":43,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1092},{"krate":0,"index":1093},{"krate":0,"index":1094},{"krate":0,"index":1095},{"krate":0,"index":1096}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":226450,"byte_end":226464,"line_start":83,"line_end":83,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1098}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":226592,"byte_end":226598,"line_start":90,"line_end":90,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1100}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":226806,"byte_end":226820,"line_start":97,"line_end":97,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1102},{"krate":0,"index":1103}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":226996,"byte_end":227010,"line_start":106,"line_end":106,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1105},{"krate":0,"index":1106}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":227306,"byte_end":227320,"line_start":118,"line_end":118,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1108}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":227730,"byte_end":227744,"line_start":137,"line_end":137,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1113},{"krate":0,"index":1114}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":228001,"byte_end":228005,"line_start":149,"line_end":149,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1116},{"krate":0,"index":1117}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":228172,"byte_end":228186,"line_start":158,"line_end":158,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1119}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":228308,"byte_end":228322,"line_start":165,"line_end":165,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1121},{"krate":0,"index":1122}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":228575,"byte_end":228589,"line_start":177,"line_end":177,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1124}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":228713,"byte_end":228727,"line_start":184,"line_end":184,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1126},{"krate":0,"index":1127}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":228911,"byte_end":228925,"line_start":193,"line_end":193,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1129},{"krate":0,"index":1130}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":229087,"byte_end":229101,"line_start":202,"line_end":202,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1132},{"krate":0,"index":1133}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":229358,"byte_end":229372,"line_start":213,"line_end":213,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1135},{"krate":0,"index":1136}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":229587,"byte_end":229601,"line_start":222,"line_end":222,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1138},{"krate":0,"index":1139}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":229796,"byte_end":229810,"line_start":231,"line_end":231,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1141},{"krate":0,"index":1142}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":231795,"byte_end":231799,"line_start":23,"line_end":23,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1160},{"krate":0,"index":1161},{"krate":0,"index":1162},{"krate":0,"index":1163},{"krate":0,"index":1164},{"krate":0,"index":1165},{"krate":0,"index":1166},{"krate":0,"index":1167},{"krate":0,"index":1168},{"krate":0,"index":1169},{"krate":0,"index":1170},{"krate":0,"index":1171},{"krate":0,"index":1172},{"krate":0,"index":1173},{"krate":0,"index":1174},{"krate":0,"index":1175},{"krate":0,"index":1176},{"krate":0,"index":1177}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":236967,"byte_end":236971,"line_start":218,"line_end":218,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1179}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":237191,"byte_end":237195,"line_start":232,"line_end":232,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1183},{"krate":0,"index":1184}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":237396,"byte_end":237400,"line_start":244,"line_end":244,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1186}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":237582,"byte_end":237586,"line_start":254,"line_end":254,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1188},{"krate":0,"index":1189}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":237787,"byte_end":237791,"line_start":266,"line_end":266,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1191}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":237978,"byte_end":237982,"line_start":276,"line_end":276,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1193},{"krate":0,"index":1194}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":238183,"byte_end":238187,"line_start":288,"line_end":288,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1196}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":238504,"byte_end":238508,"line_start":307,"line_end":307,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1201},{"krate":0,"index":1202}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":238874,"byte_end":238878,"line_start":320,"line_end":320,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1204}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":239000,"byte_end":239004,"line_start":327,"line_end":327,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1206},{"krate":0,"index":1207}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":239177,"byte_end":239181,"line_start":339,"line_end":339,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1209}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/lib.rs","byte_start":3058,"byte_end":3064,"line_start":88,"line_end":88,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":340}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":3994,"byte_end":4000,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1228},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":10077,"byte_end":10083,"line_start":182,"line_end":182,"column_start":18,"column_end":24},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1228},"to":{"krate":2,"index":2059}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":10185,"byte_end":10191,"line_start":189,"line_end":189,"column_start":21,"column_end":27},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1228},"to":{"krate":2,"index":2146}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":10462,"byte_end":10468,"line_start":201,"line_end":201,"column_start":14,"column_end":20},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1228},"to":{"krate":2,"index":2146}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/affine.rs","byte_start":11002,"byte_end":11008,"line_start":217,"line_end":217,"column_start":20,"column_end":26},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1228},"to":{"krate":2,"index":2175}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/arc.rs","byte_start":14490,"byte_end":14493,"line_start":26,"line_end":26,"column_start":6,"column_end":9},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1242},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/arc.rs","byte_start":16266,"byte_end":16279,"line_start":87,"line_end":87,"column_start":19,"column_end":32},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":58},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/arc.rs","byte_start":17555,"byte_end":17558,"line_start":131,"line_end":131,"column_start":16,"column_end":19},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1242},"to":{"krate":0,"index":921}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":24164,"byte_end":24171,"line_start":151,"line_end":151,"column_start":6,"column_end":13},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1257},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":34896,"byte_end":34903,"line_start":333,"line_end":333,"column_start":31,"column_end":38},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1257},"to":{"krate":2,"index":5438}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":35519,"byte_end":35526,"line_start":353,"line_end":353,"column_start":23,"column_end":30},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1257},"to":{"krate":2,"index":5442}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":35705,"byte_end":35712,"line_start":362,"line_end":362,"column_start":25,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1257},"to":{"krate":2,"index":5451}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":39836,"byte_end":39842,"line_start":463,"line_end":463,"column_start":22,"column_end":28},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1228},"to":{"krate":2,"index":2146}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":40318,"byte_end":40324,"line_start":477,"line_end":477,"column_start":23,"column_end":29},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1228},"to":{"krate":2,"index":2146}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":40657,"byte_end":40663,"line_start":489,"line_end":489,"column_start":23,"column_end":29},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1228},"to":{"krate":2,"index":2146}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":40842,"byte_end":40848,"line_start":497,"line_end":497,"column_start":31,"column_end":37},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1228},"to":{"krate":2,"index":2146}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":41019,"byte_end":41033,"line_start":505,"line_end":505,"column_start":22,"column_end":36},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1484},"to":{"krate":2,"index":2146}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":41509,"byte_end":41523,"line_start":519,"line_end":519,"column_start":23,"column_end":37},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1484},"to":{"krate":2,"index":2146}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":41856,"byte_end":41870,"line_start":531,"line_end":531,"column_start":23,"column_end":37},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1484},"to":{"krate":2,"index":2146}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":42049,"byte_end":42063,"line_start":539,"line_end":539,"column_start":31,"column_end":45},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1484},"to":{"krate":2,"index":2146}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":42971,"byte_end":42979,"line_start":571,"line_end":571,"column_start":47,"column_end":55},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":183},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":44613,"byte_end":44621,"line_start":616,"line_end":616,"column_start":34,"column_end":42},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":45605,"byte_end":45612,"line_start":650,"line_end":650,"column_start":21,"column_end":28},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1293},"to":{"krate":0,"index":613}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":46192,"byte_end":46199,"line_start":668,"line_end":668,"column_start":27,"column_end":34},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1293},"to":{"krate":0,"index":624}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":46489,"byte_end":46496,"line_start":678,"line_end":678,"column_start":25,"column_end":32},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1293},"to":{"krate":0,"index":627}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":46770,"byte_end":46777,"line_start":688,"line_end":688,"column_start":28,"column_end":35},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1293},"to":{"krate":0,"index":629}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":47100,"byte_end":47107,"line_start":698,"line_end":698,"column_start":28,"column_end":35},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1293},"to":{"krate":0,"index":634}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":47368,"byte_end":47375,"line_start":708,"line_end":708,"column_start":6,"column_end":13},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1293},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":55938,"byte_end":55954,"line_start":924,"line_end":924,"column_start":6,"column_end":22},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1312},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":56639,"byte_end":56646,"line_start":947,"line_end":947,"column_start":25,"column_end":32},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1293},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":56758,"byte_end":56765,"line_start":953,"line_end":953,"column_start":21,"column_end":28},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1293},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":56865,"byte_end":56872,"line_start":959,"line_end":959,"column_start":24,"column_end":31},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1293},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":56975,"byte_end":56982,"line_start":965,"line_end":965,"column_start":16,"column_end":23},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1257},"to":{"krate":0,"index":921}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":59046,"byte_end":59053,"line_start":1049,"line_end":1049,"column_start":16,"column_end":23},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1293},"to":{"krate":0,"index":921}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/bezpath.rs","byte_start":59829,"byte_end":59840,"line_start":1087,"line_end":1087,"column_start":19,"column_end":30},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":252},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/circle.rs","byte_start":64311,"byte_end":64317,"line_start":21,"line_end":21,"column_start":6,"column_end":12},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1320},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/circle.rs","byte_start":64976,"byte_end":64982,"line_start":45,"line_end":45,"column_start":20,"column_end":26},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1320},"to":{"krate":2,"index":2136}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/circle.rs","byte_start":65189,"byte_end":65195,"line_start":57,"line_end":57,"column_start":20,"column_end":26},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1320},"to":{"krate":2,"index":2141}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/circle.rs","byte_start":65404,"byte_end":65410,"line_start":69,"line_end":69,"column_start":22,"column_end":28},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1228},"to":{"krate":2,"index":2146}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/circle.rs","byte_start":65682,"byte_end":65688,"line_start":85,"line_end":85,"column_start":16,"column_end":22},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1320},"to":{"krate":0,"index":921}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/circle.rs","byte_start":67223,"byte_end":67237,"line_start":140,"line_end":140,"column_start":19,"column_end":33},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":299},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/circle.rs","byte_start":68696,"byte_end":68709,"line_start":189,"line_end":189,"column_start":6,"column_end":19},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":316},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/circle.rs","byte_start":69146,"byte_end":69159,"line_start":208,"line_end":208,"column_start":20,"column_end":33},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":316},"to":{"krate":2,"index":2136}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/circle.rs","byte_start":69355,"byte_end":69368,"line_start":220,"line_end":220,"column_start":20,"column_end":33},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":316},"to":{"krate":2,"index":2141}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/circle.rs","byte_start":69771,"byte_end":69784,"line_start":240,"line_end":240,"column_start":16,"column_end":29},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":316},"to":{"krate":0,"index":921}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/cubicbez.rs","byte_start":83498,"byte_end":83506,"line_start":33,"line_end":33,"column_start":6,"column_end":14},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1334},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/cubicbez.rs","byte_start":85416,"byte_end":85424,"line_start":83,"line_end":83,"column_start":16,"column_end":24},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1334},"to":{"krate":0,"index":921}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/cubicbez.rs","byte_start":85962,"byte_end":85974,"line_start":113,"line_end":113,"column_start":19,"column_end":31},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":390},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/cubicbez.rs","byte_start":86292,"byte_end":86300,"line_start":126,"line_end":126,"column_start":21,"column_end":29},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1334},"to":{"krate":0,"index":613}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/cubicbez.rs","byte_start":87849,"byte_end":87857,"line_start":181,"line_end":181,"column_start":26,"column_end":34},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1334},"to":{"krate":0,"index":619}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/cubicbez.rs","byte_start":88163,"byte_end":88171,"line_start":194,"line_end":194,"column_start":27,"column_end":35},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1334},"to":{"krate":0,"index":624}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/cubicbez.rs","byte_start":90266,"byte_end":90274,"line_start":237,"line_end":237,"column_start":25,"column_end":33},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1334},"to":{"krate":0,"index":627}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/cubicbez.rs","byte_start":90702,"byte_end":90710,"line_start":249,"line_end":249,"column_start":28,"column_end":36},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1334},"to":{"krate":0,"index":629}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/cubicbez.rs","byte_start":91226,"byte_end":91234,"line_start":265,"line_end":265,"column_start":30,"column_end":38},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1334},"to":{"krate":0,"index":631}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/cubicbez.rs","byte_start":91266,"byte_end":91274,"line_start":267,"line_end":267,"column_start":28,"column_end":36},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1334},"to":{"krate":0,"index":634}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/cubicbez.rs","byte_start":92081,"byte_end":92087,"line_start":291,"line_end":291,"column_start":24,"column_end":30},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1228},"to":{"krate":2,"index":2146}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/cubicbez.rs","byte_start":92349,"byte_end":92356,"line_start":305,"line_end":305,"column_start":19,"column_end":26},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":381},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":100393,"byte_end":100400,"line_start":22,"line_end":22,"column_start":6,"column_end":13},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1348},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":104793,"byte_end":104800,"line_start":146,"line_end":146,"column_start":20,"column_end":27},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1348},"to":{"krate":2,"index":2136}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":105137,"byte_end":105144,"line_start":159,"line_end":159,"column_start":20,"column_end":27},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1348},"to":{"krate":2,"index":2141}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":105441,"byte_end":105447,"line_start":171,"line_end":171,"column_start":23,"column_end":29},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1228},"to":{"krate":2,"index":2146}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":105626,"byte_end":105633,"line_start":180,"line_end":180,"column_start":23,"column_end":30},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1348},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/ellipse.rs","byte_start":105767,"byte_end":105774,"line_start":186,"line_end":186,"column_start":16,"column_end":23},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1348},"to":{"krate":0,"index":921}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":113137,"byte_end":113143,"line_start":118,"line_end":118,"column_start":6,"column_end":12},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1361},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":116440,"byte_end":116446,"line_start":242,"line_end":242,"column_start":14,"column_end":20},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1361},"to":{"krate":2,"index":2163}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":116607,"byte_end":116613,"line_start":251,"line_end":251,"column_start":20,"column_end":26},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1361},"to":{"krate":2,"index":2136}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":116964,"byte_end":116968,"line_start":267,"line_end":267,"column_start":22,"column_end":26},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1422},"to":{"krate":2,"index":2136}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":117101,"byte_end":117107,"line_start":276,"line_end":276,"column_start":20,"column_end":26},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1361},"to":{"krate":2,"index":2141}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":117241,"byte_end":117245,"line_start":285,"line_end":285,"column_start":22,"column_end":26},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1422},"to":{"krate":2,"index":2141}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":117378,"byte_end":117384,"line_start":294,"line_end":294,"column_start":20,"column_end":26},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1361},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":117485,"byte_end":117491,"line_start":300,"line_end":300,"column_start":27,"column_end":33},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1361},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/insets.rs","byte_start":117621,"byte_end":117627,"line_start":306,"line_end":306,"column_start":37,"column_end":43},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1361},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/line.rs","byte_start":118301,"byte_end":118305,"line_start":23,"line_end":23,"column_start":6,"column_end":10},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1377},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/line.rs","byte_start":118650,"byte_end":118654,"line_start":40,"line_end":40,"column_start":21,"column_end":25},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1377},"to":{"krate":0,"index":613}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/line.rs","byte_start":119088,"byte_end":119092,"line_start":65,"line_end":65,"column_start":26,"column_end":30},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1377},"to":{"krate":0,"index":619}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/line.rs","byte_start":119267,"byte_end":119271,"line_start":74,"line_end":74,"column_start":27,"column_end":31},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1377},"to":{"krate":0,"index":624}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/line.rs","byte_start":119403,"byte_end":119407,"line_start":81,"line_end":81,"column_start":25,"column_end":29},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1377},"to":{"krate":0,"index":627}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/line.rs","byte_start":119552,"byte_end":119556,"line_start":88,"line_end":88,"column_start":28,"column_end":32},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1377},"to":{"krate":0,"index":629}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/line.rs","byte_start":120055,"byte_end":120059,"line_start":105,"line_end":105,"column_start":30,"column_end":34},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1377},"to":{"krate":0,"index":631}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/line.rs","byte_start":120166,"byte_end":120170,"line_start":112,"line_end":112,"column_start":28,"column_end":32},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1377},"to":{"krate":0,"index":634}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/line.rs","byte_start":120481,"byte_end":120491,"line_start":124,"line_end":124,"column_start":21,"column_end":31},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1389},"to":{"krate":0,"index":613}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/line.rs","byte_start":120692,"byte_end":120702,"line_start":136,"line_end":136,"column_start":26,"column_end":36},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1389},"to":{"krate":0,"index":619}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/line.rs","byte_start":120867,"byte_end":120877,"line_start":145,"line_end":145,"column_start":27,"column_end":37},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1389},"to":{"krate":0,"index":624}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/line.rs","byte_start":120980,"byte_end":120986,"line_start":152,"line_end":152,"column_start":20,"column_end":26},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1228},"to":{"krate":2,"index":2146}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/line.rs","byte_start":121187,"byte_end":121191,"line_start":164,"line_end":164,"column_start":20,"column_end":24},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1377},"to":{"krate":2,"index":2136}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/line.rs","byte_start":121341,"byte_end":121345,"line_start":173,"line_end":173,"column_start":20,"column_end":24},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1377},"to":{"krate":2,"index":2141}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/line.rs","byte_start":121619,"byte_end":121623,"line_start":189,"line_end":189,"column_start":16,"column_end":20},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1377},"to":{"krate":0,"index":921}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/line.rs","byte_start":122491,"byte_end":122503,"line_start":226,"line_end":226,"column_start":19,"column_end":31},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":592},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":123679,"byte_end":123684,"line_start":19,"line_end":19,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":2076},"to":{"krate":0,"index":613}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":125390,"byte_end":125400,"line_start":76,"line_end":76,"column_start":29,"column_end":39},"kind":"SuperTrait","from":{"krate":0,"index":613},"to":{"krate":0,"index":624}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":128294,"byte_end":128309,"line_start":149,"line_end":149,"column_start":32,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":619},"to":{"krate":0,"index":631}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/param_curve.rs","byte_start":129164,"byte_end":129174,"line_start":173,"line_end":173,"column_start":30,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":613},"to":{"krate":0,"index":634}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":130552,"byte_end":130557,"line_start":19,"line_end":19,"column_start":6,"column_end":11},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1397},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":134235,"byte_end":134240,"line_start":156,"line_end":156,"column_start":27,"column_end":32},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1397},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":134470,"byte_end":134475,"line_start":170,"line_end":170,"column_start":20,"column_end":25},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1397},"to":{"krate":2,"index":2136}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":134647,"byte_end":134652,"line_start":179,"line_end":179,"column_start":26,"column_end":31},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1397},"to":{"krate":2,"index":2167}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":134804,"byte_end":134809,"line_start":186,"line_end":186,"column_start":20,"column_end":25},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1397},"to":{"krate":2,"index":2141}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":134981,"byte_end":134986,"line_start":195,"line_end":195,"column_start":26,"column_end":31},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1397},"to":{"krate":2,"index":2171}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":135144,"byte_end":135149,"line_start":202,"line_end":202,"column_start":26,"column_end":31},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1397},"to":{"krate":2,"index":2136}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":135322,"byte_end":135327,"line_start":211,"line_end":211,"column_start":32,"column_end":37},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1397},"to":{"krate":2,"index":2167}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":135480,"byte_end":135485,"line_start":218,"line_end":218,"column_start":26,"column_end":31},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1397},"to":{"krate":2,"index":2141}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":135658,"byte_end":135663,"line_start":227,"line_end":227,"column_start":32,"column_end":37},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1397},"to":{"krate":2,"index":2171}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":135811,"byte_end":135816,"line_start":234,"line_end":234,"column_start":21,"column_end":26},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1397},"to":{"krate":2,"index":2141}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":135982,"byte_end":135987,"line_start":243,"line_end":243,"column_start":21,"column_end":26},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1397},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/point.rs","byte_start":136130,"byte_end":136135,"line_start":249,"line_end":249,"column_start":23,"column_end":28},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1397},"to":{"krate":2,"index":6836}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/quadbez.rs","byte_start":138242,"byte_end":138249,"line_start":24,"line_end":24,"column_start":6,"column_end":13},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1409},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/quadbez.rs","byte_start":140633,"byte_end":140640,"line_start":101,"line_end":101,"column_start":16,"column_end":23},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1409},"to":{"krate":0,"index":921}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/quadbez.rs","byte_start":141141,"byte_end":141152,"line_start":128,"line_end":128,"column_start":19,"column_end":30},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":721},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/quadbez.rs","byte_start":142033,"byte_end":142040,"line_start":164,"line_end":164,"column_start":21,"column_end":28},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1409},"to":{"krate":0,"index":613}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/quadbez.rs","byte_start":143024,"byte_end":143031,"line_start":202,"line_end":202,"column_start":26,"column_end":33},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1409},"to":{"krate":0,"index":619}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/quadbez.rs","byte_start":143316,"byte_end":143323,"line_start":214,"line_end":214,"column_start":27,"column_end":34},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1409},"to":{"krate":0,"index":624}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/quadbez.rs","byte_start":145465,"byte_end":145472,"line_start":268,"line_end":268,"column_start":25,"column_end":32},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1409},"to":{"krate":0,"index":627}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/quadbez.rs","byte_start":145738,"byte_end":145745,"line_start":277,"line_end":277,"column_start":28,"column_end":35},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1409},"to":{"krate":0,"index":629}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/quadbez.rs","byte_start":147285,"byte_end":147292,"line_start":322,"line_end":322,"column_start":30,"column_end":37},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1409},"to":{"krate":0,"index":631}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/quadbez.rs","byte_start":147324,"byte_end":147331,"line_start":324,"line_end":324,"column_start":28,"column_end":35},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1409},"to":{"krate":0,"index":634}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/quadbez.rs","byte_start":147991,"byte_end":147997,"line_start":349,"line_end":349,"column_start":23,"column_end":29},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1228},"to":{"krate":2,"index":2146}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":154181,"byte_end":154185,"line_start":22,"line_end":22,"column_start":6,"column_end":10},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1422},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":168914,"byte_end":168918,"line_start":500,"line_end":500,"column_start":31,"column_end":35},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1422},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":169051,"byte_end":169055,"line_start":506,"line_end":506,"column_start":30,"column_end":34},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1422},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":169182,"byte_end":169186,"line_start":512,"line_end":512,"column_start":20,"column_end":24},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1422},"to":{"krate":2,"index":2136}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":169370,"byte_end":169374,"line_start":521,"line_end":521,"column_start":20,"column_end":24},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1422},"to":{"krate":2,"index":2141}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":169552,"byte_end":169556,"line_start":530,"line_end":530,"column_start":14,"column_end":18},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1422},"to":{"krate":2,"index":2141}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":169923,"byte_end":169927,"line_start":549,"line_end":549,"column_start":16,"column_end":20},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1422},"to":{"krate":0,"index":921}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":171331,"byte_end":171343,"line_start":600,"line_end":600,"column_start":19,"column_end":31},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":840},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":171880,"byte_end":171884,"line_start":616,"line_end":616,"column_start":21,"column_end":25},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1422},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rect.rs","byte_start":172371,"byte_end":172375,"line_start":635,"line_end":635,"column_start":23,"column_end":27},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1422},"to":{"krate":2,"index":6836}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":176588,"byte_end":176599,"line_start":25,"line_end":25,"column_start":6,"column_end":17},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1436},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":179079,"byte_end":179090,"line_start":119,"line_end":119,"column_start":16,"column_end":27},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1436},"to":{"krate":0,"index":921}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":182420,"byte_end":182432,"line_start":239,"line_end":239,"column_start":19,"column_end":31},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":900},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/rounded_rect.rs","byte_start":183281,"byte_end":183300,"line_start":268,"line_end":268,"column_start":19,"column_end":38},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":886},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/shape.rs","byte_start":186196,"byte_end":186201,"line_start":15,"line_end":15,"column_start":18,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":2076},"to":{"krate":0,"index":921}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":193936,"byte_end":193940,"line_start":19,"line_end":19,"column_start":6,"column_end":10},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1450},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":199837,"byte_end":199841,"line_start":221,"line_end":221,"column_start":21,"column_end":25},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1450},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":199993,"byte_end":199997,"line_start":227,"line_end":227,"column_start":23,"column_end":27},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1450},"to":{"krate":2,"index":6836}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":200303,"byte_end":200307,"line_start":237,"line_end":237,"column_start":25,"column_end":29},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":1450},"to":{"krate":2,"index":2175}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":200642,"byte_end":200646,"line_start":256,"line_end":256,"column_start":19,"column_end":23},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":1450},"to":{"krate":2,"index":2146}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":200865,"byte_end":200869,"line_start":268,"line_end":268,"column_start":25,"column_end":29},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":1450},"to":{"krate":2,"index":2179}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":201070,"byte_end":201074,"line_start":278,"line_end":278,"column_start":19,"column_end":23},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":1450},"to":{"krate":2,"index":2151}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":201288,"byte_end":201292,"line_start":290,"line_end":290,"column_start":20,"column_end":24},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1450},"to":{"krate":2,"index":2136}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":201525,"byte_end":201529,"line_start":301,"line_end":301,"column_start":26,"column_end":30},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1450},"to":{"krate":2,"index":2167}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":201649,"byte_end":201653,"line_start":308,"line_end":308,"column_start":20,"column_end":24},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1450},"to":{"krate":2,"index":2141}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":201886,"byte_end":201890,"line_start":319,"line_end":319,"column_start":26,"column_end":30},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1450},"to":{"krate":2,"index":2171}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":202017,"byte_end":202021,"line_start":326,"line_end":326,"column_start":27,"column_end":31},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1450},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/size.rs","byte_start":202371,"byte_end":202375,"line_start":344,"line_end":344,"column_start":21,"column_end":25},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1492},"to":{"krate":2,"index":1986}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/svg.rs","byte_start":203860,"byte_end":203867,"line_start":31,"line_end":31,"column_start":6,"column_end":13},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":1257},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/svg.rs","byte_start":211918,"byte_end":211931,"line_start":240,"line_end":240,"column_start":18,"column_end":31},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1474},"to":{"krate":2,"index":6836}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/svg.rs","byte_start":212294,"byte_end":212307,"line_start":250,"line_end":250,"column_start":16,"column_end":29},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1474},"to":{"krate":1,"index":1724}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/svg.rs","byte_start":212404,"byte_end":212412,"line_start":258,"line_end":258,"column_start":10,"column_end":18},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1050},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/svg.rs","byte_start":216043,"byte_end":216049,"line_start":386,"line_end":386,"column_start":6,"column_end":12},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1462},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/svg.rs","byte_start":216317,"byte_end":216320,"line_start":395,"line_end":395,"column_start":6,"column_end":9},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":1242},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":225225,"byte_end":225239,"line_start":43,"line_end":43,"column_start":6,"column_end":20},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":1484},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":226450,"byte_end":226464,"line_start":83,"line_end":83,"column_start":18,"column_end":32},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":1484},"to":{"krate":2,"index":2059}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":226592,"byte_end":226598,"line_start":90,"line_end":90,"column_start":31,"column_end":37},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1228},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":226806,"byte_end":226820,"line_start":97,"line_end":97,"column_start":21,"column_end":35},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":1484},"to":{"krate":2,"index":2146}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":226996,"byte_end":227010,"line_start":106,"line_end":106,"column_start":14,"column_end":28},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1484},"to":{"krate":2,"index":2146}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":227306,"byte_end":227320,"line_start":118,"line_end":118,"column_start":20,"column_end":34},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":1484},"to":{"krate":2,"index":2175}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":227730,"byte_end":227744,"line_start":137,"line_end":137,"column_start":20,"column_end":34},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":1484},"to":{"krate":2,"index":2136}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":228001,"byte_end":228005,"line_start":149,"line_end":149,"column_start":30,"column_end":34},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":1492},"to":{"krate":2,"index":2136}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":228172,"byte_end":228186,"line_start":158,"line_end":158,"column_start":26,"column_end":40},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":1484},"to":{"krate":2,"index":2167}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":228308,"byte_end":228322,"line_start":165,"line_end":165,"column_start":20,"column_end":34},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":1484},"to":{"krate":2,"index":2141}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":228575,"byte_end":228589,"line_start":177,"line_end":177,"column_start":26,"column_end":40},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":1484},"to":{"krate":2,"index":2171}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":228713,"byte_end":228727,"line_start":184,"line_end":184,"column_start":22,"column_end":36},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":1484},"to":{"krate":2,"index":2146}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":228911,"byte_end":228925,"line_start":193,"line_end":193,"column_start":20,"column_end":34},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":1484},"to":{"krate":2,"index":2146}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":229087,"byte_end":229101,"line_start":202,"line_end":202,"column_start":20,"column_end":34},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":1484},"to":{"krate":2,"index":2146}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":229358,"byte_end":229372,"line_start":213,"line_end":213,"column_start":27,"column_end":41},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":1484},"to":{"krate":2,"index":2146}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":229587,"byte_end":229601,"line_start":222,"line_end":222,"column_start":23,"column_end":37},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":1484},"to":{"krate":2,"index":2146}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/translate_scale.rs","byte_start":229796,"byte_end":229810,"line_start":231,"line_end":231,"column_start":24,"column_end":38},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":1484},"to":{"krate":2,"index":2146}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":231795,"byte_end":231799,"line_start":23,"line_end":23,"column_start":6,"column_end":10},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":1492},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":236967,"byte_end":236971,"line_start":218,"line_end":218,"column_start":27,"column_end":31},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":1492},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":237191,"byte_end":237195,"line_start":232,"line_end":232,"column_start":14,"column_end":18},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":1492},"to":{"krate":2,"index":2136}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":237396,"byte_end":237400,"line_start":244,"line_end":244,"column_start":20,"column_end":24},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":1492},"to":{"krate":2,"index":2167}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":237582,"byte_end":237586,"line_start":254,"line_end":254,"column_start":14,"column_end":18},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":1492},"to":{"krate":2,"index":2141}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":237787,"byte_end":237791,"line_start":266,"line_end":266,"column_start":20,"column_end":24},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":1492},"to":{"krate":2,"index":2171}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":237978,"byte_end":237982,"line_start":276,"line_end":276,"column_start":19,"column_end":23},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":1492},"to":{"krate":2,"index":2146}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":238183,"byte_end":238187,"line_start":288,"line_end":288,"column_start":25,"column_end":29},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":1492},"to":{"krate":2,"index":2175}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":238504,"byte_end":238508,"line_start":307,"line_end":307,"column_start":19,"column_end":23},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":1492},"to":{"krate":2,"index":2151}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":238874,"byte_end":238878,"line_start":320,"line_end":320,"column_start":25,"column_end":29},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":1492},"to":{"krate":2,"index":2179}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":239000,"byte_end":239004,"line_start":327,"line_end":327,"column_start":14,"column_end":18},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":1492},"to":{"krate":2,"index":2163}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/kurbo-0.7.1/src/vec2.rs","byte_start":239177,"byte_end":239181,"line_start":339,"line_end":339,"column_start":23,"column_end":27},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":1492},"to":{"krate":2,"index":6836}}]}