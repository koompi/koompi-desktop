{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27","program":"/home/sna/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","rgb","--edition=2018","/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"as-bytes\"","--cfg","feature=\"bytemuck\"","--cfg","feature=\"default\"","-C","metadata=cf3e01666d094c60","-C","extra-filename=-cf3e01666d094c60","--out-dir","/home/sna/project/koompi-desktop/desktop/target/rls/debug/deps","-L","dependency=/home/sna/project/koompi-desktop/desktop/target/rls/debug/deps","--extern","bytemuck=/home/sna/project/koompi-desktop/desktop/target/rls/debug/deps/libbytemuck-d40d380c3f339def.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/sna/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/sna/project/koompi-desktop/desktop/target/rls/debug/deps/librgb-cf3e01666d094c60.rmeta"},"prelude":{"crate_id":{"name":"rgb","disambiguator":[13211019973156790359,7369231305818913544]},"crate_root":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src","external_crates":[{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[18134888982608726624,15478788479473023395]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[6673302632599048863,4691371433878452070]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[11457885127507258025,479752930606968628]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","num":4,"id":{"name":"bytemuck","disambiguator":[13300038299743649120,10384484905238779108]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6007655421670680970,17748288058820543149]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","num":6,"id":{"name":"bytemuck_derive","disambiguator":[6247392092230105806,8163925577197420074]}}],"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":0,"byte_end":6849,"line_start":1,"line_end":229,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":4,"index":151},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":1590,"byte_end":1593,"line_start":54,"line_end":54,"column_start":19,"column_end":22},"alias_span":null,"name":"Pod","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":6,"index":111},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":1590,"byte_end":1593,"line_start":54,"line_end":54,"column_start":19,"column_end":22},"alias_span":null,"name":"Pod","value":"","parent":{"krate":0,"index":398}},{"kind":"Use","ref_id":{"krate":4,"index":55},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":1678,"byte_end":1686,"line_start":57,"line_end":57,"column_start":19,"column_end":27},"alias_span":null,"name":"Zeroable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":6,"index":112},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":1678,"byte_end":1686,"line_start":57,"line_end":57,"column_start":19,"column_end":27},"alias_span":null,"name":"Zeroable","value":"","parent":{"krate":0,"index":399}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":1723,"byte_end":1724,"line_start":59,"line_end":59,"column_start":35,"column_end":36},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":1756,"byte_end":1757,"line_start":60,"line_end":60,"column_start":31,"column_end":32},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":1791,"byte_end":1792,"line_start":61,"line_end":61,"column_start":33,"column_end":34},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":1824,"byte_end":1825,"line_start":62,"line_end":62,"column_start":31,"column_end":32},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":1858,"byte_end":1859,"line_start":63,"line_end":63,"column_start":32,"column_end":33},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":0,"byte_end":6849,"line_start":1,"line_end":229,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":310},{"krate":0,"index":398},{"krate":0,"index":1210},{"krate":0,"index":399},{"krate":0,"index":1212},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":1041},{"krate":0,"index":1088},{"krate":0,"index":1085},{"krate":0,"index":1082},{"krate":0,"index":1079},{"krate":0,"index":1074},{"krate":0,"index":1076},{"krate":0,"index":1068},{"krate":0,"index":1070},{"krate":0,"index":1065},{"krate":0,"index":1050},{"krate":0,"index":1046},{"krate":0,"index":1090},{"krate":0,"index":1153},{"krate":0,"index":1149},{"krate":0,"index":1145},{"krate":0,"index":1141},{"krate":0,"index":1134},{"krate":0,"index":1137},{"krate":0,"index":1126},{"krate":0,"index":1129},{"krate":0,"index":1122},{"krate":0,"index":1102},{"krate":0,"index":1097},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408}],"decl_id":null,"docs":" Basic struct for `RGB` and `RGBA` pixels. Packed, with red first, alpha last.","sig":null,"attributes":[{"value":"/ Basic struct for `RGB` and `RGBA` pixels. Packed, with red first, alpha last.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":0,"byte_end":81,"line_start":1,"line_end":1,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":82,"byte_end":85,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate is intended to be the lowest common denominator for sharing `RGB`/`RGBA` bitmaps between other crates.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":86,"byte_end":203,"line_start":3,"line_end":3,"column_start":1,"column_end":118}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":204,"byte_end":207,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ The crate includes convenience functions for converting between the struct and bytes,","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":208,"byte_end":297,"line_start":5,"line_end":5,"column_start":1,"column_end":90}},{"value":"/ and overloaded operators that work on all channels at once.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":298,"byte_end":361,"line_start":6,"line_end":6,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":362,"byte_end":365,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This crate intentionally doesn't implement color management (due to complexity of the problem),","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":366,"byte_end":465,"line_start":8,"line_end":8,"column_start":1,"column_end":100}},{"value":"/ but the structs can be parametrized to implement this if necessary. Other colorspaces are out of scope.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":466,"byte_end":573,"line_start":9,"line_end":9,"column_start":1,"column_end":108}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":574,"byte_end":577,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":578,"byte_end":589,"line_start":11,"line_end":11,"column_start":1,"column_end":12}},{"value":"/ # use rgb::*;","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":590,"byte_end":607,"line_start":12,"line_end":12,"column_start":1,"column_end":18}},{"value":"/ let pixel = RGB8 {r:0, g:100, b:255};","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":608,"byte_end":649,"line_start":13,"line_end":13,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":650,"byte_end":653,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let pixel_rgba = pixel.alpha(255);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":654,"byte_end":692,"line_start":15,"line_end":15,"column_start":1,"column_end":39}},{"value":"/ let pixel = pixel_rgba.rgb();","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":693,"byte_end":726,"line_start":16,"line_end":16,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":727,"byte_end":730,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ let pixels = vec![pixel; 100];","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":731,"byte_end":765,"line_start":18,"line_end":18,"column_start":1,"column_end":35}},{"value":"/ use rgb::ComponentBytes; // Import byte conversion trait","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":766,"byte_end":826,"line_start":19,"line_end":19,"column_start":1,"column_end":61}},{"value":"/ let bytes = pixels.as_bytes();","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":827,"byte_end":861,"line_start":20,"line_end":20,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":862,"byte_end":865,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ use rgb::ComponentMap; // Import pixel map trait","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":866,"byte_end":918,"line_start":22,"line_end":22,"column_start":1,"column_end":53}},{"value":"/ let half_bright = pixel.map(|channel| channel / 2);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":919,"byte_end":974,"line_start":23,"line_end":23,"column_start":1,"column_end":56}},{"value":"/ let doubled = half_bright * 2;","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":975,"byte_end":1009,"line_start":24,"line_end":24,"column_start":1,"column_end":35}},{"value":"/ # let _ = doubled;","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":1010,"byte_end":1032,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":1033,"byte_end":1040,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"no_std","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":1100,"byte_end":1110,"line_start":28,"line_end":28,"column_start":1,"column_end":11}},{"value":"warn(missing_docs)","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":1112,"byte_end":1134,"line_start":30,"line_end":30,"column_start":1,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":94},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":7117,"byte_end":7125,"line_start":15,"line_end":15,"column_start":11,"column_end":19},"name":"AsPixels","qualname":"::internal::convert::AsPixels","value":"AsPixels<PixelType>","parent":null,"children":[{"krate":0,"index":96},{"krate":0,"index":97}],"decl_id":null,"docs":" Casts a slice of bytes into a slice of pixels, e.g. `[u8]` to `[RGB8]`.","sig":null,"attributes":[{"value":"/ Casts a slice of bytes into a slice of pixels, e.g. `[u8]` to `[RGB8]`.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":7002,"byte_end":7077,"line_start":12,"line_end":12,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":7078,"byte_end":7081,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ See also `FromSlice`","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":7082,"byte_end":7106,"line_start":14,"line_end":14,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":7557,"byte_end":7566,"line_start":24,"line_end":24,"column_start":8,"column_end":17},"name":"as_pixels","qualname":"::internal::convert::AsPixels::as_pixels","value":"pub fn as_pixels(&Self) -> &[PixelType]","parent":{"krate":0,"index":94},"children":[],"decl_id":null,"docs":" Reinterpret the slice as a read-only/shared slice of pixels.\n Multiple consecutive elements in the slice are intepreted as a single pixel\n (depending on format, e.g. 3 for RGB, 4 for RGBA).","sig":null,"attributes":[{"value":"/ Reinterpret the slice as a read-only/shared slice of pixels.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":7143,"byte_end":7207,"line_start":16,"line_end":16,"column_start":5,"column_end":69}},{"value":"/ Multiple consecutive elements in the slice are intepreted as a single pixel","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":7212,"byte_end":7291,"line_start":17,"line_end":17,"column_start":5,"column_end":84}},{"value":"/ (depending on format, e.g. 3 for RGB, 4 for RGBA).","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":7296,"byte_end":7350,"line_start":18,"line_end":18,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":7355,"byte_end":7358,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ Leftover elements are ignored if the slice isn't evenly divisible into pixels.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":7363,"byte_end":7445,"line_start":20,"line_end":20,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":7450,"byte_end":7453,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ Use this method only when the type is known from context.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":7458,"byte_end":7519,"line_start":22,"line_end":22,"column_start":5,"column_end":66}},{"value":"/ See also `FromSlice`.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":7524,"byte_end":7549,"line_start":23,"line_end":23,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":8010,"byte_end":8023,"line_start":33,"line_end":33,"column_start":8,"column_end":21},"name":"as_pixels_mut","qualname":"::internal::convert::AsPixels::as_pixels_mut","value":"pub fn as_pixels_mut(&mut Self) -> &mut [PixelType]","parent":{"krate":0,"index":94},"children":[],"decl_id":null,"docs":" Reinterpret the slice as a mutable/exclusive slice of pixels.\n Multiple consecutive elements in the slice are intepreted as a single pixel\n (depending on format, e.g. 3 for RGB, 4 for RGBA).","sig":null,"attributes":[{"value":"/ Reinterpret the slice as a mutable/exclusive slice of pixels.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":7595,"byte_end":7660,"line_start":25,"line_end":25,"column_start":5,"column_end":70}},{"value":"/ Multiple consecutive elements in the slice are intepreted as a single pixel","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":7665,"byte_end":7744,"line_start":26,"line_end":26,"column_start":5,"column_end":84}},{"value":"/ (depending on format, e.g. 3 for RGB, 4 for RGBA).","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":7749,"byte_end":7803,"line_start":27,"line_end":27,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":7808,"byte_end":7811,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ Leftover elements are ignored if the slice isn't evenly divisible into pixels.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":7816,"byte_end":7898,"line_start":29,"line_end":29,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":7903,"byte_end":7906,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ Use this method only when the type is known from context.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":7911,"byte_end":7972,"line_start":31,"line_end":31,"column_start":5,"column_end":66}},{"value":"/ See also `FromSlice`.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":7977,"byte_end":8002,"line_start":32,"line_end":32,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":99},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":9013,"byte_end":9022,"line_start":67,"line_end":67,"column_start":11,"column_end":20},"name":"FromSlice","qualname":"::internal::convert::FromSlice","value":"FromSlice<T: Copy>","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112}],"decl_id":null,"docs":" Cast a slice of component values (bytes) as a slice of RGB/RGBA pixels","sig":null,"attributes":[{"value":"/ Cast a slice of component values (bytes) as a slice of RGB/RGBA pixels","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":8849,"byte_end":8923,"line_start":64,"line_end":64,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":8924,"byte_end":8927,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ If there's any incomplete pixel at the end of the slice it is ignored.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":8928,"byte_end":9002,"line_start":66,"line_end":66,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":9081,"byte_end":9087,"line_start":69,"line_end":69,"column_start":8,"column_end":14},"name":"as_rgb","qualname":"::internal::convert::FromSlice::as_rgb","value":"pub fn as_rgb(&Self) -> &[RGB<T>]","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Reinterpert slice as RGB pixels\n","sig":null,"attributes":[{"value":"/ Reinterpert slice as RGB pixels","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":9038,"byte_end":9073,"line_start":68,"line_end":68,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":9157,"byte_end":9164,"line_start":71,"line_end":71,"column_start":8,"column_end":15},"name":"as_rgba","qualname":"::internal::convert::FromSlice::as_rgba","value":"pub fn as_rgba(&Self) -> &[RGBA<T>]","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Reinterpert slice as RGBA pixels\n","sig":null,"attributes":[{"value":"/ Reinterpert slice as RGBA pixels","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":9113,"byte_end":9149,"line_start":70,"line_end":70,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":9361,"byte_end":9371,"line_start":76,"line_end":76,"column_start":8,"column_end":18},"name":"as_rgb_mut","qualname":"::internal::convert::FromSlice::as_rgb_mut","value":"pub fn as_rgb_mut(&mut Self) -> &mut [RGB<T>]","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Reinterpert mutable slice as RGB pixels\n","sig":null,"attributes":[{"value":"/ Reinterpert mutable slice as RGB pixels","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":9310,"byte_end":9353,"line_start":75,"line_end":75,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":9457,"byte_end":9468,"line_start":78,"line_end":78,"column_start":8,"column_end":19},"name":"as_rgba_mut","qualname":"::internal::convert::FromSlice::as_rgba_mut","value":"pub fn as_rgba_mut(&mut Self) -> &mut [RGBA<T>]","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Reinterpert mutable slice as RGBA pixels\n","sig":null,"attributes":[{"value":"/ Reinterpert mutable slice as RGBA pixels","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":9405,"byte_end":9449,"line_start":77,"line_end":77,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":9700,"byte_end":9707,"line_start":84,"line_end":84,"column_start":8,"column_end":15},"name":"as_gray","qualname":"::internal::convert::FromSlice::as_gray","value":"pub fn as_gray(&Self) -> &[Gray<T>]","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Reinterpert mutable slice as grayscale pixels\n","sig":null,"attributes":[{"value":"/ Reinterpert mutable slice as grayscale pixels","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":9643,"byte_end":9692,"line_start":83,"line_end":83,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":9802,"byte_end":9815,"line_start":86,"line_end":86,"column_start":8,"column_end":21},"name":"as_gray_alpha","qualname":"::internal::convert::FromSlice::as_gray_alpha","value":"pub fn as_gray_alpha(&Self) -> &[GrayAlpha<T>]","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Reinterpert mutable slice as grayscale pixels with alpha\n","sig":null,"attributes":[{"value":"/ Reinterpert mutable slice as grayscale pixels with alpha","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":9734,"byte_end":9794,"line_start":85,"line_end":85,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":9904,"byte_end":9915,"line_start":88,"line_end":88,"column_start":8,"column_end":19},"name":"as_gray_mut","qualname":"::internal::convert::FromSlice::as_gray_mut","value":"pub fn as_gray_mut(&mut Self) -> &mut [Gray<T>]","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Reinterpert mutable slice as grayscale pixels\n","sig":null,"attributes":[{"value":"/ Reinterpert mutable slice as grayscale pixels","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":9847,"byte_end":9896,"line_start":87,"line_end":87,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":10018,"byte_end":10035,"line_start":90,"line_end":90,"column_start":8,"column_end":25},"name":"as_gray_alpha_mut","qualname":"::internal::convert::FromSlice::as_gray_alpha_mut","value":"pub fn as_gray_alpha_mut(&mut Self) -> &mut [GrayAlpha<T>]","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Reinterpert mutable slice as grayscale pixels with alpha\n","sig":null,"attributes":[{"value":"/ Reinterpert mutable slice as grayscale pixels with alpha","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":9950,"byte_end":10010,"line_start":89,"line_end":89,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":10133,"byte_end":10139,"line_start":93,"line_end":93,"column_start":8,"column_end":14},"name":"as_bgr","qualname":"::internal::convert::FromSlice::as_bgr","value":"pub fn as_bgr(&Self) -> &[BGR<T>]","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Reinterpert slice as reverse-order BGR pixels\n","sig":null,"attributes":[{"value":"/ Reinterpert slice as reverse-order BGR pixels","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":10076,"byte_end":10125,"line_start":92,"line_end":92,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":10223,"byte_end":10230,"line_start":95,"line_end":95,"column_start":8,"column_end":15},"name":"as_bgra","qualname":"::internal::convert::FromSlice::as_bgra","value":"pub fn as_bgra(&Self) -> &[BGRA<T>]","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Reinterpert slice as reverse-order BGRA pixels\n","sig":null,"attributes":[{"value":"/ Reinterpert slice as reverse-order BGRA pixels","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":10165,"byte_end":10215,"line_start":94,"line_end":94,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":10442,"byte_end":10452,"line_start":100,"line_end":100,"column_start":8,"column_end":18},"name":"as_bgr_mut","qualname":"::internal::convert::FromSlice::as_bgr_mut","value":"pub fn as_bgr_mut(&mut Self) -> &mut [BGR<T>]","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Reinterpert ntable slice as reverse-order BGR pixels\n","sig":null,"attributes":[{"value":"/ Reinterpert ntable slice as reverse-order BGR pixels","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":10378,"byte_end":10434,"line_start":99,"line_end":99,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":10563,"byte_end":10574,"line_start":102,"line_end":102,"column_start":8,"column_end":19},"name":"as_bgra_mut","qualname":"::internal::convert::FromSlice::as_bgra_mut","value":"pub fn as_bgra_mut(&mut Self) -> &mut [BGRA<T>]","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Reinterpert mutable slice as reverse-order alpha-last BGRA pixels\n","sig":null,"attributes":[{"value":"/ Reinterpert mutable slice as reverse-order alpha-last BGRA pixels","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":10486,"byte_end":10555,"line_start":101,"line_end":101,"column_start":5,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":189},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/pixel.rs","byte_start":32600,"byte_end":32614,"line_start":3,"line_end":3,"column_start":11,"column_end":25},"name":"ComponentSlice","qualname":"::internal::pixel::ComponentSlice","value":"ComponentSlice<T>","parent":null,"children":[{"krate":0,"index":191},{"krate":0,"index":192}],"decl_id":null,"docs":" Casting the struct to slices of its components\n","sig":null,"attributes":[{"value":"/ Casting the struct to slices of its components","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/pixel.rs","byte_start":32539,"byte_end":32589,"line_start":2,"line_end":2,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/pixel.rs","byte_start":32797,"byte_end":32805,"line_start":7,"line_end":7,"column_start":8,"column_end":16},"name":"as_slice","qualname":"::internal::pixel::ComponentSlice::as_slice","value":"pub fn as_slice(&Self) -> &[T]","parent":{"krate":0,"index":189},"children":[],"decl_id":null,"docs":" The components interpreted as an array, e.g. one `RGB` expands to 3 elements.","sig":null,"attributes":[{"value":"/ The components interpreted as an array, e.g. one `RGB` expands to 3 elements.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/pixel.rs","byte_start":32624,"byte_end":32705,"line_start":4,"line_end":4,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/pixel.rs","byte_start":32710,"byte_end":32713,"line_start":5,"line_end":5,"column_start":5,"column_end":8}},{"value":"/ It's implemented for individual pixels as well as slices of pixels.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/pixel.rs","byte_start":32718,"byte_end":32789,"line_start":6,"line_end":6,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/pixel.rs","byte_start":33225,"byte_end":33237,"line_start":20,"line_end":20,"column_start":8,"column_end":20},"name":"as_mut_slice","qualname":"::internal::pixel::ComponentSlice::as_mut_slice","value":"pub fn as_mut_slice(&mut Self) -> &mut [T]","parent":{"krate":0,"index":189},"children":[],"decl_id":null,"docs":" The components interpreted as a mutable array, e.g. one `RGB` expands to 3 elements.","sig":null,"attributes":[{"value":"/ The components interpreted as a mutable array, e.g. one `RGB` expands to 3 elements.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/pixel.rs","byte_start":32827,"byte_end":32915,"line_start":9,"line_end":9,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/pixel.rs","byte_start":32920,"byte_end":32923,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ It's implemented for individual pixels as well as slices of pixels.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/pixel.rs","byte_start":32928,"byte_end":32999,"line_start":11,"line_end":11,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/pixel.rs","byte_start":33004,"byte_end":33007,"line_start":12,"line_end":12,"column_start":5,"column_end":8}},{"value":"/ If you get an error when calling this on an array, add `[..]`","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/pixel.rs","byte_start":33012,"byte_end":33077,"line_start":13,"line_end":13,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/pixel.rs","byte_start":33082,"byte_end":33085,"line_start":14,"line_end":14,"column_start":5,"column_end":8}},{"value":"/ > use of unstable library feature 'array_methods'","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/pixel.rs","byte_start":33090,"byte_end":33143,"line_start":15,"line_end":15,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/pixel.rs","byte_start":33148,"byte_end":33151,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/pixel.rs","byte_start":33156,"byte_end":33174,"line_start":17,"line_end":17,"column_start":5,"column_end":23}},{"value":"/ arr[..].as_mut_slice()","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/pixel.rs","byte_start":33179,"byte_end":33205,"line_start":18,"line_end":18,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/pixel.rs","byte_start":33210,"byte_end":33217,"line_start":19,"line_end":19,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":193},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/pixel.rs","byte_start":33792,"byte_end":33806,"line_start":37,"line_end":37,"column_start":11,"column_end":25},"name":"ComponentBytes","qualname":"::internal::pixel::ComponentBytes","value":"ComponentBytes<T: crate::Pod>","parent":null,"children":[{"krate":0,"index":195},{"krate":0,"index":196}],"decl_id":null,"docs":" Casting a slice of `RGB/A` values to a slice of `u8`","sig":null,"attributes":[{"value":"/ Casting a slice of `RGB/A` values to a slice of `u8`","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/pixel.rs","byte_start":33265,"byte_end":33321,"line_start":23,"line_end":23,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/pixel.rs","byte_start":33322,"byte_end":33325,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ If instead of `RGB8` you use `RGB<MyCustomType>`, and you want to cast from/to that custom type,","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/pixel.rs","byte_start":33326,"byte_end":33426,"line_start":25,"line_end":25,"column_start":1,"column_end":101}},{"value":"/ implement the `Plain` trait for it:","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/pixel.rs","byte_start":33427,"byte_end":33466,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/pixel.rs","byte_start":33467,"byte_end":33470,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/pixel.rs","byte_start":33471,"byte_end":33482,"line_start":28,"line_end":28,"column_start":1,"column_end":12}},{"value":"/ # #[derive(Copy, Clone)]","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/pixel.rs","byte_start":33483,"byte_end":33511,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/ # struct MyCustomType;","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/pixel.rs","byte_start":33512,"byte_end":33538,"line_start":30,"line_end":30,"column_start":1,"column_end":27}},{"value":"/ unsafe impl rgb::Pod for MyCustomType {}","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/pixel.rs","byte_start":33539,"byte_end":33583,"line_start":31,"line_end":31,"column_start":1,"column_end":45}},{"value":"/ unsafe impl rgb::Zeroable for MyCustomType {}","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/pixel.rs","byte_start":33584,"byte_end":33633,"line_start":32,"line_end":32,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/pixel.rs","byte_start":33634,"byte_end":33641,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/pixel.rs","byte_start":33642,"byte_end":33645,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Plain types are not allowed to contain struct padding, booleans, chars, enums, references or pointers.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/pixel.rs","byte_start":33646,"byte_end":33752,"line_start":35,"line_end":35,"column_start":1,"column_end":107}},{"value":"cfg(feature = \"as-bytes\")","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/pixel.rs","byte_start":33753,"byte_end":33781,"line_start":36,"line_end":36,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/pixel.rs","byte_start":33999,"byte_end":34007,"line_start":40,"line_end":40,"column_start":8,"column_end":16},"name":"as_bytes","qualname":"::internal::pixel::ComponentBytes::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" The components interpreted as raw bytes, in machine's native endian. In `RGB` bytes of the red component are first.\n","sig":null,"attributes":[{"value":"/ The components interpreted as raw bytes, in machine's native endian. In `RGB` bytes of the red component are first.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/pixel.rs","byte_start":33858,"byte_end":33977,"line_start":38,"line_end":38,"column_start":5,"column_end":124}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/pixel.rs","byte_start":33982,"byte_end":33991,"line_start":39,"line_end":39,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/pixel.rs","byte_start":34401,"byte_end":34413,"line_start":50,"line_end":50,"column_start":8,"column_end":20},"name":"as_bytes_mut","qualname":"::internal::pixel::ComponentBytes::as_bytes_mut","value":"pub fn as_bytes_mut(&mut Self) -> &mut [u8]","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" The components interpreted as raw bytes, in machine's native endian. In `RGB` bytes of the red component are first.\n","sig":null,"attributes":[{"value":"/ The components interpreted as raw bytes, in machine's native endian. In `RGB` bytes of the red component are first.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/pixel.rs","byte_start":34260,"byte_end":34379,"line_start":48,"line_end":48,"column_start":5,"column_end":124}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/pixel.rs","byte_start":34384,"byte_end":34393,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":197},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/pixel.rs","byte_start":35004,"byte_end":35016,"line_start":70,"line_end":70,"column_start":11,"column_end":23},"name":"ComponentMap","qualname":"::internal::pixel::ComponentMap","value":"ComponentMap<DestPixel, SrcComponent, DestComponent>","parent":null,"children":[{"krate":0,"index":201}],"decl_id":null,"docs":" Applying operation to every component","sig":null,"attributes":[{"value":"/ Applying operation to every component","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/pixel.rs","byte_start":34682,"byte_end":34723,"line_start":59,"line_end":59,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/pixel.rs","byte_start":34724,"byte_end":34727,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/pixel.rs","byte_start":34728,"byte_end":34739,"line_start":61,"line_end":61,"column_start":1,"column_end":12}},{"value":"/ use rgb::ComponentMap;","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/pixel.rs","byte_start":34740,"byte_end":34766,"line_start":62,"line_end":62,"column_start":1,"column_end":27}},{"value":"/ # let pixel = rgb::RGB::new(0u8,0,0);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/pixel.rs","byte_start":34767,"byte_end":34808,"line_start":63,"line_end":63,"column_start":1,"column_end":42}},{"value":"/ let inverted = pixel.map(|c| 255 - c);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/pixel.rs","byte_start":34809,"byte_end":34851,"line_start":64,"line_end":64,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/pixel.rs","byte_start":34852,"byte_end":34855,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ // For simple math there are Add/Sub/Mul implementations:","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/pixel.rs","byte_start":34856,"byte_end":34917,"line_start":66,"line_end":66,"column_start":1,"column_end":62}},{"value":"/ let halved = pixel.map(|c| c / 2);","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/pixel.rs","byte_start":34918,"byte_end":34956,"line_start":67,"line_end":67,"column_start":1,"column_end":39}},{"value":"/ let doubled = pixel * 2;","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/pixel.rs","byte_start":34957,"byte_end":34985,"line_start":68,"line_end":68,"column_start":1,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/pixel.rs","byte_start":34986,"byte_end":34993,"line_start":69,"line_end":69,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/pixel.rs","byte_start":35266,"byte_end":35269,"line_start":74,"line_end":74,"column_start":8,"column_end":11},"name":"map","qualname":"::internal::pixel::ComponentMap::map","value":"pub fn map<Callback>(&Self, Callback) -> DestPixel where\nCallback: FnMut(SrcComponent) -> DestComponent","parent":{"krate":0,"index":197},"children":[],"decl_id":null,"docs":" Convenience function (equivalent of `self.iter().map().collect()`) for applying the same formula to every component.","sig":null,"attributes":[{"value":"/ Convenience function (equivalent of `self.iter().map().collect()`) for applying the same formula to every component.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/pixel.rs","byte_start":35063,"byte_end":35183,"line_start":71,"line_end":71,"column_start":5,"column_end":125}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/pixel.rs","byte_start":35188,"byte_end":35191,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Note that it returns the pixel directly, not an Interator.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/pixel.rs","byte_start":35196,"byte_end":35258,"line_start":73,"line_end":73,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgb.rs","byte_start":35641,"byte_end":35644,"line_start":12,"line_end":12,"column_start":18,"column_end":21},"name":"new","qualname":"<RGB<T>>::new","value":"pub const fn new(T, T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convenience function for creating a new pixel\n The order of arguments is R,G,B\n","sig":null,"attributes":[{"value":"/ Convenience function for creating a new pixel","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgb.rs","byte_start":35512,"byte_end":35561,"line_start":9,"line_end":9,"column_start":5,"column_end":54}},{"value":"/ The order of arguments is R,G,B","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgb.rs","byte_start":35566,"byte_end":35601,"line_start":10,"line_end":10,"column_start":5,"column_end":40}},{"value":"inline(always)","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgb.rs","byte_start":35606,"byte_end":35623,"line_start":11,"line_end":11,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgb.rs","byte_start":35970,"byte_end":35973,"line_start":22,"line_end":22,"column_start":18,"column_end":21},"name":"new","qualname":"<BGR<T>>::new","value":"pub const fn new(T, T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convenience function for creating a new pixel\n Wargning: The order of arguments is R,G,B\n","sig":null,"attributes":[{"value":"/ Convenience function for creating a new pixel","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgb.rs","byte_start":35728,"byte_end":35777,"line_start":18,"line_end":18,"column_start":5,"column_end":54}},{"value":"/ Wargning: The order of arguments is R,G,B","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgb.rs","byte_start":35782,"byte_end":35827,"line_start":19,"line_end":19,"column_start":5,"column_end":50}},{"value":"deprecated(note =\n             \"This function has a misleading order of arguments. Use BGR{} literal instead\")","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgb.rs","byte_start":35832,"byte_end":35930,"line_start":20,"line_end":20,"column_start":5,"column_end":103}},{"value":"inline(always)","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgb.rs","byte_start":35935,"byte_end":35952,"line_start":21,"line_end":21,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":42352,"byte_end":42355,"line_start":11,"line_end":11,"column_start":18,"column_end":21},"name":"new","qualname":"<RGBA<T>>::new","value":"pub const fn new(T, T, T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convenience function for creating a new pixel\n The order of arguments is R,G,B,A\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":42221,"byte_end":42238,"line_start":8,"line_end":8,"column_start":5,"column_end":22}},{"value":"/ Convenience function for creating a new pixel","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":42243,"byte_end":42292,"line_start":9,"line_end":9,"column_start":5,"column_end":54}},{"value":"/ The order of arguments is R,G,B,A","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":42297,"byte_end":42334,"line_start":10,"line_end":10,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":42580,"byte_end":42589,"line_start":20,"line_end":20,"column_start":18,"column_end":27},"name":"new_alpha","qualname":"<RGBA<T, A>>::new_alpha","value":"pub const fn new_alpha(T, T, T, A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convenience function for creating a new pixel\n The order of arguments is R,G,B,A\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":42449,"byte_end":42466,"line_start":17,"line_end":17,"column_start":5,"column_end":22}},{"value":"/ Convenience function for creating a new pixel","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":42471,"byte_end":42520,"line_start":18,"line_end":18,"column_start":5,"column_end":54}},{"value":"/ The order of arguments is R,G,B,A","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":42525,"byte_end":42562,"line_start":19,"line_end":19,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":42922,"byte_end":42925,"line_start":30,"line_end":30,"column_start":18,"column_end":21},"name":"new","qualname":"<BGRA<T>>::new","value":"pub const fn new(T, T, T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convenience function for creating a new pixel\n Warning: The order of arguments is R,G,B,A\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":42678,"byte_end":42695,"line_start":26,"line_end":26,"column_start":5,"column_end":22}},{"value":"/ Convenience function for creating a new pixel","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":42700,"byte_end":42749,"line_start":27,"line_end":27,"column_start":5,"column_end":54}},{"value":"/ Warning: The order of arguments is R,G,B,A","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":42754,"byte_end":42800,"line_start":28,"line_end":28,"column_start":5,"column_end":51}},{"value":"deprecated(note =\n             \"This function has a misleading order of arguments. Use BGRA{} literal instead\")","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":42805,"byte_end":42904,"line_start":29,"line_end":29,"column_start":5,"column_end":104}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":43263,"byte_end":43272,"line_start":40,"line_end":40,"column_start":18,"column_end":27},"name":"new_alpha","qualname":"<BGRA<T, A>>::new_alpha","value":"pub const fn new_alpha(T, T, T, A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convenience function for creating a new pixel\n Warning: The order of arguments is R,G,B,A\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":43019,"byte_end":43036,"line_start":36,"line_end":36,"column_start":5,"column_end":22}},{"value":"/ Convenience function for creating a new pixel","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":43041,"byte_end":43090,"line_start":37,"line_end":37,"column_start":5,"column_end":54}},{"value":"/ Warning: The order of arguments is R,G,B,A","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":43095,"byte_end":43141,"line_start":38,"line_end":38,"column_start":5,"column_end":51}},{"value":"deprecated(note =\n             \"This function has a misleading order of arguments. Use BGRA{} literal instead\")","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":43146,"byte_end":43245,"line_start":39,"line_end":39,"column_start":5,"column_end":104}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":50271,"byte_end":50278,"line_start":248,"line_end":248,"column_start":12,"column_end":19},"name":"rgb_mut","qualname":"<RGBA<T, A>>::rgb_mut","value":"pub fn rgb_mut(&mut Self) -> &mut RGB<T>","parent":null,"children":[],"decl_id":null,"docs":" Provide a mutable view of only RGB components (leaving out alpha).\n Useful to change color without changing opacity.\n","sig":null,"attributes":[{"value":"/ Provide a mutable view of only RGB components (leaving out alpha).","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":50110,"byte_end":50180,"line_start":245,"line_end":245,"column_start":5,"column_end":75}},{"value":"/ Useful to change color without changing opacity.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":50185,"byte_end":50237,"line_start":246,"line_end":246,"column_start":5,"column_end":57}},{"value":"inline(always)","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":50242,"byte_end":50259,"line_start":247,"line_end":247,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":50651,"byte_end":50658,"line_start":260,"line_end":260,"column_start":12,"column_end":19},"name":"rgb_mut","qualname":"<BGRA<T, A>>::rgb_mut","value":"pub fn rgb_mut(&mut Self) -> &mut BGR<T>","parent":null,"children":[],"decl_id":null,"docs":" Provide a mutable view of only RGB components (leaving out alpha).\n Useful to change color without changing opacity.\n","sig":null,"attributes":[{"value":"/ Provide a mutable view of only RGB components (leaving out alpha).","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":50421,"byte_end":50491,"line_start":256,"line_end":256,"column_start":5,"column_end":75}},{"value":"/ Useful to change color without changing opacity.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":50496,"byte_end":50548,"line_start":257,"line_end":257,"column_start":5,"column_end":57}},{"value":"inline(always)","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":50553,"byte_end":50570,"line_start":258,"line_end":258,"column_start":5,"column_end":22}},{"value":"deprecated(note = \"This function will change. Use bgr_mut()\")","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":50575,"byte_end":50639,"line_start":259,"line_end":259,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":50936,"byte_end":50943,"line_start":269,"line_end":269,"column_start":12,"column_end":19},"name":"bgr_mut","qualname":"<BGRA<T, A>>::bgr_mut","value":"pub fn bgr_mut(&mut Self) -> &mut BGR<T>","parent":null,"children":[],"decl_id":null,"docs":" Provide a mutable view of only RGB components (leaving out alpha).\n Useful to change color without changing opacity.\n","sig":null,"attributes":[{"value":"/ Provide a mutable view of only RGB components (leaving out alpha).","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":50775,"byte_end":50845,"line_start":266,"line_end":266,"column_start":5,"column_end":75}},{"value":"/ Useful to change color without changing opacity.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":50850,"byte_end":50902,"line_start":267,"line_end":267,"column_start":5,"column_end":57}},{"value":"inline(always)","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":50907,"byte_end":50924,"line_start":268,"line_end":268,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":51755,"byte_end":51758,"line_start":296,"line_end":296,"column_start":12,"column_end":15},"name":"rgb","qualname":"<RGBA<T, A>>::rgb","value":"pub fn rgb(&Self) -> RGB<T>","parent":null,"children":[],"decl_id":null,"docs":" Copy RGB components out of the RGBA struct","sig":null,"attributes":[{"value":"/ Copy RGB components out of the RGBA struct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":51600,"byte_end":51646,"line_start":292,"line_end":292,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":51651,"byte_end":51654,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ Note: you can use `.into()` to convert between other types","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":51659,"byte_end":51721,"line_start":294,"line_end":294,"column_start":5,"column_end":67}},{"value":"inline(always)","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":51726,"byte_end":51743,"line_start":295,"line_end":295,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":52109,"byte_end":52112,"line_start":307,"line_end":307,"column_start":12,"column_end":15},"name":"rgb","qualname":"<BGRA<T, A>>::rgb","value":"pub fn rgb(&Self) -> BGR<T>","parent":null,"children":[],"decl_id":null,"docs":" Copy RGB components out of the RGBA struct","sig":null,"attributes":[{"value":"/ Copy RGB components out of the RGBA struct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":51889,"byte_end":51935,"line_start":302,"line_end":302,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":51940,"byte_end":51943,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ Note: you can use `.into()` to convert between other types","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":51948,"byte_end":52010,"line_start":304,"line_end":304,"column_start":5,"column_end":67}},{"value":"inline(always)","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":52015,"byte_end":52032,"line_start":305,"line_end":305,"column_start":5,"column_end":22}},{"value":"deprecated(note = \"This function will change. Use bgr()\")","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":52037,"byte_end":52097,"line_start":306,"line_end":306,"column_start":5,"column_end":65}}]},{"kind":"Mod","id":{"krate":0,"index":310},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"alt","qualname":"::alt","value":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","parent":null,"children":[{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":829},{"krate":0,"index":876},{"krate":0,"index":873},{"krate":0,"index":870},{"krate":0,"index":867},{"krate":0,"index":862},{"krate":0,"index":864},{"krate":0,"index":856},{"krate":0,"index":858},{"krate":0,"index":853},{"krate":0,"index":838},{"krate":0,"index":834},{"krate":0,"index":878},{"krate":0,"index":941},{"krate":0,"index":937},{"krate":0,"index":933},{"krate":0,"index":929},{"krate":0,"index":922},{"krate":0,"index":925},{"krate":0,"index":914},{"krate":0,"index":917},{"krate":0,"index":910},{"krate":0,"index":890},{"krate":0,"index":885},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":944},{"krate":0,"index":982},{"krate":0,"index":979},{"krate":0,"index":976},{"krate":0,"index":973},{"krate":0,"index":968},{"krate":0,"index":970},{"krate":0,"index":962},{"krate":0,"index":964},{"krate":0,"index":959},{"krate":0,"index":952},{"krate":0,"index":948},{"krate":0,"index":984},{"krate":0,"index":1038},{"krate":0,"index":1034},{"krate":0,"index":1030},{"krate":0,"index":1026},{"krate":0,"index":1019},{"krate":0,"index":1022},{"krate":0,"index":1011},{"krate":0,"index":1014},{"krate":0,"index":1007},{"krate":0,"index":995},{"krate":0,"index":990},{"krate":0,"index":318},{"krate":0,"index":320},{"krate":0,"index":323},{"krate":0,"index":325},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":335},{"krate":0,"index":339},{"krate":0,"index":342},{"krate":0,"index":346},{"krate":0,"index":351},{"krate":0,"index":362},{"krate":0,"index":367},{"krate":0,"index":372},{"krate":0,"index":376},{"krate":0,"index":380},{"krate":0,"index":382},{"krate":0,"index":386},{"krate":0,"index":390},{"krate":0,"index":392},{"krate":0,"index":395}],"decl_id":null,"docs":" BGR/BGRA alernative layouts & grayscale","sig":null,"attributes":[{"value":"/ BGR/BGRA alernative layouts & grayscale","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":1388,"byte_end":1431,"line_start":47,"line_end":47,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":1432,"byte_end":1435,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ BGR might be useful for some Windows or OpenGL APIs.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":1436,"byte_end":1492,"line_start":49,"line_end":49,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":829},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":55565,"byte_end":55568,"line_start":9,"line_end":9,"column_start":12,"column_end":15},"name":"BGR","qualname":"::alt::BGR","value":"BGR { b, g, r }","parent":null,"children":[{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":833}],"decl_id":null,"docs":" RGB in reverse byte order\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":55373,"byte_end":55383,"line_start":5,"line_end":5,"column_start":1,"column_end":11}},{"value":"/ RGB in reverse byte order","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":55524,"byte_end":55553,"line_start":8,"line_end":8,"column_start":1,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":831},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":55613,"byte_end":55614,"line_start":11,"line_end":11,"column_start":9,"column_end":10},"name":"b","qualname":"::alt::BGR::b","value":"ComponentType","parent":{"krate":0,"index":829},"children":[],"decl_id":null,"docs":" Blue first\n","sig":null,"attributes":[{"value":"/ Blue first","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":55590,"byte_end":55604,"line_start":10,"line_end":10,"column_start":5,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":832},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":55653,"byte_end":55654,"line_start":13,"line_end":13,"column_start":9,"column_end":10},"name":"g","qualname":"::alt::BGR::g","value":"ComponentType","parent":{"krate":0,"index":829},"children":[],"decl_id":null,"docs":" Green\n","sig":null,"attributes":[{"value":"/ Green","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":55635,"byte_end":55644,"line_start":12,"line_end":12,"column_start":5,"column_end":14}}]},{"kind":"Field","id":{"krate":0,"index":833},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":55696,"byte_end":55697,"line_start":15,"line_end":15,"column_start":9,"column_end":10},"name":"r","qualname":"::alt::BGR::r","value":"ComponentType","parent":{"krate":0,"index":829},"children":[],"decl_id":null,"docs":" Red last\n","sig":null,"attributes":[{"value":"/ Red last","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":55675,"byte_end":55687,"line_start":14,"line_end":14,"column_start":5,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":878},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":55889,"byte_end":55893,"line_start":22,"line_end":22,"column_start":12,"column_end":16},"name":"BGRA","qualname":"::alt::BGRA","value":"BGRA { b, g, r, a }","parent":null,"children":[{"krate":0,"index":881},{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":884}],"decl_id":null,"docs":" BGR+A\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":55717,"byte_end":55727,"line_start":18,"line_end":18,"column_start":1,"column_end":11}},{"value":"/ BGR+A","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":55868,"byte_end":55877,"line_start":21,"line_end":21,"column_start":1,"column_end":10}}]},{"kind":"Field","id":{"krate":0,"index":881},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":55974,"byte_end":55975,"line_start":24,"line_end":24,"column_start":9,"column_end":10},"name":"b","qualname":"::alt::BGRA::b","value":"ComponentType","parent":{"krate":0,"index":878},"children":[],"decl_id":null,"docs":" Blue first\n","sig":null,"attributes":[{"value":"/ Blue first","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":55951,"byte_end":55965,"line_start":23,"line_end":23,"column_start":5,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":882},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":56014,"byte_end":56015,"line_start":26,"line_end":26,"column_start":9,"column_end":10},"name":"g","qualname":"::alt::BGRA::g","value":"ComponentType","parent":{"krate":0,"index":878},"children":[],"decl_id":null,"docs":" Green\n","sig":null,"attributes":[{"value":"/ Green","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":55996,"byte_end":56005,"line_start":25,"line_end":25,"column_start":5,"column_end":14}}]},{"kind":"Field","id":{"krate":0,"index":883},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":56052,"byte_end":56053,"line_start":28,"line_end":28,"column_start":9,"column_end":10},"name":"r","qualname":"::alt::BGRA::r","value":"ComponentType","parent":{"krate":0,"index":878},"children":[],"decl_id":null,"docs":" Red\n","sig":null,"attributes":[{"value":"/ Red","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":56036,"byte_end":56043,"line_start":27,"line_end":27,"column_start":5,"column_end":12}}]},{"kind":"Field","id":{"krate":0,"index":884},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":56097,"byte_end":56098,"line_start":30,"line_end":30,"column_start":9,"column_end":10},"name":"a","qualname":"::alt::BGRA::a","value":"AlphaComponentType","parent":{"krate":0,"index":878},"children":[],"decl_id":null,"docs":" Alpha last\n","sig":null,"attributes":[{"value":"/ Alpha last","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":56074,"byte_end":56088,"line_start":29,"line_end":29,"column_start":5,"column_end":19}}]},{"kind":"Type","id":{"krate":0,"index":314},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":57008,"byte_end":57012,"line_start":66,"line_end":66,"column_start":10,"column_end":14},"name":"BGR8","qualname":"::alt::BGR8","value":"BGR<u8>","parent":null,"children":[],"decl_id":null,"docs":" 8-bit BGR\n","sig":null,"attributes":[{"value":"/ 8-bit BGR","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":56985,"byte_end":56998,"line_start":65,"line_end":65,"column_start":1,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":315},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":57076,"byte_end":57081,"line_start":69,"line_end":69,"column_start":10,"column_end":15},"name":"BGR16","qualname":"::alt::BGR16","value":"BGR<u16>","parent":null,"children":[],"decl_id":null,"docs":" 16-bit BGR in machine's native endian\n","sig":null,"attributes":[{"value":"/ 16-bit BGR in machine's native endian","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":57025,"byte_end":57066,"line_start":68,"line_end":68,"column_start":1,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":316},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":57119,"byte_end":57124,"line_start":72,"line_end":72,"column_start":10,"column_end":15},"name":"BGRA8","qualname":"::alt::BGRA8","value":"BGRA<u8>","parent":null,"children":[],"decl_id":null,"docs":" 8-bit BGRA\n","sig":null,"attributes":[{"value":"/ 8-bit BGRA","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":57095,"byte_end":57109,"line_start":71,"line_end":71,"column_start":1,"column_end":15}}]},{"kind":"Type","id":{"krate":0,"index":317},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":57421,"byte_end":57427,"line_start":83,"line_end":83,"column_start":10,"column_end":16},"name":"BGRA16","qualname":"::alt::BGRA16","value":"BGRA<u16>","parent":null,"children":[],"decl_id":null,"docs":" 16-bit BGR in machine's native endian\n","sig":null,"attributes":[{"value":"/ 16-bit BGR in machine's native endian","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":57370,"byte_end":57411,"line_start":82,"line_end":82,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":944},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":57970,"byte_end":57974,"line_start":99,"line_end":99,"column_start":12,"column_end":16},"name":"Gray","qualname":"::alt::Gray","value":"","parent":null,"children":[],"decl_id":null,"docs":" Grayscale. Use `.0` or `*` (deref) to access the value.\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":57748,"byte_end":57758,"line_start":95,"line_end":95,"column_start":1,"column_end":11}},{"value":"/ Grayscale. Use `.0` or `*` (deref) to access the value.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":57899,"byte_end":57958,"line_start":98,"line_end":98,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":947},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":58020,"byte_end":58037,"line_start":101,"line_end":101,"column_start":5,"column_end":22},"name":"0","qualname":"::alt::Gray::0","value":"ComponentType","parent":{"krate":0,"index":944},"children":[],"decl_id":null,"docs":" brightness level\n","sig":null,"attributes":[{"value":"/ brightness level","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":57995,"byte_end":58015,"line_start":100,"line_end":100,"column_start":5,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":984},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":58256,"byte_end":58265,"line_start":108,"line_end":108,"column_start":12,"column_end":21},"name":"GrayAlpha","qualname":"::alt::GrayAlpha","value":"","parent":null,"children":[],"decl_id":null,"docs":" Grayscale with alpha. Use `.0`/`.1` to access.\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":58043,"byte_end":58053,"line_start":104,"line_end":104,"column_start":1,"column_end":11}},{"value":"/ Grayscale with alpha. Use `.0`/`.1` to access.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":58194,"byte_end":58244,"line_start":107,"line_end":107,"column_start":1,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":988},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":58347,"byte_end":58364,"line_start":110,"line_end":110,"column_start":5,"column_end":22},"name":"0","qualname":"::alt::GrayAlpha::0","value":"ComponentType","parent":{"krate":0,"index":984},"children":[],"decl_id":null,"docs":" brightness level\n","sig":null,"attributes":[{"value":"/ brightness level","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":58322,"byte_end":58342,"line_start":109,"line_end":109,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":989},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":58384,"byte_end":58406,"line_start":112,"line_end":112,"column_start":5,"column_end":27},"name":"1","qualname":"::alt::GrayAlpha::1","value":"AlphaComponentType","parent":{"krate":0,"index":984},"children":[],"decl_id":null,"docs":" alpha\n","sig":null,"attributes":[{"value":"/ alpha","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":58370,"byte_end":58379,"line_start":111,"line_end":111,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":328},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":58874,"byte_end":58879,"line_start":125,"line_end":125,"column_start":10,"column_end":15},"name":"GRAY8","qualname":"::alt::GRAY8","value":"Gray<u8>","parent":null,"children":[],"decl_id":null,"docs":" 8-bit gray\n","sig":null,"attributes":[{"value":"/ 8-bit gray","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":58850,"byte_end":58864,"line_start":124,"line_end":124,"column_start":1,"column_end":15}}]},{"kind":"Type","id":{"krate":0,"index":329},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":58945,"byte_end":58951,"line_start":128,"line_end":128,"column_start":10,"column_end":16},"name":"GRAY16","qualname":"::alt::GRAY16","value":"Gray<u16>","parent":null,"children":[],"decl_id":null,"docs":" 16-bit gray in machine's native endian\n","sig":null,"attributes":[{"value":"/ 16-bit gray in machine's native endian","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":58893,"byte_end":58935,"line_start":127,"line_end":127,"column_start":1,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":330},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":59028,"byte_end":59034,"line_start":131,"line_end":131,"column_start":10,"column_end":16},"name":"GRAYA8","qualname":"::alt::GRAYA8","value":"GrayAlpha<u8>","parent":null,"children":[],"decl_id":null,"docs":" 8-bit gray with alpha in machine's native endian\n","sig":null,"attributes":[{"value":"/ 8-bit gray with alpha in machine's native endian","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":58966,"byte_end":59018,"line_start":130,"line_end":130,"column_start":1,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":331},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":59116,"byte_end":59123,"line_start":134,"line_end":134,"column_start":10,"column_end":17},"name":"GRAYA16","qualname":"::alt::GRAYA16","value":"GrayAlpha<u16>","parent":null,"children":[],"decl_id":null,"docs":" 16-bit gray with alpha in machine's native endian\n","sig":null,"attributes":[{"value":"/ 16-bit gray with alpha in machine's native endian","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":59053,"byte_end":59106,"line_start":133,"line_end":133,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":59228,"byte_end":59231,"line_start":139,"line_end":139,"column_start":18,"column_end":21},"name":"new","qualname":"<Gray<T>>::new","value":"pub const fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" New grayscale pixel\n","sig":null,"attributes":[{"value":"/ New grayscale pixel","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":59165,"byte_end":59188,"line_start":137,"line_end":137,"column_start":5,"column_end":28}},{"value":"inline(always)","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":59193,"byte_end":59210,"line_start":138,"line_end":138,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":59676,"byte_end":59680,"line_start":162,"line_end":162,"column_start":12,"column_end":16},"name":"gray","qualname":"<GrayAlpha<T, A>>::gray","value":"pub fn gray(&Self) -> Gray<T>","parent":null,"children":[],"decl_id":null,"docs":" Copy `Gray` component out of the `GrayAlpha` struct\n","sig":null,"attributes":[{"value":"/ Copy `Gray` component out of the `GrayAlpha` struct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":59587,"byte_end":59642,"line_start":160,"line_end":160,"column_start":5,"column_end":60}},{"value":"inline(always)","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":59647,"byte_end":59664,"line_start":161,"line_end":161,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":59841,"byte_end":59844,"line_start":170,"line_end":170,"column_start":18,"column_end":21},"name":"new","qualname":"<GrayAlpha<T, A>>::new","value":"pub const fn new(T, A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" New grayscale+alpha pixel\n","sig":null,"attributes":[{"value":"/ New grayscale+alpha pixel","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":59772,"byte_end":59801,"line_start":168,"line_end":168,"column_start":5,"column_end":34}},{"value":"inline(always)","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":59806,"byte_end":59823,"line_start":169,"line_end":169,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":60029,"byte_end":60037,"line_start":176,"line_end":176,"column_start":12,"column_end":20},"name":"gray_mut","qualname":"<GrayAlpha<T, A>>::gray_mut","value":"pub fn gray_mut(&mut Self) -> &mut Gray<T>","parent":null,"children":[],"decl_id":null,"docs":" Provide a mutable view of only `Gray` component (leaving out alpha).\n","sig":null,"attributes":[{"value":"/ Provide a mutable view of only `Gray` component (leaving out alpha).","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":59923,"byte_end":59995,"line_start":174,"line_end":174,"column_start":5,"column_end":77}},{"value":"inline(always)","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":60000,"byte_end":60017,"line_start":175,"line_end":175,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":60324,"byte_end":60329,"line_start":187,"line_end":187,"column_start":12,"column_end":17},"name":"alpha","qualname":"<GrayAlpha<T, A>>::alpha","value":"pub fn alpha(&Self, A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `GrayAlpha` with the new alpha value, but same gray value\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":60194,"byte_end":60211,"line_start":184,"line_end":184,"column_start":5,"column_end":22}},{"value":"/ Create a new `GrayAlpha` with the new alpha value, but same gray value","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":60216,"byte_end":60290,"line_start":185,"line_end":185,"column_start":5,"column_end":79}},{"value":"inline(always)","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":60295,"byte_end":60312,"line_start":186,"line_end":186,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":60498,"byte_end":60507,"line_start":193,"line_end":193,"column_start":12,"column_end":21},"name":"map_alpha","qualname":"<GrayAlpha<T, A>>::map_alpha","value":"pub fn map_alpha<F, B>(&Self, F) -> GrayAlpha<T, B> where F: FnOnce(A) -> B","parent":null,"children":[],"decl_id":null,"docs":" Create a new `GrayAlpha` with a new alpha value created by the callback.\n","sig":null,"attributes":[{"value":"/ Create a new `GrayAlpha` with a new alpha value created by the callback.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":60388,"byte_end":60464,"line_start":191,"line_end":191,"column_start":5,"column_end":81}},{"value":"inline(always)","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":60469,"byte_end":60486,"line_start":192,"line_end":192,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":60755,"byte_end":60763,"line_start":201,"line_end":201,"column_start":12,"column_end":20},"name":"map_gray","qualname":"<GrayAlpha<T, A>>::map_gray","value":"pub fn map_gray<F, U, B>(&Self, F) -> GrayAlpha<U, B> where F: FnOnce(T) -> U,\nU: Clone, B: From<A> + Clone","parent":null,"children":[],"decl_id":null,"docs":" Create new `GrayAlpha` with the same alpha value, but different `Gray` value\n","sig":null,"attributes":[{"value":"/ Create new `GrayAlpha` with the same alpha value, but different `Gray` value","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":60641,"byte_end":60721,"line_start":199,"line_end":199,"column_start":5,"column_end":85}},{"value":"inline(always)","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":60726,"byte_end":60743,"line_start":200,"line_end":200,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":1041},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":2197,"byte_end":2200,"line_start":72,"line_end":72,"column_start":12,"column_end":15},"name":"RGB","qualname":"::RGB","value":"RGB { r, g, b }","parent":null,"children":[{"krate":0,"index":1043},{"krate":0,"index":1044},{"krate":0,"index":1045}],"decl_id":null,"docs":" The RGB pixel","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":1862,"byte_end":1872,"line_start":65,"line_end":65,"column_start":1,"column_end":11}},{"value":"/ The RGB pixel","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":2013,"byte_end":2030,"line_start":68,"line_end":68,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":2031,"byte_end":2034,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ The component type can be `u8` (aliased as `RGB8`), `u16` (aliased as `RGB16`),","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":2035,"byte_end":2118,"line_start":70,"line_end":70,"column_start":1,"column_end":84}},{"value":"/ or any other type (but simple copyable types are recommended.)","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":2119,"byte_end":2185,"line_start":71,"line_end":71,"column_start":1,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":1043},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":2238,"byte_end":2239,"line_start":74,"line_end":74,"column_start":9,"column_end":10},"name":"r","qualname":"::RGB::r","value":"ComponentType","parent":{"krate":0,"index":1041},"children":[],"decl_id":null,"docs":" Red\n","sig":null,"attributes":[{"value":"/ Red","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":2222,"byte_end":2229,"line_start":73,"line_end":73,"column_start":5,"column_end":12}}]},{"kind":"Field","id":{"krate":0,"index":1044},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":2278,"byte_end":2279,"line_start":76,"line_end":76,"column_start":9,"column_end":10},"name":"g","qualname":"::RGB::g","value":"ComponentType","parent":{"krate":0,"index":1041},"children":[],"decl_id":null,"docs":" Green\n","sig":null,"attributes":[{"value":"/ Green","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":2260,"byte_end":2269,"line_start":75,"line_end":75,"column_start":5,"column_end":14}}]},{"kind":"Field","id":{"krate":0,"index":1045},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":2317,"byte_end":2318,"line_start":78,"line_end":78,"column_start":9,"column_end":10},"name":"b","qualname":"::RGB::b","value":"ComponentType","parent":{"krate":0,"index":1041},"children":[],"decl_id":null,"docs":" Blue\n","sig":null,"attributes":[{"value":"/ Blue","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":2300,"byte_end":2308,"line_start":77,"line_end":77,"column_start":5,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":1090},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":2828,"byte_end":2832,"line_start":91,"line_end":91,"column_start":12,"column_end":16},"name":"RGBA","qualname":"::RGBA","value":"RGBA { r, g, b, a }","parent":null,"children":[{"krate":0,"index":1093},{"krate":0,"index":1094},{"krate":0,"index":1095},{"krate":0,"index":1096}],"decl_id":null,"docs":" The RGBA pixel","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":2338,"byte_end":2348,"line_start":81,"line_end":81,"column_start":1,"column_end":11}},{"value":"/ The RGBA pixel","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":2489,"byte_end":2507,"line_start":84,"line_end":84,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":2508,"byte_end":2511,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ The component type can be `u8` (aliased as `RGBA8`), `u16` (aliased as `RGBA16`),","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":2512,"byte_end":2597,"line_start":86,"line_end":86,"column_start":1,"column_end":86}},{"value":"/ or any other type (but simple copyable types are recommended.)","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":2598,"byte_end":2664,"line_start":87,"line_end":87,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":2665,"byte_end":2668,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ You can specify a different type for alpha, but it's only for special cases","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":2669,"byte_end":2748,"line_start":89,"line_end":89,"column_start":1,"column_end":80}},{"value":"/ (e.g. if you use a newtype like `RGBA<LinearLight<u16>, u16>`).","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":2749,"byte_end":2816,"line_start":90,"line_end":90,"column_start":1,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":1093},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":2906,"byte_end":2907,"line_start":93,"line_end":93,"column_start":9,"column_end":10},"name":"r","qualname":"::RGBA::r","value":"ComponentType","parent":{"krate":0,"index":1090},"children":[],"decl_id":null,"docs":" Red\n","sig":null,"attributes":[{"value":"/ Red","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":2890,"byte_end":2897,"line_start":92,"line_end":92,"column_start":5,"column_end":12}}]},{"kind":"Field","id":{"krate":0,"index":1094},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":2946,"byte_end":2947,"line_start":95,"line_end":95,"column_start":9,"column_end":10},"name":"g","qualname":"::RGBA::g","value":"ComponentType","parent":{"krate":0,"index":1090},"children":[],"decl_id":null,"docs":" Green\n","sig":null,"attributes":[{"value":"/ Green","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":2928,"byte_end":2937,"line_start":94,"line_end":94,"column_start":5,"column_end":14}}]},{"kind":"Field","id":{"krate":0,"index":1095},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":2985,"byte_end":2986,"line_start":97,"line_end":97,"column_start":9,"column_end":10},"name":"b","qualname":"::RGBA::b","value":"ComponentType","parent":{"krate":0,"index":1090},"children":[],"decl_id":null,"docs":" Blue\n","sig":null,"attributes":[{"value":"/ Blue","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":2968,"byte_end":2976,"line_start":96,"line_end":96,"column_start":5,"column_end":13}}]},{"kind":"Field","id":{"krate":0,"index":1096},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":3025,"byte_end":3026,"line_start":99,"line_end":99,"column_start":9,"column_end":10},"name":"a","qualname":"::RGBA::a","value":"AlphaComponentType","parent":{"krate":0,"index":1090},"children":[],"decl_id":null,"docs":" Alpha\n","sig":null,"attributes":[{"value":"/ Alpha","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":3007,"byte_end":3016,"line_start":98,"line_end":98,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":405},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":3154,"byte_end":3158,"line_start":105,"line_end":105,"column_start":10,"column_end":14},"name":"RGB8","qualname":"::RGB8","value":"RGB<u8>","parent":null,"children":[],"decl_id":null,"docs":" 8-bit RGB","sig":null,"attributes":[{"value":"/ 8-bit RGB","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":3051,"byte_end":3064,"line_start":102,"line_end":102,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":3065,"byte_end":3068,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The colorspace is techincally undefined, but generally sRGB is assumed.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":3069,"byte_end":3144,"line_start":104,"line_end":104,"column_start":1,"column_end":76}}]},{"kind":"Type","id":{"krate":0,"index":406},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":3291,"byte_end":3296,"line_start":110,"line_end":110,"column_start":10,"column_end":15},"name":"RGB16","qualname":"::RGB16","value":"RGB<u16>","parent":null,"children":[],"decl_id":null,"docs":" 16-bit RGB in machine's native endian","sig":null,"attributes":[{"value":"/ 16-bit RGB in machine's native endian","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":3171,"byte_end":3212,"line_start":107,"line_end":107,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":3213,"byte_end":3216,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ Be careful to perform byte-swapping when reading from files.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":3217,"byte_end":3281,"line_start":109,"line_end":109,"column_start":1,"column_end":65}}]},{"kind":"Type","id":{"krate":0,"index":407},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":3381,"byte_end":3386,"line_start":113,"line_end":113,"column_start":10,"column_end":15},"name":"RGBA8","qualname":"::RGBA8","value":"RGBA<u8>","parent":null,"children":[],"decl_id":null,"docs":" 8-bit RGBA, alpha is last. 0 = transparent, 255 = opaque.\n","sig":null,"attributes":[{"value":"/ 8-bit RGBA, alpha is last. 0 = transparent, 255 = opaque.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":3310,"byte_end":3371,"line_start":112,"line_end":112,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":408},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":3508,"byte_end":3514,"line_start":118,"line_end":118,"column_start":10,"column_end":16},"name":"RGBA16","qualname":"::RGBA16","value":"RGBA<u16>","parent":null,"children":[],"decl_id":null,"docs":" 16-bit RGB in machine's native endian. 0 = transparent, 65535 = opaque.","sig":null,"attributes":[{"value":"/ 16-bit RGB in machine's native endian. 0 = transparent, 65535 = opaque.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":3400,"byte_end":3475,"line_start":115,"line_end":115,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":3476,"byte_end":3479,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ Alpha is last.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":3480,"byte_end":3498,"line_start":117,"line_end":117,"column_start":1,"column_end":19}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/array.rs","byte_start":17971,"byte_end":17974,"line_start":4,"line_end":4,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/array.rs","byte_start":18173,"byte_end":18176,"line_start":15,"line_end":15,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/array.rs","byte_start":18307,"byte_end":18311,"line_start":22,"line_end":22,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/array.rs","byte_start":18535,"byte_end":18539,"line_start":34,"line_end":34,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/array.rs","byte_start":18678,"byte_end":18681,"line_start":41,"line_end":41,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/array.rs","byte_start":18880,"byte_end":18883,"line_start":52,"line_end":52,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/array.rs","byte_start":19014,"byte_end":19018,"line_start":59,"line_end":59,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/array.rs","byte_start":19242,"byte_end":19246,"line_start":71,"line_end":71,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/tuple.rs","byte_start":20144,"byte_end":20147,"line_start":7,"line_end":7,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/tuple.rs","byte_start":20337,"byte_end":20340,"line_start":18,"line_end":18,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/tuple.rs","byte_start":20463,"byte_end":20467,"line_start":25,"line_end":25,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/tuple.rs","byte_start":20689,"byte_end":20693,"line_start":37,"line_end":37,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/tuple.rs","byte_start":20824,"byte_end":20827,"line_start":44,"line_end":44,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/tuple.rs","byte_start":21025,"byte_end":21028,"line_start":55,"line_end":55,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/tuple.rs","byte_start":21159,"byte_end":21163,"line_start":62,"line_end":62,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/tuple.rs","byte_start":21393,"byte_end":21397,"line_start":74,"line_end":74,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":14209,"byte_end":14212,"line_start":249,"line_end":249,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":14442,"byte_end":14446,"line_start":260,"line_end":260,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":14692,"byte_end":14695,"line_start":272,"line_end":272,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":14892,"byte_end":14896,"line_start":283,"line_end":283,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":15117,"byte_end":15120,"line_start":295,"line_end":295,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":15317,"byte_end":15321,"line_start":306,"line_end":306,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":15538,"byte_end":15542,"line_start":318,"line_end":318,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":15647,"byte_end":15650,"line_start":325,"line_end":325,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":15765,"byte_end":15769,"line_start":332,"line_end":332,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":15882,"byte_end":15891,"line_start":339,"line_end":339,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":15995,"byte_end":15999,"line_start":347,"line_end":347,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":16116,"byte_end":16119,"line_start":354,"line_end":354,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":16246,"byte_end":16250,"line_start":361,"line_end":361,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":16375,"byte_end":16384,"line_start":368,"line_end":368,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgb.rs","byte_start":35499,"byte_end":35502,"line_start":8,"line_end":8,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgb.rs","byte_start":35715,"byte_end":35718,"line_start":17,"line_end":17,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgb.rs","byte_start":36095,"byte_end":36098,"line_start":28,"line_end":28,"column_start":31,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgb.rs","byte_start":36184,"byte_end":36187,"line_start":30,"line_end":30,"column_start":31,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgb.rs","byte_start":36278,"byte_end":36281,"line_start":32,"line_end":32,"column_start":36,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgb.rs","byte_start":36377,"byte_end":36380,"line_start":34,"line_end":34,"column_start":36,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgb.rs","byte_start":39000,"byte_end":39003,"line_start":117,"line_end":117,"column_start":41,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgb.rs","byte_start":39511,"byte_end":39514,"line_start":134,"line_end":134,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgb.rs","byte_start":39689,"byte_end":39692,"line_start":140,"line_end":140,"column_start":42,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgb.rs","byte_start":39885,"byte_end":39888,"line_start":146,"line_end":146,"column_start":42,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgb.rs","byte_start":40079,"byte_end":40082,"line_start":152,"line_end":152,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgb.rs","byte_start":40259,"byte_end":40262,"line_start":158,"line_end":158,"column_start":42,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgb.rs","byte_start":40455,"byte_end":40458,"line_start":164,"line_end":164,"column_start":42,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":42207,"byte_end":42211,"line_start":7,"line_end":7,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":42433,"byte_end":42437,"line_start":16,"line_end":16,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":42664,"byte_end":42668,"line_start":25,"line_end":25,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":43003,"byte_end":43007,"line_start":35,"line_end":35,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":43401,"byte_end":43405,"line_start":46,"line_end":46,"column_start":34,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":43512,"byte_end":43516,"line_start":48,"line_end":48,"column_start":34,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":43628,"byte_end":43632,"line_start":50,"line_end":50,"column_start":39,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":43754,"byte_end":43758,"line_start":52,"line_end":52,"column_start":39,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":50093,"byte_end":50097,"line_start":244,"line_end":244,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":50404,"byte_end":50408,"line_start":255,"line_end":255,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":288},{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":51098,"byte_end":51102,"line_start":276,"line_end":276,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":51583,"byte_end":51587,"line_start":291,"line_end":291,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":51872,"byte_end":51876,"line_start":301,"line_end":301,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":52720,"byte_end":52724,"line_start":332,"line_end":332,"column_start":57,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":52932,"byte_end":52936,"line_start":338,"line_end":338,"column_start":57,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":58471,"byte_end":58475,"line_start":116,"line_end":116,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":58564,"byte_end":58573,"line_start":118,"line_end":118,"column_start":34,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":58682,"byte_end":58686,"line_start":120,"line_end":120,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":58785,"byte_end":58794,"line_start":122,"line_end":122,"column_start":39,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":59151,"byte_end":59155,"line_start":136,"line_end":136,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":59314,"byte_end":59318,"line_start":144,"line_end":144,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":337},{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":59446,"byte_end":59450,"line_start":152,"line_end":152,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":341}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":59565,"byte_end":59574,"line_start":159,"line_end":159,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":345}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":59750,"byte_end":59759,"line_start":167,"line_end":167,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":349},{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":60172,"byte_end":60181,"line_start":183,"line_end":183,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":358}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":60979,"byte_end":60983,"line_start":207,"line_end":207,"column_start":50,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":61165,"byte_end":61174,"line_start":214,"line_end":214,"column_start":55,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":61370,"byte_end":61379,"line_start":224,"line_end":224,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":374},{"krate":0,"index":375}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":62216,"byte_end":62220,"line_start":259,"line_end":259,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":384},{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":62943,"byte_end":62952,"line_start":291,"line_end":291,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":63124,"byte_end":63133,"line_start":299,"line_end":299,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/lib.rs","byte_start":1501,"byte_end":1504,"line_start":50,"line_end":50,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":310}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/array.rs","byte_start":17971,"byte_end":17974,"line_start":4,"line_end":4,"column_start":32,"column_end":35},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1041},"to":{"krate":1,"index":1989}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/array.rs","byte_start":18173,"byte_end":18176,"line_start":15,"line_end":15,"column_start":26,"column_end":29},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1041},"to":{"krate":1,"index":1986}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/array.rs","byte_start":18307,"byte_end":18311,"line_start":22,"line_end":22,"column_start":32,"column_end":36},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1090},"to":{"krate":1,"index":1989}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/array.rs","byte_start":18535,"byte_end":18539,"line_start":34,"line_end":34,"column_start":26,"column_end":30},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1090},"to":{"krate":1,"index":1986}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/array.rs","byte_start":18678,"byte_end":18681,"line_start":41,"line_end":41,"column_start":32,"column_end":35},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":829},"to":{"krate":1,"index":1989}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/array.rs","byte_start":18880,"byte_end":18883,"line_start":52,"line_end":52,"column_start":26,"column_end":29},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":829},"to":{"krate":1,"index":1986}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/array.rs","byte_start":19014,"byte_end":19018,"line_start":59,"line_end":59,"column_start":32,"column_end":36},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":878},"to":{"krate":1,"index":1989}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/array.rs","byte_start":19242,"byte_end":19246,"line_start":71,"line_end":71,"column_start":26,"column_end":30},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":878},"to":{"krate":1,"index":1986}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/tuple.rs","byte_start":20144,"byte_end":20147,"line_start":7,"line_end":7,"column_start":27,"column_end":30},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1041},"to":{"krate":1,"index":1989}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/tuple.rs","byte_start":20337,"byte_end":20340,"line_start":18,"line_end":18,"column_start":27,"column_end":30},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1041},"to":{"krate":1,"index":1986}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/tuple.rs","byte_start":20463,"byte_end":20467,"line_start":25,"line_end":25,"column_start":31,"column_end":35},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1090},"to":{"krate":1,"index":1989}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/tuple.rs","byte_start":20689,"byte_end":20693,"line_start":37,"line_end":37,"column_start":31,"column_end":35},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1090},"to":{"krate":1,"index":1986}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/tuple.rs","byte_start":20824,"byte_end":20827,"line_start":44,"line_end":44,"column_start":27,"column_end":30},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":829},"to":{"krate":1,"index":1989}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/tuple.rs","byte_start":21025,"byte_end":21028,"line_start":55,"line_end":55,"column_start":27,"column_end":30},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":829},"to":{"krate":1,"index":1986}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/tuple.rs","byte_start":21159,"byte_end":21163,"line_start":62,"line_end":62,"column_start":31,"column_end":35},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":878},"to":{"krate":1,"index":1989}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/tuple.rs","byte_start":21393,"byte_end":21397,"line_start":74,"line_end":74,"column_start":31,"column_end":35},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":878},"to":{"krate":1,"index":1986}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":14209,"byte_end":14212,"line_start":249,"line_end":249,"column_start":34,"column_end":37},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1041},"to":{"krate":1,"index":1989}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":14442,"byte_end":14446,"line_start":260,"line_end":260,"column_start":43,"column_end":47},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1090},"to":{"krate":1,"index":1989}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":14692,"byte_end":14695,"line_start":272,"line_end":272,"column_start":26,"column_end":29},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":829},"to":{"krate":1,"index":1989}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":14892,"byte_end":14896,"line_start":283,"line_end":283,"column_start":27,"column_end":31},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":878},"to":{"krate":1,"index":1989}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":15117,"byte_end":15120,"line_start":295,"line_end":295,"column_start":26,"column_end":29},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1041},"to":{"krate":1,"index":1989}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":15317,"byte_end":15321,"line_start":306,"line_end":306,"column_start":27,"column_end":31},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1090},"to":{"krate":1,"index":1989}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":15538,"byte_end":15542,"line_start":318,"line_end":318,"column_start":22,"column_end":26},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":944},"to":{"krate":1,"index":1980}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":15647,"byte_end":15650,"line_start":325,"line_end":325,"column_start":24,"column_end":27},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1041},"to":{"krate":1,"index":1980}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":15765,"byte_end":15769,"line_start":332,"line_end":332,"column_start":24,"column_end":28},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1090},"to":{"krate":1,"index":1980}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":15882,"byte_end":15891,"line_start":339,"line_end":339,"column_start":22,"column_end":31},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":984},"to":{"krate":1,"index":1980}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":15995,"byte_end":15999,"line_start":347,"line_end":347,"column_start":22,"column_end":26},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":944},"to":{"krate":1,"index":1983}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":16116,"byte_end":16119,"line_start":354,"line_end":354,"column_start":24,"column_end":27},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1041},"to":{"krate":1,"index":1983}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":16246,"byte_end":16250,"line_start":361,"line_end":361,"column_start":24,"column_end":28},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1090},"to":{"krate":1,"index":1983}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/convert/mod.rs","byte_start":16375,"byte_end":16384,"line_start":368,"line_end":368,"column_start":22,"column_end":31},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":984},"to":{"krate":1,"index":1983}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgb.rs","byte_start":35499,"byte_end":35502,"line_start":8,"line_end":8,"column_start":9,"column_end":12},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1041},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgb.rs","byte_start":35715,"byte_end":35718,"line_start":17,"line_end":17,"column_start":9,"column_end":12},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":829},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgb.rs","byte_start":36095,"byte_end":36098,"line_start":28,"line_end":28,"column_start":31,"column_end":34},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1041},"to":{"krate":4,"index":151}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgb.rs","byte_start":36184,"byte_end":36187,"line_start":30,"line_end":30,"column_start":31,"column_end":34},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":829},"to":{"krate":4,"index":151}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgb.rs","byte_start":36278,"byte_end":36281,"line_start":32,"line_end":32,"column_start":36,"column_end":39},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1041},"to":{"krate":4,"index":55}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgb.rs","byte_start":36377,"byte_end":36380,"line_start":34,"line_end":34,"column_start":36,"column_end":39},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":829},"to":{"krate":4,"index":55}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgb.rs","byte_start":39000,"byte_end":39003,"line_start":117,"line_end":117,"column_start":41,"column_end":44},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1041},"to":{"krate":1,"index":5438}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgb.rs","byte_start":39511,"byte_end":39514,"line_start":134,"line_end":134,"column_start":40,"column_end":43},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1041},"to":{"krate":1,"index":6836}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgb.rs","byte_start":39689,"byte_end":39692,"line_start":140,"line_end":140,"column_start":42,"column_end":45},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1041},"to":{"krate":1,"index":6844}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgb.rs","byte_start":39885,"byte_end":39888,"line_start":146,"line_end":146,"column_start":42,"column_end":45},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1041},"to":{"krate":1,"index":6842}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgb.rs","byte_start":40079,"byte_end":40082,"line_start":152,"line_end":152,"column_start":40,"column_end":43},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":829},"to":{"krate":1,"index":6836}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgb.rs","byte_start":40259,"byte_end":40262,"line_start":158,"line_end":158,"column_start":42,"column_end":45},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":829},"to":{"krate":1,"index":6844}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgb.rs","byte_start":40455,"byte_end":40458,"line_start":164,"line_end":164,"column_start":42,"column_end":45},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":829},"to":{"krate":1,"index":6842}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":42207,"byte_end":42211,"line_start":7,"line_end":7,"column_start":9,"column_end":13},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1090},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":42433,"byte_end":42437,"line_start":16,"line_end":16,"column_start":12,"column_end":16},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1090},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":42664,"byte_end":42668,"line_start":25,"line_end":25,"column_start":9,"column_end":13},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":878},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":43003,"byte_end":43007,"line_start":35,"line_end":35,"column_start":12,"column_end":16},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":878},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":43401,"byte_end":43405,"line_start":46,"line_end":46,"column_start":34,"column_end":38},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1090},"to":{"krate":4,"index":151}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":43512,"byte_end":43516,"line_start":48,"line_end":48,"column_start":34,"column_end":38},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":878},"to":{"krate":4,"index":151}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":43628,"byte_end":43632,"line_start":50,"line_end":50,"column_start":39,"column_end":43},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1090},"to":{"krate":4,"index":55}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":43754,"byte_end":43758,"line_start":52,"line_end":52,"column_start":39,"column_end":43},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":878},"to":{"krate":4,"index":55}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":50093,"byte_end":50097,"line_start":244,"line_end":244,"column_start":12,"column_end":16},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1090},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":50404,"byte_end":50408,"line_start":255,"line_end":255,"column_start":12,"column_end":16},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":878},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":51098,"byte_end":51102,"line_start":276,"line_end":276,"column_start":41,"column_end":45},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1090},"to":{"krate":1,"index":5438}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":51583,"byte_end":51587,"line_start":291,"line_end":291,"column_start":19,"column_end":23},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1090},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":51872,"byte_end":51876,"line_start":301,"line_end":301,"column_start":19,"column_end":23},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":878},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":52720,"byte_end":52724,"line_start":332,"line_end":332,"column_start":57,"column_end":61},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1090},"to":{"krate":1,"index":6836}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/internal/rgba.rs","byte_start":52932,"byte_end":52936,"line_start":338,"line_end":338,"column_start":57,"column_end":61},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":878},"to":{"krate":1,"index":6836}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":58471,"byte_end":58475,"line_start":116,"line_end":116,"column_start":31,"column_end":35},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":944},"to":{"krate":4,"index":151}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":58564,"byte_end":58573,"line_start":118,"line_end":118,"column_start":34,"column_end":43},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":984},"to":{"krate":4,"index":151}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":58682,"byte_end":58686,"line_start":120,"line_end":120,"column_start":36,"column_end":40},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":944},"to":{"krate":4,"index":55}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":58785,"byte_end":58794,"line_start":122,"line_end":122,"column_start":39,"column_end":48},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":984},"to":{"krate":4,"index":55}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":59151,"byte_end":59155,"line_start":136,"line_end":136,"column_start":9,"column_end":13},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":944},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":59314,"byte_end":59318,"line_start":144,"line_end":144,"column_start":24,"column_end":28},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":944},"to":{"krate":1,"index":2271}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":59446,"byte_end":59450,"line_start":152,"line_end":152,"column_start":27,"column_end":31},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":944},"to":{"krate":1,"index":1989}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":59565,"byte_end":59574,"line_start":159,"line_end":159,"column_start":19,"column_end":28},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":984},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":59750,"byte_end":59759,"line_start":167,"line_end":167,"column_start":12,"column_end":21},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":984},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":60172,"byte_end":60181,"line_start":183,"line_end":183,"column_start":25,"column_end":34},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":984},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":60979,"byte_end":60983,"line_start":207,"line_end":207,"column_start":50,"column_end":54},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":944},"to":{"krate":0,"index":197}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":61165,"byte_end":61174,"line_start":214,"line_end":214,"column_start":55,"column_end":64},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":984},"to":{"krate":0,"index":197}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":61370,"byte_end":61379,"line_start":224,"line_end":224,"column_start":31,"column_end":40},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":984},"to":{"krate":0,"index":189}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":62216,"byte_end":62220,"line_start":259,"line_end":259,"column_start":31,"column_end":35},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":944},"to":{"krate":0,"index":189}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":62943,"byte_end":62952,"line_start":291,"line_end":291,"column_start":33,"column_end":42},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":984},"to":{"krate":1,"index":1989}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/rgb-0.8.27/src/alt.rs","byte_start":63124,"byte_end":63133,"line_start":299,"line_end":299,"column_start":33,"column_end":42},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":984},"to":{"krate":1,"index":1989}}]}