{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0","program":"/home/sna/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","wgpu_glyph","--edition=2018","/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=2a83e5108b827cbc","-C","extra-filename=-2a83e5108b827cbc","--out-dir","/home/sna/project/koompi-desktop/desktop/target/rls/debug/deps","-L","dependency=/home/sna/project/koompi-desktop/desktop/target/rls/debug/deps","--extern","bytemuck=/home/sna/project/koompi-desktop/desktop/target/rls/debug/deps/libbytemuck-d40d380c3f339def.rmeta","--extern","glyph_brush=/home/sna/project/koompi-desktop/desktop/target/rls/debug/deps/libglyph_brush-bab6a76cf7a33aa2.rmeta","--extern","log=/home/sna/project/koompi-desktop/desktop/target/rls/debug/deps/liblog-3841cdc37f13040f.rmeta","--extern","wgpu=/home/sna/project/koompi-desktop/desktop/target/rls/debug/deps/libwgpu-91ecc6c085256364.rmeta","--cap-lints","allow","-L","native=/home/sna/project/koompi-desktop/desktop/target/rls/debug/build/spirv_cross-2bf123d2c784c91d/out","--error-format=json","--sysroot","/home/sna/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/sna/project/koompi-desktop/desktop/target/rls/debug/deps/libwgpu_glyph-2a83e5108b827cbc.rmeta"},"prelude":{"crate_id":{"name":"wgpu_glyph","disambiguator":[9484629739827917047,8184032305407738371]},"crate_root":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src","external_crates":[{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12933703438800314702,5774803219644544316]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","num":2,"id":{"name":"core","disambiguator":[18134888982608726624,15478788479473023395]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6673302632599048863,4691371433878452070]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11457885127507258025,479752930606968628]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6007655421670680970,17748288058820543149]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4051320655186846034,14773827427477085591]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3672675044024306215,7179779047398453100]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14739525726177289408,3061276640434149652]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2246841610299105657,12905561680815043912]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4036557704906104068,994131407893854156]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[7443407023664770875,11250036483448109314]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[10148669557414888454,6400214184476534778]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[4006540472161665961,15205760237192158299]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[16043199729901662453,7825522302763349882]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[5738570549504868290,14845130516100231771]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[6807687926185025542,9498922200428406688]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[6171827839412267364,4338689175470013405]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","num":18,"id":{"name":"glyph_brush","disambiguator":[15958611245370012550,2367454813576466980]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","num":19,"id":{"name":"ordered_float","disambiguator":[10696683319696128502,10105247840577145950]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","num":20,"id":{"name":"num_traits","disambiguator":[11348060067260856026,14620577537453903898]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","num":21,"id":{"name":"glyph_brush_draw_cache","disambiguator":[13283774193541256962,10102583214315261104]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","num":22,"id":{"name":"ab_glyph","disambiguator":[8943436649044583429,10487683323008480693]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","num":23,"id":{"name":"ab_glyph_rasterizer","disambiguator":[4733626931776959345,14739926797007564804]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","num":24,"id":{"name":"owned_ttf_parser","disambiguator":[2916847135487442505,30238975273886112]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","num":25,"id":{"name":"ttf_parser","disambiguator":[16463306355574461334,17298929109265055903]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","num":26,"id":{"name":"linked_hash_map","disambiguator":[2735658411309169296,14874084005360726569]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","num":27,"id":{"name":"rustc_hash","disambiguator":[18120138039320172856,5174853055526042934]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","num":28,"id":{"name":"crossbeam_channel","disambiguator":[15087920697464079835,3635095639213189767]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","num":29,"id":{"name":"cfg_if","disambiguator":[11748229077813686416,18120593503603249335]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","num":30,"id":{"name":"crossbeam_utils","disambiguator":[5561936496942638733,1654484880423578987]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","num":31,"id":{"name":"lazy_static","disambiguator":[4038955093903438243,10998562936998939215]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","num":32,"id":{"name":"crossbeam_deque","disambiguator":[1004253402225630203,2903931322560541624]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","num":33,"id":{"name":"crossbeam_epoch","disambiguator":[9835711871317986094,18259803022423761205]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","num":34,"id":{"name":"scopeguard","disambiguator":[1075420522745174828,5882417911802136532]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","num":35,"id":{"name":"memoffset","disambiguator":[348269889760918774,6058189143756181965]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","num":36,"id":{"name":"rayon","disambiguator":[1178496163176555257,1491302717081180730]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","num":37,"id":{"name":"either","disambiguator":[17498756950699064827,17398412473010369712]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","num":38,"id":{"name":"rayon_core","disambiguator":[11502325690528782965,474628910013983968]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","num":39,"id":{"name":"num_cpus","disambiguator":[13514915606948233222,11042074411423915035]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","num":40,"id":{"name":"libc","disambiguator":[16503337853515921412,15030973269971122297]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","num":41,"id":{"name":"glyph_brush_layout","disambiguator":[5054766743357770467,3510411507785169411]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","num":42,"id":{"name":"approx","disambiguator":[11017135926208861485,3420423949134995801]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","num":43,"id":{"name":"xi_unicode","disambiguator":[7368378163869288866,13074931430439830595]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","num":44,"id":{"name":"twox_hash","disambiguator":[11771439845126367102,11680376882155404859]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","num":45,"id":{"name":"cfg_if","disambiguator":[10021299859095236603,9970654228449935443]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","num":46,"id":{"name":"static_assertions","disambiguator":[17267408535625969050,4632693660215762815]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","num":47,"id":{"name":"rand","disambiguator":[1205129680684067329,6289887790851271142]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","num":48,"id":{"name":"rand_core","disambiguator":[11148749456145314526,8380758500781240230]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","num":49,"id":{"name":"getrandom","disambiguator":[17277289286515610588,6694636242485236928]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","num":50,"id":{"name":"rand_chacha","disambiguator":[1475313331092678145,13971428977085750072]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","num":51,"id":{"name":"ppv_lite86","disambiguator":[5486910781073359264,15253540615556416119]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/pipeline.rs","num":52,"id":{"name":"bytemuck","disambiguator":[13300038299743649120,10384484905238779108]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/pipeline.rs","num":53,"id":{"name":"bytemuck_derive","disambiguator":[6247392092230105806,8163925577197420074]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/pipeline.rs","num":54,"id":{"name":"wgpu","disambiguator":[12911650098733435375,17099912206819188253]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/pipeline.rs","num":55,"id":{"name":"arrayvec","disambiguator":[15037931778853749287,9533841721777670591]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/pipeline.rs","num":56,"id":{"name":"parking_lot","disambiguator":[5390738903935441053,1783448510451506012]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/pipeline.rs","num":57,"id":{"name":"instant","disambiguator":[6707731622692707509,11541478860689369278]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/pipeline.rs","num":58,"id":{"name":"lock_api","disambiguator":[15449429194127416252,6938019467042416814]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/pipeline.rs","num":59,"id":{"name":"parking_lot_core","disambiguator":[17901974800834259596,16316967099908885098]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/pipeline.rs","num":60,"id":{"name":"smallvec","disambiguator":[12123569432201045790,1609040209808900757]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/pipeline.rs","num":61,"id":{"name":"wgpu_core","disambiguator":[16197946605073383606,2686894725323588343]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/pipeline.rs","num":62,"id":{"name":"gfx_backend_empty","disambiguator":[16720634155598950992,1408700224734653172]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/pipeline.rs","num":63,"id":{"name":"gfx_hal","disambiguator":[12644526271976754144,15049655501469409911]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/pipeline.rs","num":64,"id":{"name":"bitflags","disambiguator":[1486220796094162926,11566124556688293180]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/pipeline.rs","num":65,"id":{"name":"thiserror","disambiguator":[15504442750962740506,14851003689455061466]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/pipeline.rs","num":66,"id":{"name":"thiserror_impl","disambiguator":[11441182822677390484,12181172445408337853]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/pipeline.rs","num":67,"id":{"name":"naga","disambiguator":[119384794221186038,3588736087151095351]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/pipeline.rs","num":68,"id":{"name":"spirv_headers","disambiguator":[11973393620768103992,13005491691383845515]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/pipeline.rs","num":69,"id":{"name":"petgraph","disambiguator":[7206675675800652441,6368882550772505753]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/pipeline.rs","num":70,"id":{"name":"fixedbitset","disambiguator":[3469813954286589953,17280147540939269274]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/pipeline.rs","num":71,"id":{"name":"indexmap","disambiguator":[6248259384518690226,10360757784040018394]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/pipeline.rs","num":72,"id":{"name":"hashbrown","disambiguator":[9892134510185551851,16176526610871551481]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/pipeline.rs","num":73,"id":{"name":"ahash","disambiguator":[11000207869931019655,11365772628104082715]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/pipeline.rs","num":74,"id":{"name":"bit_set","disambiguator":[14634918527612090778,8530007148652750657]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/pipeline.rs","num":75,"id":{"name":"bit_vec","disambiguator":[11525267189323714172,9242028256795655180]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","num":76,"id":{"name":"log","disambiguator":[1710216410033819336,4789044085084690477]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/pipeline.rs","num":77,"id":{"name":"fxhash","disambiguator":[5517682705712740081,11959711437751274496]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/pipeline.rs","num":78,"id":{"name":"byteorder","disambiguator":[10836038553012167767,15297481873074233491]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/pipeline.rs","num":79,"id":{"name":"raw_window_handle","disambiguator":[2934257577006895542,8901356843277625922]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/pipeline.rs","num":80,"id":{"name":"gfx_backend_gl","disambiguator":[13331156431972847745,7372372685978309232]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/pipeline.rs","num":81,"id":{"name":"gfx_auxil","disambiguator":[6837192369522033911,5504320661123828647]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/pipeline.rs","num":82,"id":{"name":"spirv_cross","disambiguator":[10702486523283477139,3865255202515252070]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/pipeline.rs","num":83,"id":{"name":"glow","disambiguator":[10487077175170148676,9378216084392135173]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/pipeline.rs","num":84,"id":{"name":"libloading","disambiguator":[6999311545772958281,3536443190487950281]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/pipeline.rs","num":85,"id":{"name":"khronos_egl","disambiguator":[16695642192338299175,9019612157326582478]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/pipeline.rs","num":86,"id":{"name":"gfx_backend_vulkan","disambiguator":[1904903467838806337,4905285675710511953]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/pipeline.rs","num":87,"id":{"name":"ash","disambiguator":[13879932278410195986,11572575967075676914]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/pipeline.rs","num":88,"id":{"name":"inplace_it","disambiguator":[8147597529228988732,16102125947679181928]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/pipeline.rs","num":89,"id":{"name":"wgpu_types","disambiguator":[3702874715793048010,7527406206845510040]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/pipeline.rs","num":90,"id":{"name":"copyless","disambiguator":[14780360621474828763,11395380975809517066]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/pipeline.rs","num":91,"id":{"name":"gpu_descriptor","disambiguator":[13876116354124970204,12280276538666027701]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/pipeline.rs","num":92,"id":{"name":"gpu_descriptor_types","disambiguator":[16348464310469276888,17462816305318721948]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/pipeline.rs","num":93,"id":{"name":"tracing","disambiguator":[7688942834870918567,4740851879483362808]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/pipeline.rs","num":94,"id":{"name":"tracing_core","disambiguator":[15363116018093037674,4678690596404346618]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/pipeline.rs","num":95,"id":{"name":"tracing_attributes","disambiguator":[3963171920926974815,9312332496463800271]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/pipeline.rs","num":96,"id":{"name":"pin_project_lite","disambiguator":[10524444483988068922,18397436193584211122]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/pipeline.rs","num":97,"id":{"name":"gpu_alloc","disambiguator":[13227825315169632324,12683506485493092080]}},{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/pipeline.rs","num":98,"id":{"name":"gpu_alloc_types","disambiguator":[8057416323635124316,7157468159789794206]}}],"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":0,"byte_end":16658,"line_start":1,"line_end":507,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":111},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":285,"byte_end":291,"line_start":10,"line_end":10,"column_start":17,"column_end":23},"alias_span":null,"name":"Region","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":9},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":348,"byte_end":365,"line_start":14,"line_end":14,"column_start":18,"column_end":35},"alias_span":null,"name":"GlyphBrushBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":41,"index":275},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":388,"byte_end":396,"line_start":15,"line_end":15,"column_start":22,"column_end":30},"alias_span":null,"name":"ab_glyph","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":41,"index":418},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":425,"byte_end":443,"line_start":17,"line_end":17,"column_start":5,"column_end":23},"alias_span":null,"name":"BuiltInLineBreaker","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":594},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":445,"byte_end":450,"line_start":17,"line_end":17,"column_start":25,"column_end":30},"alias_span":null,"name":"Extra","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":41,"index":368},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":452,"byte_end":458,"line_start":17,"line_end":17,"column_start":32,"column_end":38},"alias_span":null,"name":"FontId","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":41,"index":369},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":452,"byte_end":458,"line_start":17,"line_end":17,"column_start":32,"column_end":38},"alias_span":null,"name":"FontId","value":"","parent":{"krate":0,"index":125}},{"kind":"Use","ref_id":{"krate":18,"index":226},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":460,"byte_end":473,"line_start":17,"line_end":17,"column_start":40,"column_end":53},"alias_span":null,"name":"GlyphCruncher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":41,"index":284},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":475,"byte_end":490,"line_start":17,"line_end":17,"column_start":55,"column_end":70},"alias_span":null,"name":"GlyphPositioner","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":41,"index":326},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":496,"byte_end":511,"line_start":18,"line_end":18,"column_start":5,"column_end":20},"alias_span":null,"name":"HorizontalAlign","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":41,"index":293},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":513,"byte_end":519,"line_start":18,"line_end":18,"column_start":22,"column_end":28},"alias_span":null,"name":"Layout","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":41,"index":396},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":521,"byte_end":530,"line_start":18,"line_end":18,"column_start":30,"column_end":39},"alias_span":null,"name":"LineBreak","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":41,"index":142},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":532,"byte_end":543,"line_start":18,"line_end":18,"column_start":41,"column_end":52},"alias_span":null,"name":"LineBreaker","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":719},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":545,"byte_end":552,"line_start":18,"line_end":18,"column_start":54,"column_end":61},"alias_span":null,"name":"Section","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":41,"index":443},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":554,"byte_end":569,"line_start":18,"line_end":18,"column_start":63,"column_end":78},"alias_span":null,"name":"SectionGeometry","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":41,"index":474},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":575,"byte_end":587,"line_start":19,"line_end":19,"column_start":5,"column_end":17},"alias_span":null,"name":"SectionGlyph","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":224},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":589,"byte_end":605,"line_start":19,"line_end":19,"column_start":19,"column_end":35},"alias_span":null,"name":"SectionGlyphIter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":41,"index":455},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":607,"byte_end":618,"line_start":19,"line_end":19,"column_start":37,"column_end":48},"alias_span":null,"name":"SectionText","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":742},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":620,"byte_end":624,"line_start":19,"line_end":19,"column_start":50,"column_end":54},"alias_span":null,"name":"Text","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":41,"index":347},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":626,"byte_end":639,"line_start":19,"line_end":19,"column_start":56,"column_end":69},"alias_span":null,"name":"VerticalAlign","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":0,"byte_end":16658,"line_start":1,"line_end":507,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":42},{"krate":0,"index":110},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":369},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":157},{"krate":0,"index":178},{"krate":0,"index":184},{"krate":0,"index":193},{"krate":0,"index":202},{"krate":0,"index":204},{"krate":0,"index":218}],"decl_id":null,"docs":" A fast text renderer for [`wgpu`]. Powered by [`glyph_brush`].","sig":null,"attributes":[{"value":"/ A fast text renderer for [`wgpu`]. Powered by [`glyph_brush`].","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":0,"byte_end":66,"line_start":1,"line_end":1,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":67,"byte_end":70,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ [`wgpu`]: https://github.com/gfx-rs/wgpu","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":71,"byte_end":115,"line_start":3,"line_end":3,"column_start":1,"column_end":45}},{"value":"/ [`glyph_brush`]: https://github.com/alexheretic/glyph-brush/tree/master/glyph-brush","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":116,"byte_end":203,"line_start":4,"line_end":4,"column_start":1,"column_end":88}},{"value":"deny(unused_results)","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":204,"byte_end":228,"line_start":5,"line_end":5,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":9},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","byte_start":16907,"byte_end":16924,"line_start":10,"line_end":10,"column_start":12,"column_end":29},"name":"GlyphBrushBuilder","qualname":"::builder::GlyphBrushBuilder","value":"GlyphBrushBuilder {  }","parent":null,"children":[{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15}],"decl_id":null,"docs":" Builder for a [`GlyphBrush`](struct.GlyphBrush.html).\n","sig":null,"attributes":[{"value":"/ Builder for a [`GlyphBrush`](struct.GlyphBrush.html).","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","byte_start":16838,"byte_end":16895,"line_start":9,"line_end":9,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","byte_start":17550,"byte_end":17560,"line_start":32,"line_end":32,"column_start":12,"column_end":22},"name":"using_font","qualname":"<GlyphBrushBuilder<(), ()>>::using_font","value":"pub fn using_font<F: Font>(F) -> GlyphBrushBuilder<(), F>","parent":null,"children":[],"decl_id":null,"docs":" Specifies the default font used to render glyphs.\n Referenced with `FontId(0)`, which is default.\n","sig":null,"attributes":[{"value":"/ Specifies the default font used to render glyphs.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","byte_start":17416,"byte_end":17469,"line_start":29,"line_end":29,"column_start":5,"column_end":58}},{"value":"/ Referenced with `FontId(0)`, which is default.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","byte_start":17474,"byte_end":17524,"line_start":30,"line_end":30,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","byte_start":17529,"byte_end":17538,"line_start":31,"line_end":31,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","byte_start":17665,"byte_end":17676,"line_start":36,"line_end":36,"column_start":12,"column_end":23},"name":"using_fonts","qualname":"<GlyphBrushBuilder<(), ()>>::using_fonts","value":"pub fn using_fonts<F: Font>(Vec<F>) -> GlyphBrushBuilder<(), F>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","byte_start":18391,"byte_end":18413,"line_start":58,"line_end":58,"column_start":12,"column_end":34},"name":"draw_cache_multithread","qualname":"<GlyphBrushBuilder<D, F, H>>::draw_cache_multithread","value":"pub fn draw_cache_multithread(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" When multiple CPU cores are available spread rasterization work across\n all cores.","sig":null,"attributes":[{"value":"/ When multiple CPU cores are available spread rasterization work across","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","byte_start":18046,"byte_end":18120,"line_start":48,"line_end":48,"column_start":5,"column_end":79}},{"value":"/ all cores.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","byte_start":18125,"byte_end":18139,"line_start":49,"line_end":49,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","byte_start":18144,"byte_end":18147,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ Significantly reduces worst case latency in multicore environments.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","byte_start":18152,"byte_end":18223,"line_start":51,"line_end":51,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","byte_start":18228,"byte_end":18231,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ By default, this feature is __enabled__.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","byte_start":18236,"byte_end":18280,"line_start":53,"line_end":53,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","byte_start":18285,"byte_end":18288,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ # Platform-specific behaviour","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","byte_start":18293,"byte_end":18326,"line_start":55,"line_end":55,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","byte_start":18331,"byte_end":18334,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ This option has no effect on wasm32.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","byte_start":18339,"byte_end":18379,"line_start":57,"line_end":57,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","byte_start":18636,"byte_end":18657,"line_start":66,"line_end":66,"column_start":12,"column_end":33},"name":"texture_filter_method","qualname":"<GlyphBrushBuilder<D, F, H>>::texture_filter_method","value":"pub fn texture_filter_method(Self, wgpu::FilterMode) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the texture filtering method.\n","sig":null,"attributes":[{"value":"/ Sets the texture filtering method.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","byte_start":18586,"byte_end":18624,"line_start":65,"line_end":65,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","byte_start":19119,"byte_end":19133,"line_start":81,"line_end":81,"column_start":12,"column_end":26},"name":"section_hasher","qualname":"<GlyphBrushBuilder<D, F, H>>::section_hasher","value":"pub fn section_hasher<T: BuildHasher>(Self, T) -> GlyphBrushBuilder<D, F, T>","parent":null,"children":[],"decl_id":null,"docs":" Sets the section hasher. `GlyphBrush` cannot handle absolute section\n hash collisions so use a good hash algorithm.","sig":null,"attributes":[{"value":"/ Sets the section hasher. `GlyphBrush` cannot handle absolute section","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","byte_start":18810,"byte_end":18882,"line_start":74,"line_end":74,"column_start":5,"column_end":77}},{"value":"/ hash collisions so use a good hash algorithm.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","byte_start":18887,"byte_end":18936,"line_start":75,"line_end":75,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","byte_start":18941,"byte_end":18944,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ This hasher is used to distinguish sections, rather than for hashmap","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","byte_start":18949,"byte_end":19021,"line_start":77,"line_end":77,"column_start":5,"column_end":77}},{"value":"/ internal use.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","byte_start":19026,"byte_end":19043,"line_start":78,"line_end":78,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","byte_start":19048,"byte_end":19051,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Defaults to [seahash](https://docs.rs/seahash).","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","byte_start":19056,"byte_end":19107,"line_start":80,"line_end":80,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","byte_start":19474,"byte_end":19493,"line_start":93,"line_end":93,"column_start":12,"column_end":31},"name":"depth_stencil_state","qualname":"<GlyphBrushBuilder<D, F, H>>::depth_stencil_state","value":"pub fn depth_stencil_state(Self, wgpu::DepthStencilState)\n-> GlyphBrushBuilder<wgpu::DepthStencilState, F, H>","parent":null,"children":[],"decl_id":null,"docs":" Sets the depth stencil.\n","sig":null,"attributes":[{"value":"/ Sets the depth stencil.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","byte_start":19435,"byte_end":19462,"line_start":92,"line_end":92,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","byte_start":20022,"byte_end":20027,"line_start":108,"line_end":108,"column_start":12,"column_end":17},"name":"build","qualname":"<GlyphBrushBuilder<(), F, H>>::build","value":"pub fn build(Self, &wgpu::Device, wgpu::TextureFormat) -> GlyphBrush<(), F, H>","parent":null,"children":[],"decl_id":null,"docs":" Builds a `GlyphBrush` using the given `wgpu::Device` that can render\n text for texture views with the given `render_format`.\n","sig":null,"attributes":[{"value":"/ Builds a `GlyphBrush` using the given `wgpu::Device` that can render","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","byte_start":19875,"byte_end":19947,"line_start":106,"line_end":106,"column_start":5,"column_end":77}},{"value":"/ text for texture views with the given `render_format`.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","byte_start":19952,"byte_end":20010,"line_start":107,"line_end":107,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","byte_start":20560,"byte_end":20565,"line_start":127,"line_end":127,"column_start":12,"column_end":17},"name":"build","qualname":"<GlyphBrushBuilder<wgpu::DepthStencilState, F, H>>::build","value":"pub fn build(Self, &wgpu::Device, wgpu::TextureFormat)\n-> GlyphBrush<wgpu::DepthStencilState, F, H>","parent":null,"children":[],"decl_id":null,"docs":" Builds a `GlyphBrush` using the given `wgpu::Device` that can render\n text for texture views with the given `render_format`.\n","sig":null,"attributes":[{"value":"/ Builds a `GlyphBrush` using the given `wgpu::Device` that can render","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","byte_start":20413,"byte_end":20485,"line_start":125,"line_end":125,"column_start":5,"column_end":77}},{"value":"/ text for texture views with the given `render_format`.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","byte_start":20490,"byte_end":20548,"line_start":126,"line_end":126,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":111},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/region.rs","byte_start":40985,"byte_end":40991,"line_start":2,"line_end":2,"column_start":12,"column_end":18},"name":"Region","qualname":"::region::Region","value":"Region { x, y, width, height }","parent":null,"children":[{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115}],"decl_id":null,"docs":" A region of the screen.\n","sig":null,"attributes":[{"value":"/ A region of the screen.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/region.rs","byte_start":40946,"byte_end":40973,"line_start":1,"line_end":1,"column_start":1,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":112},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/region.rs","byte_start":41002,"byte_end":41003,"line_start":3,"line_end":3,"column_start":9,"column_end":10},"name":"x","qualname":"::region::Region::x","value":"u32","parent":{"krate":0,"index":111},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":113},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/region.rs","byte_start":41018,"byte_end":41019,"line_start":4,"line_end":4,"column_start":9,"column_end":10},"name":"y","qualname":"::region::Region::y","value":"u32","parent":{"krate":0,"index":111},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":114},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/region.rs","byte_start":41034,"byte_end":41039,"line_start":5,"line_end":5,"column_start":9,"column_end":14},"name":"width","qualname":"::region::Region::width","value":"u32","parent":{"krate":0,"index":111},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":115},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/region.rs","byte_start":41054,"byte_end":41060,"line_start":6,"line_end":6,"column_start":9,"column_end":15},"name":"height","qualname":"::region::Region::height","value":"u32","parent":{"krate":0,"index":111},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":151},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":1091,"byte_end":1101,"line_start":33,"line_end":33,"column_start":12,"column_end":22},"name":"GlyphBrush","qualname":"::GlyphBrush","value":"GlyphBrush {  }","parent":null,"children":[{"krate":0,"index":155},{"krate":0,"index":156}],"decl_id":null,"docs":" Object allowing glyph drawing, containing cache state. Manages glyph positioning cacheing,\n glyph draw caching & efficient GPU texture cache updating and re-sizing on demand.","sig":null,"attributes":[{"value":"/ Object allowing glyph drawing, containing cache state. Manages glyph positioning cacheing,","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":822,"byte_end":916,"line_start":29,"line_end":29,"column_start":1,"column_end":95}},{"value":"/ glyph draw caching & efficient GPU texture cache updating and re-sizing on demand.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":917,"byte_end":1003,"line_start":30,"line_end":30,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":1004,"byte_end":1007,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Build using a [`GlyphBrushBuilder`](struct.GlyphBrushBuilder.html).","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":1008,"byte_end":1079,"line_start":32,"line_end":32,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":1640,"byte_end":1645,"line_start":45,"line_end":45,"column_start":12,"column_end":17},"name":"queue","qualname":"<GlyphBrush<Depth, F, H>>::queue","value":"pub fn queue<'a, S>(&mut Self, S) where S: Into<Cow>","parent":null,"children":[],"decl_id":null,"docs":" Queues a section/layout to be drawn by the next call of\n [`draw_queued`](struct.GlyphBrush.html#method.draw_queued). Can be\n called multiple times to queue multiple sections for drawing.","sig":null,"attributes":[{"value":"/ Queues a section/layout to be drawn by the next call of","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":1326,"byte_end":1385,"line_start":39,"line_end":39,"column_start":5,"column_end":64}},{"value":"/ [`draw_queued`](struct.GlyphBrush.html#method.draw_queued). Can be","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":1390,"byte_end":1460,"line_start":40,"line_end":40,"column_start":5,"column_end":75}},{"value":"/ called multiple times to queue multiple sections for drawing.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":1465,"byte_end":1530,"line_start":41,"line_end":41,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":1535,"byte_end":1538,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ Benefits from caching, see [caching behaviour](#caching-behaviour).","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":1543,"byte_end":1614,"line_start":43,"line_end":43,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":1619,"byte_end":1628,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":2281,"byte_end":2300,"line_start":62,"line_end":62,"column_start":12,"column_end":31},"name":"queue_custom_layout","qualname":"<GlyphBrush<Depth, F, H>>::queue_custom_layout","value":"pub fn queue_custom_layout<'a, S, G>(&mut Self, S, &G) where\nG: GlyphPositioner, S: Into<Cow>","parent":null,"children":[],"decl_id":null,"docs":" Queues a section/layout to be drawn by the next call of\n [`draw_queued`](struct.GlyphBrush.html#method.draw_queued). Can be\n called multiple times to queue multiple sections for drawing.","sig":null,"attributes":[{"value":"/ Queues a section/layout to be drawn by the next call of","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":1782,"byte_end":1841,"line_start":52,"line_end":52,"column_start":5,"column_end":64}},{"value":"/ [`draw_queued`](struct.GlyphBrush.html#method.draw_queued). Can be","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":1846,"byte_end":1916,"line_start":53,"line_end":53,"column_start":5,"column_end":75}},{"value":"/ called multiple times to queue multiple sections for drawing.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":1921,"byte_end":1986,"line_start":54,"line_end":54,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":1991,"byte_end":1994,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Used to provide custom `GlyphPositioner` logic, if using built-in","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":1999,"byte_end":2068,"line_start":56,"line_end":56,"column_start":5,"column_end":74}},{"value":"/ [`Layout`](enum.Layout.html) simply use","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":2073,"byte_end":2116,"line_start":57,"line_end":57,"column_start":5,"column_end":48}},{"value":"/ [`queue`](struct.GlyphBrush.html#method.queue)","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":2121,"byte_end":2171,"line_start":58,"line_end":58,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":2176,"byte_end":2179,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Benefits from caching, see [caching behaviour](#caching-behaviour).","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":2184,"byte_end":2255,"line_start":60,"line_end":60,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":2260,"byte_end":2269,"line_start":61,"line_end":61,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":2743,"byte_end":2763,"line_start":77,"line_end":77,"column_start":12,"column_end":32},"name":"queue_pre_positioned","qualname":"<GlyphBrush<Depth, F, H>>::queue_pre_positioned","value":"pub fn queue_pre_positioned(&mut Self, Vec<SectionGlyph>, Vec<Extra>, Rect)","parent":null,"children":[],"decl_id":null,"docs":" Queues pre-positioned glyphs to be processed by the next call of\n [`draw_queued`](struct.GlyphBrush.html#method.draw_queued). Can be\n called multiple times.\n","sig":null,"attributes":[{"value":"/ Queues pre-positioned glyphs to be processed by the next call of","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":2543,"byte_end":2611,"line_start":73,"line_end":73,"column_start":5,"column_end":73}},{"value":"/ [`draw_queued`](struct.GlyphBrush.html#method.draw_queued). Can be","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":2616,"byte_end":2686,"line_start":74,"line_end":74,"column_start":5,"column_end":75}},{"value":"/ called multiple times.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":2691,"byte_end":2717,"line_start":75,"line_end":75,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":2722,"byte_end":2731,"line_start":76,"line_end":76,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":3230,"byte_end":3255,"line_start":92,"line_end":92,"column_start":12,"column_end":37},"name":"keep_cached_custom_layout","qualname":"<GlyphBrush<Depth, F, H>>::keep_cached_custom_layout","value":"pub fn keep_cached_custom_layout<'a, S, G>(&mut Self, S, &G) where\nS: Into<Cow>, G: GlyphPositioner","parent":null,"children":[],"decl_id":null,"docs":" Retains the section in the cache as if it had been used in the last\n draw-frame.","sig":null,"attributes":[{"value":"/ Retains the section in the cache as if it had been used in the last","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":2956,"byte_end":3027,"line_start":86,"line_end":86,"column_start":5,"column_end":76}},{"value":"/ draw-frame.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":3032,"byte_end":3047,"line_start":87,"line_end":87,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":3052,"byte_end":3055,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ Should not be necessary unless using multiple draws per frame with","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":3060,"byte_end":3130,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ distinct transforms, see [caching behaviour](#caching-behaviour).","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":3135,"byte_end":3204,"line_start":90,"line_end":90,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":3209,"byte_end":3218,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":3791,"byte_end":3802,"line_start":110,"line_end":110,"column_start":12,"column_end":23},"name":"keep_cached","qualname":"<GlyphBrush<Depth, F, H>>::keep_cached","value":"pub fn keep_cached<'a, S>(&mut Self, S) where S: Into<Cow>","parent":null,"children":[],"decl_id":null,"docs":" Retains the section in the cache as if it had been used in the last\n draw-frame.","sig":null,"attributes":[{"value":"/ Retains the section in the cache as if it had been used in the last","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":3517,"byte_end":3588,"line_start":104,"line_end":104,"column_start":5,"column_end":76}},{"value":"/ draw-frame.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":3593,"byte_end":3608,"line_start":105,"line_end":105,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":3613,"byte_end":3616,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ Should not be necessary unless using multiple draws per frame with","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":3621,"byte_end":3691,"line_start":107,"line_end":107,"column_start":5,"column_end":75}},{"value":"/ distinct transforms, see [caching behaviour](#caching-behaviour).","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":3696,"byte_end":3765,"line_start":108,"line_end":108,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":3770,"byte_end":3779,"line_start":109,"line_end":109,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":4075,"byte_end":4080,"line_start":121,"line_end":121,"column_start":12,"column_end":17},"name":"fonts","qualname":"<GlyphBrush<Depth, F, H>>::fonts","value":"pub fn fonts(&Self) -> &[F]","parent":null,"children":[],"decl_id":null,"docs":" Returns the available fonts.","sig":null,"attributes":[{"value":"/ Returns the available fonts.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":3945,"byte_end":3977,"line_start":117,"line_end":117,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":3982,"byte_end":3985,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ The `FontId` corresponds to the index of the font data.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":3990,"byte_end":4049,"line_start":119,"line_end":119,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":4054,"byte_end":4063,"line_start":120,"line_end":120,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":4306,"byte_end":4314,"line_start":128,"line_end":128,"column_start":12,"column_end":20},"name":"add_font","qualname":"<GlyphBrush<Depth, F, H>>::add_font","value":"pub fn add_font(&mut Self, F) -> FontId","parent":null,"children":[],"decl_id":null,"docs":" Adds an additional font to the one(s) initially added on build.","sig":null,"attributes":[{"value":"/ Adds an additional font to the one(s) initially added on build.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":4142,"byte_end":4209,"line_start":125,"line_end":125,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":4214,"byte_end":4217,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ Returns a new [`FontId`](struct.FontId.html) to reference this font.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":4222,"byte_end":4294,"line_start":127,"line_end":127,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":8294,"byte_end":8305,"line_start":243,"line_end":243,"column_start":12,"column_end":23},"name":"draw_queued","qualname":"<GlyphBrush<(), F, H>>::draw_queued","value":"pub fn draw_queued(&mut Self, &wgpu::Device, &mut wgpu::util::StagingBelt,\n                   &mut wgpu::CommandEncoder, &wgpu::TextureView, u32, u32)\n-> Result<(), String>","parent":null,"children":[],"decl_id":null,"docs":" Draws all queued sections onto a render target.\n See [`queue`](struct.GlyphBrush.html#method.queue).","sig":null,"attributes":[{"value":"/ Draws all queued sections onto a render target.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":7816,"byte_end":7867,"line_start":232,"line_end":232,"column_start":5,"column_end":56}},{"value":"/ See [`queue`](struct.GlyphBrush.html#method.queue).","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":7872,"byte_end":7927,"line_start":233,"line_end":233,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":7932,"byte_end":7935,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ It __does not__ submit the encoder command buffer to the device queue.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":7940,"byte_end":8014,"line_start":235,"line_end":235,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":8019,"byte_end":8022,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ Trims the cache, see [caching behaviour](#caching-behaviour).","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":8027,"byte_end":8092,"line_start":237,"line_end":237,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":8097,"byte_end":8100,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":8105,"byte_end":8117,"line_start":239,"line_end":239,"column_start":5,"column_end":17}},{"value":"/ Panics if the provided `target` has a texture format that does not match","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":8122,"byte_end":8198,"line_start":240,"line_end":240,"column_start":5,"column_end":81}},{"value":"/ the `render_format` provided on creation of the `GlyphBrush`.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":8203,"byte_end":8268,"line_start":241,"line_end":241,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":8273,"byte_end":8282,"line_start":242,"line_end":242,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":9326,"byte_end":9352,"line_start":273,"line_end":273,"column_start":12,"column_end":38},"name":"draw_queued_with_transform","qualname":"<GlyphBrush<(), F, H>>::draw_queued_with_transform","value":"pub fn draw_queued_with_transform(&mut Self, &wgpu::Device,\n                                  &mut wgpu::util::StagingBelt,\n                                  &mut wgpu::CommandEncoder,\n                                  &wgpu::TextureView, [f32; ])\n-> Result<(), String>","parent":null,"children":[],"decl_id":null,"docs":" Draws all queued sections onto a render target, applying a position\n transform (e.g. a projection).\n See [`queue`](struct.GlyphBrush.html#method.queue).","sig":null,"attributes":[{"value":"/ Draws all queued sections onto a render target, applying a position","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":8789,"byte_end":8860,"line_start":261,"line_end":261,"column_start":5,"column_end":76}},{"value":"/ transform (e.g. a projection).","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":8865,"byte_end":8899,"line_start":262,"line_end":262,"column_start":5,"column_end":39}},{"value":"/ See [`queue`](struct.GlyphBrush.html#method.queue).","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":8904,"byte_end":8959,"line_start":263,"line_end":263,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":8964,"byte_end":8967,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ It __does not__ submit the encoder command buffer to the device queue.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":8972,"byte_end":9046,"line_start":265,"line_end":265,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":9051,"byte_end":9054,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ Trims the cache, see [caching behaviour](#caching-behaviour).","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":9059,"byte_end":9124,"line_start":267,"line_end":267,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":9129,"byte_end":9132,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":9137,"byte_end":9149,"line_start":269,"line_end":269,"column_start":5,"column_end":17}},{"value":"/ Panics if the provided `target` has a texture format that does not match","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":9154,"byte_end":9230,"line_start":270,"line_end":270,"column_start":5,"column_end":81}},{"value":"/ the `render_format` provided on creation of the `GlyphBrush`.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":9235,"byte_end":9300,"line_start":271,"line_end":271,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":9305,"byte_end":9314,"line_start":272,"line_end":272,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":10411,"byte_end":10452,"line_start":306,"line_end":306,"column_start":12,"column_end":53},"name":"draw_queued_with_transform_and_scissoring","qualname":"<GlyphBrush<(), F, H>>::draw_queued_with_transform_and_scissoring","value":"pub fn draw_queued_with_transform_and_scissoring(&mut Self, &wgpu::Device,\n                                                 &mut wgpu::util::StagingBelt,\n                                                 &mut wgpu::CommandEncoder,\n                                                 &wgpu::TextureView, [f32; ],\n                                                 Region) -> Result<(), String>","parent":null,"children":[],"decl_id":null,"docs":" Draws all queued sections onto a render target, applying a position\n transform (e.g. a projection) and a scissoring region.\n See [`queue`](struct.GlyphBrush.html#method.queue).","sig":null,"attributes":[{"value":"/ Draws all queued sections onto a render target, applying a position","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":9850,"byte_end":9921,"line_start":294,"line_end":294,"column_start":5,"column_end":76}},{"value":"/ transform (e.g. a projection) and a scissoring region.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":9926,"byte_end":9984,"line_start":295,"line_end":295,"column_start":5,"column_end":63}},{"value":"/ See [`queue`](struct.GlyphBrush.html#method.queue).","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":9989,"byte_end":10044,"line_start":296,"line_end":296,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":10049,"byte_end":10052,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ It __does not__ submit the encoder command buffer to the device queue.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":10057,"byte_end":10131,"line_start":298,"line_end":298,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":10136,"byte_end":10139,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ Trims the cache, see [caching behaviour](#caching-behaviour).","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":10144,"byte_end":10209,"line_start":300,"line_end":300,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":10214,"byte_end":10217,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":10222,"byte_end":10234,"line_start":302,"line_end":302,"column_start":5,"column_end":17}},{"value":"/ Panics if the provided `target` has a texture format that does not match","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":10239,"byte_end":10315,"line_start":303,"line_end":303,"column_start":5,"column_end":81}},{"value":"/ the `render_format` provided on creation of the `GlyphBrush`.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":10320,"byte_end":10385,"line_start":304,"line_end":304,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":10390,"byte_end":10399,"line_start":305,"line_end":305,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":12243,"byte_end":12254,"line_start":363,"line_end":363,"column_start":12,"column_end":23},"name":"draw_queued","qualname":"<GlyphBrush<wgpu::DepthStencilState, F, H>>::draw_queued","value":"pub fn draw_queued(&mut Self, &wgpu::Device, &mut wgpu::util::StagingBelt,\n                   &mut wgpu::CommandEncoder, &wgpu::TextureView,\n                   wgpu::RenderPassDepthStencilAttachmentDescriptor, u32, u32)\n-> Result<(), String>","parent":null,"children":[],"decl_id":null,"docs":" Draws all queued sections onto a render target.\n See [`queue`](struct.GlyphBrush.html#method.queue).","sig":null,"attributes":[{"value":"/ Draws all queued sections onto a render target.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":11765,"byte_end":11816,"line_start":352,"line_end":352,"column_start":5,"column_end":56}},{"value":"/ See [`queue`](struct.GlyphBrush.html#method.queue).","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":11821,"byte_end":11876,"line_start":353,"line_end":353,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":11881,"byte_end":11884,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ It __does not__ submit the encoder command buffer to the device queue.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":11889,"byte_end":11963,"line_start":355,"line_end":355,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":11968,"byte_end":11971,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ Trims the cache, see [caching behaviour](#caching-behaviour).","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":11976,"byte_end":12041,"line_start":357,"line_end":357,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":12046,"byte_end":12049,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":12054,"byte_end":12066,"line_start":359,"line_end":359,"column_start":5,"column_end":17}},{"value":"/ Panics if the provided `target` has a texture format that does not match","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":12071,"byte_end":12147,"line_start":360,"line_end":360,"column_start":5,"column_end":81}},{"value":"/ the `render_format` provided on creation of the `GlyphBrush`.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":12152,"byte_end":12217,"line_start":361,"line_end":361,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":12222,"byte_end":12231,"line_start":362,"line_end":362,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":13397,"byte_end":13423,"line_start":395,"line_end":395,"column_start":12,"column_end":38},"name":"draw_queued_with_transform","qualname":"<GlyphBrush<wgpu::DepthStencilState, F, H>>::draw_queued_with_transform","value":"pub fn draw_queued_with_transform(&mut Self, &wgpu::Device,\n                                  &mut wgpu::util::StagingBelt,\n                                  &mut wgpu::CommandEncoder,\n                                  &wgpu::TextureView,\n                                  wgpu::RenderPassDepthStencilAttachmentDescriptor,\n                                  [f32; ]) -> Result<(), String>","parent":null,"children":[],"decl_id":null,"docs":" Draws all queued sections onto a render target, applying a position\n transform (e.g. a projection).\n See [`queue`](struct.GlyphBrush.html#method.queue).","sig":null,"attributes":[{"value":"/ Draws all queued sections onto a render target, applying a position","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":12860,"byte_end":12931,"line_start":383,"line_end":383,"column_start":5,"column_end":76}},{"value":"/ transform (e.g. a projection).","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":12936,"byte_end":12970,"line_start":384,"line_end":384,"column_start":5,"column_end":39}},{"value":"/ See [`queue`](struct.GlyphBrush.html#method.queue).","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":12975,"byte_end":13030,"line_start":385,"line_end":385,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":13035,"byte_end":13038,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ It __does not__ submit the encoder command buffer to the device queue.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":13043,"byte_end":13117,"line_start":387,"line_end":387,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":13122,"byte_end":13125,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ Trims the cache, see [caching behaviour](#caching-behaviour).","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":13130,"byte_end":13195,"line_start":389,"line_end":389,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":13200,"byte_end":13203,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":13208,"byte_end":13220,"line_start":391,"line_end":391,"column_start":5,"column_end":17}},{"value":"/ Panics if the provided `target` has a texture format that does not match","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":13225,"byte_end":13301,"line_start":392,"line_end":392,"column_start":5,"column_end":81}},{"value":"/ the `render_format` provided on creation of the `GlyphBrush`.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":13306,"byte_end":13371,"line_start":393,"line_end":393,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":13376,"byte_end":13385,"line_start":394,"line_end":394,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":14604,"byte_end":14645,"line_start":430,"line_end":430,"column_start":12,"column_end":53},"name":"draw_queued_with_transform_and_scissoring","qualname":"<GlyphBrush<wgpu::DepthStencilState, F, H>>::draw_queued_with_transform_and_scissoring","value":"pub fn draw_queued_with_transform_and_scissoring(&mut Self, &wgpu::Device,\n                                                 &mut wgpu::util::StagingBelt,\n                                                 &mut wgpu::CommandEncoder,\n                                                 &wgpu::TextureView,\n                                                 wgpu::RenderPassDepthStencilAttachmentDescriptor,\n                                                 [f32; ], Region)\n-> Result<(), String>","parent":null,"children":[],"decl_id":null,"docs":" Draws all queued sections onto a render target, applying a position\n transform (e.g. a projection) and a scissoring region.\n See [`queue`](struct.GlyphBrush.html#method.queue).","sig":null,"attributes":[{"value":"/ Draws all queued sections onto a render target, applying a position","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":14043,"byte_end":14114,"line_start":418,"line_end":418,"column_start":5,"column_end":76}},{"value":"/ transform (e.g. a projection) and a scissoring region.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":14119,"byte_end":14177,"line_start":419,"line_end":419,"column_start":5,"column_end":63}},{"value":"/ See [`queue`](struct.GlyphBrush.html#method.queue).","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":14182,"byte_end":14237,"line_start":420,"line_end":420,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":14242,"byte_end":14245,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ It __does not__ submit the encoder command buffer to the device queue.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":14250,"byte_end":14324,"line_start":422,"line_end":422,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":14329,"byte_end":14332,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ Trims the cache, see [caching behaviour](#caching-behaviour).","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":14337,"byte_end":14402,"line_start":424,"line_end":424,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":14407,"byte_end":14410,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":14415,"byte_end":14427,"line_start":426,"line_end":426,"column_start":5,"column_end":17}},{"value":"/ Panics if the provided `target` has a texture format that does not match","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":14432,"byte_end":14508,"line_start":427,"line_end":427,"column_start":5,"column_end":81}},{"value":"/ the `render_format` provided on creation of the `GlyphBrush`.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":14513,"byte_end":14578,"line_start":428,"line_end":428,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":14583,"byte_end":14592,"line_start":429,"line_end":429,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":202},"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":15366,"byte_end":15389,"line_start":457,"line_end":457,"column_start":8,"column_end":31},"name":"orthographic_projection","qualname":"::orthographic_projection","value":"pub fn orthographic_projection(u32, u32) -> [f32; ]","parent":null,"children":[],"decl_id":null,"docs":" Helper function to generate a generate a transform matrix.\n","sig":null,"attributes":[{"value":"/ Helper function to generate a generate a transform matrix.","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":15296,"byte_end":15358,"line_start":456,"line_end":456,"column_start":1,"column_end":63}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","byte_start":17132,"byte_end":17149,"line_start":17,"line_end":17,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":19}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","byte_start":17384,"byte_end":17401,"line_start":28,"line_end":28,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":21},{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","byte_start":17966,"byte_end":17983,"line_start":45,"line_end":45,"column_start":34,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","byte_start":19841,"byte_end":19858,"line_start":105,"line_end":105,"column_start":38,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","byte_start":20358,"byte_end":20375,"line_start":123,"line_end":123,"column_start":5,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/pipeline/cache.rs","byte_start":37168,"byte_end":37173,"line_start":10,"line_end":10,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/pipeline.rs","byte_start":21489,"byte_end":21497,"line_start":26,"line_end":26,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/pipeline.rs","byte_start":22358,"byte_end":22366,"line_start":66,"line_end":66,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/pipeline.rs","byte_start":23461,"byte_end":23469,"line_start":108,"line_end":108,"column_start":13,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":94},{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/pipeline.rs","byte_start":35025,"byte_end":35033,"line_start":467,"line_end":467,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":1296,"byte_end":1306,"line_start":38,"line_end":38,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":161},{"krate":0,"index":164},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":173},{"krate":0,"index":176},{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":4410,"byte_end":4420,"line_start":133,"line_end":133,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":7201,"byte_end":7211,"line_start":211,"line_end":211,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":11017,"byte_end":11027,"line_start":329,"line_end":329,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":15683,"byte_end":15693,"line_start":467,"line_end":467,"column_start":55,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":208},{"krate":0,"index":213},{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":16513,"byte_end":16523,"line_start":502,"line_end":502,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","byte_start":17132,"byte_end":17149,"line_start":17,"line_end":17,"column_start":9,"column_end":26},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":9},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","byte_start":17384,"byte_end":17401,"line_start":28,"line_end":28,"column_start":6,"column_end":23},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":9},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","byte_start":17966,"byte_end":17983,"line_start":45,"line_end":45,"column_start":34,"column_end":51},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":9},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","byte_start":19841,"byte_end":19858,"line_start":105,"line_end":105,"column_start":38,"column_end":55},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":9},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/builder.rs","byte_start":20358,"byte_end":20375,"line_start":123,"line_end":123,"column_start":5,"column_end":22},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":9},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/pipeline/cache.rs","byte_start":37168,"byte_end":37173,"line_start":10,"line_end":10,"column_start":6,"column_end":11},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":45},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/pipeline.rs","byte_start":21489,"byte_end":21497,"line_start":26,"line_end":26,"column_start":6,"column_end":14},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":67},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/pipeline.rs","byte_start":22358,"byte_end":22366,"line_start":66,"line_end":66,"column_start":6,"column_end":14},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":67},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/pipeline.rs","byte_start":23461,"byte_end":23469,"line_start":108,"line_end":108,"column_start":13,"column_end":21},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":67},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/pipeline.rs","byte_start":35025,"byte_end":35033,"line_start":467,"line_end":467,"column_start":6,"column_end":14},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":229},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":1296,"byte_end":1306,"line_start":38,"line_end":38,"column_start":38,"column_end":48},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":151},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":4410,"byte_end":4420,"line_start":133,"line_end":133,"column_start":15,"column_end":25},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":151},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":7201,"byte_end":7211,"line_start":211,"line_end":211,"column_start":38,"column_end":48},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":151},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":11017,"byte_end":11027,"line_start":329,"line_end":329,"column_start":38,"column_end":48},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":151},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":15683,"byte_end":15693,"line_start":467,"line_end":467,"column_start":55,"column_end":65},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":151},"to":{"krate":18,"index":226}},{"span":{"file_name":"/home/sna/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.11.0/src/lib.rs","byte_start":16513,"byte_end":16523,"line_start":502,"line_end":502,"column_start":32,"column_end":42},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":151},"to":{"krate":2,"index":6831}}]}